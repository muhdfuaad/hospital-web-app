{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/lib/axios.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"https://localhost:7112\", // update to your .NET API URL\r\n});\r\n\r\n// // ✅ Automatically attach JWT token\r\n// API.interceptors.request.use((config) => {\r\n//   const token = localStorage.getItem(\"token\");\r\n\r\n//   if (token) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//   }\r\n\r\n//   return config;\r\n// });\r\n\r\nexport default API;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;uCAae","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/app/%28dashboard%29/doctorsreview/page.tsx"],"sourcesContent":["'use client';\r\nimport { createPortal } from 'react-dom';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useSearchParams, useRouter } from 'next/navigation'\r\nimport API from '@/lib/axios';\r\n\r\nimport { User, Calendar, Heart, Plus, Trash2, Check, VenetianMask, ChevronDown } from 'lucide-react';\r\n\r\ninterface PatientInfo {\r\n    name: string;\r\n    age: string;\r\n    gender: string;\r\n}\r\n\r\ninterface Medicine {\r\n    id: number;\r\n    medicineName: string;\r\n}\r\n\r\ninterface Investigation {\r\n    id: number;\r\n    [key: string]: any;\r\n}\r\n\r\n// Medication Types\r\ninterface Medication {\r\n    id: number;\r\n    medicine: string;\r\n    prescription: string;\r\n    remarks: string;\r\n}\r\n\r\ninterface DoctorsReviewFormData {\r\n    patientId: string;\r\n    reviewId: string;\r\n    date: string;\r\n    investigations?: { id: number; investigation: string; findings: string }[];\r\n    medications?: { id: number; medicine: string; prescription: string; remarks: string }[];\r\n}\r\n\r\nconst DoctorsReviewForm = () => {\r\n\r\n    const [formData, setFormData] = useState<DoctorsReviewFormData>({\r\n        patientId: '',\r\n        reviewId: '',\r\n        date: new Date().toISOString().split('T')[0],\r\n        investigations: [{ id: 1, investigation: '', findings: '' }],\r\n        medications: [{ id: 1, medicine: '', prescription: '', remarks: '' }]\r\n    });\r\n\r\n    const [assignmentId, setAssignmentId] = useState<string | null>(null);\r\n    const inputRefs = useRef<Record<number, HTMLInputElement | null>>({});\r\n\r\n    const [patientId, setPatientId] = useState('');\r\n    const [patientInfo, setPatientInfo] = useState<PatientInfo>({\r\n        name: '',\r\n        age: '',\r\n        gender: '',\r\n    });\r\n\r\n    // Medicine dropdown states\r\n    const [medicines, setMedicines] = useState<Medicine[]>([]);\r\n    const [editingItemId, setEditingItemId] = useState<number | null>(null);\r\n    const [medicineDropdownOpen, setMedicineDropdownOpen] = useState<{ [key: number]: boolean }>({});\r\n\r\n    // Prescription dropdown options\r\n    const prescriptionOptions = [\r\n        '1-0-0', '0-1-0', '0-0-1', '1-1-0', '1-0-1', '0-1-1', '1-1-1', '1-1-0-0', '1-0-1-0', '1-0-0-1', '0-1-0-1', '1-1-1-0', '1-1-0-1', '1-0-1-1',\r\n        'As needed', 'Before meals', 'After meals', 'At bedtime', 'Every 4 hours', 'Every 6 hours', 'Every 8 hours', 'Every 12 hours', 'Once daily', 'Twice daily', 'Three times daily', 'Four times daily'\r\n    ];\r\n\r\n    // Get today's date in YYYY-MM-DD format\r\n    const getTodaysDate = () => {\r\n        const today = new Date();\r\n        return today.toISOString().split('T')[0];\r\n    };\r\n\r\n    const [medicineSearchTerm, setMedicineSearchTerm] = useState<Record<number, string>>({});\r\n    const [editingItem, setEditingItem] = useState<number | null>(null);\r\n\r\n    const dropdownRefs = useRef<Record<number, HTMLDivElement | null>>({});\r\n    const [noteExists, setNoteExists] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event: MouseEvent) => {\r\n            if (\r\n                editingItem !== null &&\r\n                dropdownRefs.current[editingItem] &&\r\n                !dropdownRefs.current[editingItem]?.contains(event.target as Node)\r\n            ) {\r\n                setEditingItem(null);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }, [editingItem]);\r\n\r\n    const [date, setDate] = useState<string>(getTodaysDate());\r\n    const [investigations, setInvestigations] = useState([\r\n        { id: 1, investigation: '', findings: '' }\r\n    ]);\r\n\r\n    const [medications, setMedications] = useState([\r\n        { id: 1, medicine: '', prescription: '', remarks: '' }\r\n    ]);\r\n\r\n    const [submitMessage, setSubmitMessage] = useState('');\r\n    const [submitStatus, setSubmitStatus] = useState<'success' | 'error' | ''>('');\r\n\r\n    // ✅ Fetch medicines from API\r\n    useEffect(() => {\r\n        const fetchMedicines = async () => {\r\n            try {\r\n                const response = await API.get('/api/Medicines/dropdown');\r\n                const data = response.data as any[];\r\n\r\n                if (Array.isArray(data)) {\r\n                    setMedicines(data);\r\n                } else {\r\n                    console.warn('Invalid medicine data format', data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching medicines:', error);\r\n            }\r\n        };\r\n\r\n        fetchMedicines();\r\n    }, []);\r\n\r\n    const MedicineDropdown = ({\r\n        itemId,\r\n        medicines,\r\n        onSelect,\r\n        onClose,\r\n        inputElement,\r\n    }: {\r\n        itemId: number;\r\n        medicines: { id: number; medicineName: string }[];\r\n        onSelect: (medicineName: string) => void;\r\n        onClose: () => void;\r\n        inputElement: HTMLInputElement | null;\r\n    }) => {\r\n        const [position, setPosition] = useState({ top: 0, left: 0, width: 0 });\r\n\r\n        useEffect(() => {\r\n            if (!inputElement) return;\r\n            const rect = inputElement.getBoundingClientRect();\r\n            setPosition({\r\n                top: rect.bottom,\r\n                left: rect.left,\r\n                width: rect.width,\r\n            });\r\n        }, [inputElement, medicines]);\r\n\r\n        useEffect(() => {\r\n            function handleClickOutside(event: MouseEvent) {\r\n                const target = event.target as HTMLElement;\r\n                if (\r\n                    !inputElement?.contains(target) &&\r\n                    !target.closest(`#medicine-dropdown-${itemId}`)\r\n                ) {\r\n                    onClose();\r\n                }\r\n            }\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n            return () => document.removeEventListener('mousedown', handleClickOutside);\r\n        }, [inputElement, itemId, onClose]);\r\n\r\n        return createPortal(\r\n            <div\r\n                id={`medicine-dropdown-${itemId}`}\r\n                className=\"bg-white border border-gray-300 rounded shadow max-h-48 overflow-y-auto text-sm z-50\"\r\n                style={{ top: position.top, left: position.left, width: position.width, position: 'absolute' }}\r\n            >\r\n                {medicines.length > 0 ? (\r\n                    medicines.map((med) => (\r\n                        <div\r\n                            key={med.id}\r\n                            className=\"px-3 py-2 hover:bg-blue-100 cursor-pointer\"\r\n                            onMouseDown={(e) => e.preventDefault()} // keep input focus\r\n                            onClick={() => onSelect(med.medicineName)}\r\n                        >\r\n                            {med.medicineName}\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <div className=\"px-3 py-2 text-gray-500\">No results found</div>\r\n                )}\r\n            </div>,\r\n            document.body\r\n        );\r\n    };\r\n\r\n    // Filter medicines based on search term\r\n    const getFilteredMedicines = (medicationId: number) => {\r\n        const searchTerm = medicineSearchTerm[medicationId] || '';\r\n        return medicines.filter((medicine) => {\r\n            if (!medicine || !medicine.medicineName) return false;\r\n            return medicine.medicineName.toLowerCase().startsWith(searchTerm.toLowerCase());\r\n        });\r\n    };\r\n\r\n    const addInvestigation = () => {\r\n        const newId = investigations.length + 1;\r\n        setInvestigations([...investigations, { id: newId, investigation: '', findings: '' }]);\r\n    };\r\n\r\n    // Fix for investigation functions\r\n    const removeInvestigation = (id: number) => {\r\n        if (investigations.length > 1) {\r\n            setInvestigations(investigations.filter(item => item.id !== id));\r\n        }\r\n    };\r\n\r\n    const updateInvestigation = (id: number, field: keyof Investigation, value: any) => {\r\n        setInvestigations(investigations.map(item =>\r\n            item.id === id ? { ...item, [field]: value } : item\r\n        ));\r\n    };\r\n\r\n    // Fix for medication functions\r\n    const addMedication = () => {\r\n        const newId = medications.length + 1;\r\n        setMedications([...medications, { id: newId, medicine: '', prescription: '', remarks: '' }]);\r\n    };\r\n\r\n    const removeMedication = (id: number) => {\r\n        if (medications.length > 1) {\r\n            setMedications(medications.filter(item => item.id !== id));\r\n            // Clean up dropdown states for removed medication\r\n            setMedicineDropdownOpen(prev => {\r\n                const newState = { ...prev };\r\n                delete newState[id];\r\n                return newState;\r\n            });\r\n            setMedicineSearchTerm(prev => {\r\n                const newState = { ...prev };\r\n                delete newState[id];\r\n                return newState;\r\n            });\r\n        }\r\n    };\r\n\r\n    const updateMedication = (id: number, field: keyof Medication, value: string) => {\r\n        setMedications(medications.map(item =>\r\n            item.id === id ? { ...item, [field]: value } : item\r\n        ));\r\n    };\r\n\r\n    const searchParams = useSearchParams();\r\n    const router = useRouter();\r\n    const isEditMode = !!formData.reviewId;\r\n\r\n\r\n    // ✅ Fetch assignmentId + patientId + basic info\r\n    useEffect(() => {\r\n        const assignment = searchParams.get('assignmentId');\r\n        if (!assignment) return;\r\n\r\n        if (assignmentId === assignment) return;\r\n\r\n        setAssignmentId(assignment);\r\n\r\n        const fetchAssignmentAndPatient = async () => {\r\n            try {\r\n                // ✅ Fetch assignment info\r\n                const assignmentRes = await API.get(`/api/PatientAssignments/byAssignmentId/${assignment}`);\r\n                const assignmentData = assignmentRes.data as any;\r\n\r\n                if (!assignmentData?.patientId) return;\r\n\r\n                setPatientId(assignmentData.patientId);\r\n                setFormData(prev => ({\r\n                    ...prev,\r\n                    reviewId: assignment,\r\n                    patientId: assignmentData.patientId\r\n                }));\r\n\r\n                // ✅ Fetch patient info using patientId\r\n                const patientRes = await API.get(`/api/Hpforms/patient/${assignmentData.patientId}`);\r\n                const patientData = patientRes.data as any;\r\n\r\n                if (!patientData) return;\r\n\r\n                setPatientInfo({\r\n                    name: patientData.name || '',\r\n                    age: patientData.age || '',\r\n                    gender: patientData.gender || ''\r\n                });\r\n            } catch (err) {\r\n                console.error('Failed to fetch assignment or patient data:', err);\r\n            }\r\n        };\r\n\r\n        fetchAssignmentAndPatient();\r\n    }, [searchParams, assignmentId]);\r\n\r\n    useEffect(() => {\r\n        const initialTerms: Record<number, string> = {};\r\n        medications.forEach((item) => {\r\n            if (item.medicine) {\r\n                initialTerms[item.id] = item.medicine;\r\n            }\r\n        });\r\n        setMedicineSearchTerm(initialTerms);\r\n    }, [medications]);\r\n\r\n    useEffect(() => {\r\n        const assignmentId = searchParams.get(\"assignmentId\");\r\n\r\n        if (!assignmentId) return;\r\n\r\n        const fetchReview = async () => {\r\n            try {\r\n                const res = await API.get(`/api/DoctorsReviews/review/${assignmentId}`);\r\n\r\n                if (\r\n                    res.status === 204 ||\r\n                    !res.data ||\r\n                    (Array.isArray(res.data) && res.data.length === 0)\r\n                ) {\r\n                    console.log(\"🆕 No DoctorReview found — this is a new entry.\");\r\n                    setNoteExists(false);\r\n                    return;\r\n                }\r\n\r\n                const review = Array.isArray(res.data) ? res.data[0] : res.data;\r\n                setNoteExists(true);\r\n\r\n                setFormData((prev) => ({\r\n                    ...prev,\r\n                    reviewId: review.reviewId || \"\",\r\n                    patientId: review.patientId || \"\",\r\n                    date: review.date?.split(\"T\")[0] || \"\",\r\n                }));\r\n\r\n                // Set investigations\r\n                if (Array.isArray(review.investigations)) {\r\n                    setInvestigations(\r\n                        review.investigations.map((inv: any) => ({\r\n                            id: inv?.id ?? 0,\r\n                            investigation: inv?.investigationName ?? \"\",\r\n                            findings: inv?.findings ?? \"\",\r\n                        }))\r\n                    );\r\n                }\r\n\r\n                // Set medications\r\n                if (Array.isArray(review.medications)) {\r\n                    setMedications(\r\n                        review.medications.map((med: any) => ({\r\n                            id: med?.id ?? 0,\r\n                            medicine: med?.medicine ?? \"\",\r\n                            prescription: med?.prescription ?? \"\",\r\n                            remarks: med?.remarks ?? \"\",\r\n                        }))\r\n                    );\r\n                }\r\n\r\n            } catch (err: any) {\r\n                if (err.response?.status === 404) {\r\n                    console.log(\"🆕 No DoctorReview found — starting new entry.\");\r\n                    setNoteExists(false);\r\n                } else {\r\n                    console.error(\"Error loading review data:\", err);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchReview();\r\n    }, [searchParams]);\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        const reviewId = formData.reviewId;\r\n\r\n        const dataToSend = {\r\n            reviewId,\r\n            patientId: formData.patientId,\r\n            date: formData.date,\r\n            investigations: investigations.map(inv => ({\r\n                id: inv.id, // ✅ PRESERVE ID\r\n                investigationName: inv.investigation,\r\n                findings: inv.findings\r\n            })),\r\n            medications: medications.map(med => ({\r\n                id: med.id, // ✅ PRESERVE ID\r\n                medicine: med.medicine,\r\n                prescription: med.prescription,\r\n                remarks: med.remarks\r\n            }))\r\n        };\r\n\r\n        try {\r\n            const isEditMode = noteExists;\r\n\r\n            const url = isEditMode\r\n                ? `/api/DoctorsReviews/byReviewId/${formData.reviewId}`\r\n                : `/api/DoctorsReviews`;\r\n\r\n            if (isEditMode) {\r\n                await API.put(url, dataToSend);\r\n            } else {\r\n                await API.post(url, dataToSend);\r\n            }\r\n\r\n            setSubmitMessage(`Doctor's Review ${isEditMode ? 'updated' : 'created'} successfully!`);\r\n            setSubmitStatus('success');\r\n\r\n            setTimeout(() => {\r\n                router.push(`/doctor-consultations/details?patientId=${patientId}&assignmentId=${assignmentId}&refresh=1`);\r\n            }, 1000);\r\n\r\n        } catch (error: any) {\r\n            console.error(\"Submit error:\", error);\r\n            setSubmitMessage('An error occurred while submitting the form.');\r\n            setSubmitStatus('error');\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setSubmitMessage('');\r\n            setSubmitStatus('');\r\n        }, 3000);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"min-h-screen w-full max-w-screen bg-gradient-to-br from-blue-50 to-blue-100 px-0 sm:px-0 py-0\">\r\n            {/* Header */}\r\n            <div className=\"bg-gradient-to-r from-blue-900 to-blue-700 text-white p-4 text-center sm:p-6 shadow-lg\">\r\n                <div className=\"flex justify-center items-center gap-3 mb-3\">\r\n                    <h1 className=\"text-2xl sm:text-3xl font-light\">Doctor's Review</h1>\r\n                    <Heart className=\"w-6 h-6 text-blue-200\" />\r\n                </div>\r\n                <p className=\"text-sm sm:text-lg text-blue-200\">\r\n                    Patient Diagnosis Investigations & Medical Assessments\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"p-5\">\r\n                {/* Patient and Review IDs and Date */}\r\n                <div className=\"text-sm sm:text-base font-medium text-blue-900 mb-4 px-2 sm:px-4\">\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                        {/* Patient ID */}\r\n                        <div className=\"flex justify-start\">\r\n                            <div className=\"flex items-center gap-2 bg-blue-50 text-blue-900 px-3 py-1.5 rounded-lg shadow-sm border border-blue-200 w-fit max-w-xs\">\r\n                                <span className=\"font-semibold\">Patient ID:</span>\r\n                                <span className=\"text-sm\">{formData.patientId || '-'}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Review ID */}\r\n                        <div className=\"flex justify-start\">\r\n                            <div className=\"flex items-center gap-2 bg-blue-50 text-blue-900 px-3 py-1.5 rounded-lg shadow-sm border border-blue-200 w-fit max-w-xs\">\r\n                                <span className=\"font-semibold\">Review ID:</span>\r\n                                <span className=\"text-sm\">{formData.reviewId || '-'}</span>\r\n                            </div>\r\n                        </div>\r\n                        {/* Date Picker (right side) */}\r\n                            <div className=\"flex items-center gap-2 bg-blue-50 text-blue-900 px-3 py-1.5 rounded-lg shadow-sm border border-blue-200 w-fit max-w-xs\">\r\n                                <span className=\"font-semibold\">Date :</span>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    value={formData.date}\r\n                                    onChange={(e) => setFormData(prev => ({ ...prev, date: e.target.value }))}\r\n                                    className=\"...\"\r\n                                />\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* 👤 Patient Information Display */}\r\n                <div className=\"bg-white p-4 rounded-lg shadow-sm border border-gray-200\">\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n\r\n                        {/* Name */}\r\n                        <div>\r\n                            <label className=\"block text-s font-semibold mb-1 uppercase tracking-wide\">\r\n                                <span className=\"text-blue-900\">Name :</span>{\" \"}\r\n                                <span className=\"text-blue-600\">\r\n                                    {patientInfo.name + \" / \" + patientInfo.age + \" / \" + patientInfo.gender}\r\n                                </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <form className=\"space-y-8\">\r\n                    {/* Investigations Section */}\r\n                    <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n                        <h2 className=\"text-xl font-bold text-blue-900 mb-4 uppercase tracking-wide text-center\">\r\n                            INVESTIGATIONS\r\n                        </h2>\r\n\r\n                        {/* Outer wrapper: horizontal scroll only, no vertical clipping */}\r\n                        <div className=\"overflow-x-auto overflow-y-visible relative max-h-[400px]\">\r\n                            <table className=\"w-full border-collapse border border-gray-300\">\r\n                                <thead>\r\n                                    <tr className=\"bg-blue-50\">\r\n                                        <th className=\"border border-gray-300 px-3 py-2 text-left font-semibold text-blue-900 w-[5%]\">\r\n                                            SI.No\r\n                                        </th>\r\n                                        <th className=\"border border-gray-300 px-3 py-2 text-left font-semibold text-blue-900 w-[40%]\">\r\n                                            Investigation\r\n                                        </th>\r\n                                        <th className=\"border border-gray-300 px-3 py-2 text-left font-semibold text-blue-900 w-[55%]\">\r\n                                            Findings\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {investigations.map((item, index) => (\r\n                                        <tr key={item.id} className=\"hover:bg-gray-50\">\r\n                                            <td className=\"border border-gray-300 px-3 py-2 text-center\">\r\n                                                {index + 1}\r\n                                            </td>\r\n                                            <td className=\"border border-gray-300 px-3 py-2\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={item.investigation}\r\n                                                    onChange={(e) => updateInvestigation(item.id, 'investigation', e.target.value)}\r\n                                                    className=\"w-full px-2 py-1 border-none focus:outline-none focus:ring-2 focus:ring-blue-200 rounded\"\r\n                                                    placeholder=\"Enter investigation\"\r\n                                                />\r\n                                            </td>\r\n                                            <td className=\"border border-gray-300 px-3 py-2\">\r\n                                                <div className=\"flex gap-2\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        value={item.findings}\r\n                                                        onChange={(e) => updateInvestigation(item.id, 'findings', e.target.value)}\r\n                                                        className=\"w-full px-2 py-1 border-none focus:outline-none focus:ring-2 focus:ring-blue-200 rounded\"\r\n                                                        placeholder=\"Enter findings\"\r\n                                                    />\r\n                                                    {investigations.length > 1 && (\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={() => removeInvestigation(item.id)}\r\n                                                            className=\"text-red-600 hover:text-red-800 p-1\"\r\n                                                        >\r\n                                                            <Trash2 className=\"w-4 h-4\" />\r\n                                                        </button>\r\n                                                    )}\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={addInvestigation}\r\n                            className=\"mt-4 flex items-center gap-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\r\n                        >\r\n                            <Plus className=\"w-4 h-4\" />\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* Medications Section */}\r\n                    <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n                        <h2 className=\"text-xl font-bold text-blue-900 mb-4 uppercase tracking-wide text-center\">\r\n                            MEDICATIONS\r\n                        </h2>\r\n\r\n                        <div className=\"relative overflow-visible\">\r\n                            <div className=\"overflow-x-auto overflow-y-visible relative max-h-[400px]\">\r\n                                <table className=\"w-full border-collapse border border-gray-300\">\r\n                                    <thead>\r\n                                        <tr className=\"bg-blue-50\">\r\n                                            <th className=\"border border-gray-300 px-3 py-2 text-left font-semibold text-blue-900 w-[5%]\">\r\n                                                SI.No\r\n                                            </th>\r\n                                            <th className=\"border border-gray-300 px-3 py-2 text-left font-semibold text-blue-900 w-[30%]\">\r\n                                                Medicines\r\n                                            </th>\r\n                                            <th className=\"border border-gray-300 px-3 py-2 text-left font-semibold text-blue-900 w-[20%]\">\r\n                                                Prescription\r\n                                            </th>\r\n                                            <th className=\"border border-gray-300 px-3 py-2 text-left font-semibold text-blue-900 w-[45%]\">\r\n                                                Remarks\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {medications.map((item, index) => (\r\n                                            <tr key={item.id} className=\"hover:bg-gray-50\">\r\n                                                <td className=\"border border-gray-300 px-3 py-2 text-center\">\r\n                                                    {index + 1}\r\n                                                </td>\r\n\r\n                                                <td className=\"border border-gray-300 px-3 py-2 relative\">\r\n                                                    <input\r\n                                                        ref={el => {\r\n                                                            inputRefs.current[item.id] = el;\r\n                                                        }}\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Search medicine\"\r\n                                                        value={medicineSearchTerm[item.id] || ''}\r\n                                                        onChange={(e) => {\r\n                                                            setMedicineSearchTerm((prev) => ({\r\n                                                                ...prev,\r\n                                                                [item.id]: e.target.value,\r\n                                                            }));\r\n                                                            setEditingItemId(item.id);\r\n                                                        }}\r\n                                                        onFocus={() => setEditingItemId(item.id)}\r\n                                                        onKeyDown={(e) => {\r\n                                                            if (e.key === 'Enter') {\r\n                                                                const filtered = getFilteredMedicines(item.id);\r\n                                                                if (filtered.length > 0) {\r\n                                                                    updateMedication(item.id, 'medicine', filtered[0].medicineName);\r\n                                                                    setMedicineSearchTerm((prev) => ({\r\n                                                                        ...prev,\r\n                                                                        [item.id]: filtered[0].medicineName,\r\n                                                                    }));\r\n                                                                    setEditingItemId(null);\r\n                                                                    e.preventDefault();\r\n                                                                }\r\n                                                            }\r\n                                                        }}\r\n                                                        className=\"w-full px-2 py-1 border border-gray-300 rounded bg-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-200\"\r\n                                                    />\r\n\r\n                                                    {/* Render portal dropdown */}\r\n                                                    {editingItemId === item.id && inputRefs.current[item.id] && (\r\n                                                        <MedicineDropdown\r\n                                                            itemId={item.id}\r\n                                                            medicines={getFilteredMedicines(item.id)}\r\n                                                            onSelect={(medicineName) => {\r\n                                                                updateMedication(item.id, 'medicine', medicineName);\r\n                                                                setMedicineSearchTerm(prev => ({ ...prev, [item.id]: medicineName }));\r\n                                                                setEditingItemId(null);\r\n                                                            }}\r\n                                                            onClose={() => setEditingItemId(null)}\r\n                                                            inputElement={inputRefs.current[item.id]}  // Pass the input element here!\r\n                                                        />\r\n                                                    )}\r\n                                                </td>\r\n\r\n\r\n                                                {/* Prescription Dropdown */}\r\n                                                <td className=\"border border-gray-300 px-3 py-2\">\r\n                                                    <select\r\n                                                        value={item.prescription}\r\n                                                        onChange={(e) =>\r\n                                                            updateMedication(item.id, 'prescription', e.target.value)\r\n                                                        }\r\n                                                        className=\"w-full px-2 py-1 border border-gray-300 rounded bg-white focus:outline-none focus:ring-2 focus:ring-blue-200\"\r\n                                                    >\r\n                                                        <option value=\"\">Select prescription...</option>\r\n                                                        {prescriptionOptions.map((option) => (\r\n                                                            <option key={option} value={option}>\r\n                                                                {option}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </td>\r\n\r\n                                                {/* Remarks Input + Remove */}\r\n                                                <td className=\"border border-gray-300 px-3 py-2\">\r\n                                                    <div className=\"flex gap-2\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            value={item.remarks}\r\n                                                            onChange={(e) =>\r\n                                                                updateMedication(item.id, 'remarks', e.target.value)\r\n                                                            }\r\n                                                            className=\"w-full px-2 py-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-200\"\r\n                                                            placeholder=\"Enter remarks\"\r\n                                                        />\r\n                                                        {medications.length > 1 && (\r\n                                                            <button\r\n                                                                type=\"button\"\r\n                                                                onClick={() => removeMedication(item.id)}\r\n                                                                className=\"text-red-600 hover:text-red-800 p-1\"\r\n                                                            >\r\n                                                                <Trash2 className=\"w-4 h-4\" />\r\n                                                            </button>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Add Medication Button */}\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={addMedication}\r\n                            className=\"mt-4 flex items-center gap-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\r\n                        >\r\n                            <Plus className=\"w-4 h-4\" />\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* Action Buttons */}\r\n                    {/* Submit Status Message */}\r\n                    {submitMessage && (\r\n                        <div\r\n                            className={`mb-4 p-3 rounded-lg text-center text-sm font-semibold ${submitStatus === 'success'\r\n                                ? 'bg-green-100 text-green-800 border border-green-300'\r\n                                : 'bg-red-100 text-red-800 border border-red-300'\r\n                                }`}\r\n                        >\r\n                            {submitMessage}\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Submit Button Section */}\r\n                    <div className=\"flex justify-center pt-6 print:hidden\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            onClick={handleSubmit}\r\n                            disabled={!formData.reviewId || !formData.patientId}\r\n                            className=\"bg-gradient-to-r from-blue-600 to-blue-700 text-white px-8 sm:px-12 py-3 sm:py-4 rounded-xl sm:rounded-2xl text-base sm:text-lg font-semibold hover:from-blue-700 hover:to-blue-800 transition-all duration-300 transform hover:scale-105 shadow-md sm:shadow-xl hover:shadow-lg sm:hover:shadow-2xl flex items-center gap-2 sm:gap-3\"\r\n                        >\r\n                            <Check className=\"w-5 h-5 sm:w-6 sm:h-6\" />\r\n                            {isEditMode ? \"Update\" : \"Submit\"}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoctorsReviewForm;"],"names":[],"mappings":"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","debugId":null}}]
}