{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/lib/axios.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"https://localhost:7112\", // update to your .NET API URL\r\n});\r\n\r\n// // ✅ Automatically attach JWT token\r\n// API.interceptors.request.use((config) => {\r\n//   const token = localStorage.getItem(\"token\");\r\n\r\n//   if (token) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//   }\r\n\r\n//   return config;\r\n// });\r\n\r\nexport default API;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;uCAae","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/app/%28dashboard%29/SalesBill/AddSalesbill/page.tsx"],"sourcesContent":["'use client';\r\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Plus, Save, Trash2, AlertCircle } from 'lucide-react';\r\nimport API from '@/lib/axios';\r\n\r\nconst API_BASE = API.defaults.baseURL;\r\n\r\n// Types\r\ninterface Customer {\r\n    id: number;\r\n    name: string;\r\n    phone: string;\r\n    address: string;\r\n    gstNo?: string;\r\n}\r\n\r\ninterface Medicine {\r\n    id: number;\r\n    itemCode: string;\r\n    medicineName: string;\r\n    type: string;\r\n    packItem: number;\r\n    gst: number;\r\n    hsnCode: string;\r\n    company?: string;\r\n}\r\n\r\ninterface MedicineBatch {\r\n    id: number;\r\n    medicineId: number;\r\n    batchNo: string;\r\n    expiryDate: string;\r\n    currentStock: number;\r\n    purchaseRate: number;\r\n    salesRate: number;\r\n    mrp: number;\r\n    isExpired: boolean;\r\n}\r\n\r\ninterface SalesItem {\r\n    id: number | null;\r\n    medicineId: number;\r\n    itemCode: string;\r\n    medicineName: string;\r\n    batchNo: string;\r\n    expiryDate: string;\r\n    qty: number;\r\n    salesRate: number;\r\n    mrp: number;\r\n    gst: number;\r\n    hsnCode: string;\r\n    discountPercent: number;\r\n    discountAmount: number;\r\n    baseAmount: number;\r\n    gstAmount: number;\r\n    cgstAmount: number;\r\n    sgstAmount: number;\r\n    igstAmount: number;\r\n    totalAmount: number;\r\n    packItem: number;\r\n    currentStock: number;\r\n    company?: string;\r\n}\r\n\r\ninterface SalesBill {\r\n    salesId?: number;\r\n    date: string;\r\n    customerId: number;\r\n    customerName: string;\r\n    customerPhone: string;\r\n    customerAddress: string;\r\n    customerGst?: string;\r\n    paymentType: string;\r\n    taxType: string;\r\n    items: SalesItem[];\r\n    grossTotal: number;\r\n    gstTotal: number;\r\n    cgst: number;\r\n    sgst: number;\r\n    igst: number;\r\n    discount: number;\r\n    roundOff: number;\r\n    finalTotal: number;\r\n    isCancelled?: boolean;\r\n}\r\n\r\ninterface BatchSelectionModalProps {\r\n    isOpen: boolean;\r\n    batches: MedicineBatch[];\r\n    medicineName: string;\r\n    onSelect: (batch: MedicineBatch) => void;\r\n    onClose: () => void;\r\n}\r\n\r\nconst BatchSelectionModal: React.FC<BatchSelectionModalProps> = ({\r\n    isOpen,\r\n    batches,\r\n    medicineName,\r\n    onSelect,\r\n    onClose\r\n}) => {\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n    const modalRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            setSelectedIndex(0);\r\n        }\r\n    }, [isOpen]);\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (e: KeyboardEvent) => {\r\n            if (!isOpen) return;\r\n\r\n            switch (e.key) {\r\n                case 'ArrowUp':\r\n                    e.preventDefault();\r\n                    setSelectedIndex(prev => Math.max(0, prev - 1));\r\n                    break;\r\n                case 'ArrowDown':\r\n                    e.preventDefault();\r\n                    setSelectedIndex(prev => Math.min(batches.length - 1, prev + 1));\r\n                    break;\r\n                case 'Enter':\r\n                    e.preventDefault();\r\n                    if (batches[selectedIndex]) {\r\n                        onSelect(batches[selectedIndex]);\r\n                    }\r\n                    break;\r\n                case 'Escape':\r\n                    e.preventDefault();\r\n                    onClose();\r\n                    break;\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n        return () => document.removeEventListener('keydown', handleKeyDown);\r\n    }, [isOpen, selectedIndex, batches, onSelect, onClose]);\r\n\r\n    if (!isOpen) return null;\r\n\r\n    const formatExpiry = (dateStr: string) => {\r\n        const date = new Date(dateStr);\r\n        return `${String(date.getMonth() + 1).padStart(2, '0')}-${date.getFullYear()}`;\r\n    };\r\n\r\n    const getDaysToExpiry = (dateStr: string) => {\r\n        const today = new Date();\r\n        const expiry = new Date(dateStr);\r\n        const diffTime = expiry.getTime() - today.getTime();\r\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n        return diffDays;\r\n    };\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\r\n            <div ref={modalRef} className=\"bg-white rounded-lg shadow-2xl w-full max-w-2xl max-h-[80vh] overflow-hidden\">\r\n                <div className=\"bg-gradient-to-r from-blue-600 to-blue-800 text-white p-4\">\r\n                    <h3 className=\"text-lg font-semibold\">Select Batch - {medicineName}</h3>\r\n                    <p className=\"text-sm opacity-90 mt-1\">Use arrow keys to navigate, Enter to select, Escape to cancel</p>\r\n                </div>\r\n\r\n                <div className=\"max-h-96 overflow-y-auto\">\r\n                    {batches.map((batch, index) => {\r\n                        const daysToExpiry = getDaysToExpiry(batch.expiryDate);\r\n                        const isExpired = daysToExpiry < 0;\r\n                        const isNearExpiry = daysToExpiry <= 30 && daysToExpiry >= 0;\r\n                        const isSelected = index === selectedIndex;\r\n\r\n                        return (\r\n                            <div\r\n                                key={batch.id}\r\n                                className={`p-3 border-b cursor-pointer transition-colors ${isSelected\r\n                                    ? 'bg-blue-100 border-blue-300'\r\n                                    : 'hover:bg-gray-50'\r\n                                    } ${batch.currentStock === 0 ? 'bg-red-50' : ''\r\n                                    }`}\r\n                                onClick={() => onSelect(batch)}\r\n                            >\r\n                                <div className=\"flex justify-between items-center\">\r\n                                    <div className=\"flex-1\">\r\n                                        <div className=\"flex items-center gap-3\">\r\n                                            <span className=\"font-medium text-gray-900\">\r\n                                                Batch: {batch.batchNo}\r\n                                            </span>\r\n                                            <span className={`text-sm px-2 py-1 rounded ${isExpired\r\n                                                ? 'bg-red-100 text-red-800'\r\n                                                : isNearExpiry\r\n                                                    ? 'bg-yellow-100 text-yellow-800'\r\n                                                    : 'bg-green-100 text-green-800'\r\n                                                }`}>\r\n                                                Exp: {formatExpiry(batch.expiryDate)}\r\n                                            </span>\r\n                                            {isExpired && (\r\n                                                <span className=\"text-xs bg-red-600 text-white px-2 py-1 rounded\">\r\n                                                    EXPIRED\r\n                                                </span>\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"flex items-center gap-4 mt-1 text-sm text-gray-600\">\r\n                                            <span>Stock: <span className={`font-medium ${batch.currentStock === 0 ? 'text-red-600' : 'text-green-600'\r\n                                                }`}>{batch.currentStock}</span></span>\r\n                                            <span>Rate: ₹{batch.salesRate.toFixed(2)}</span>\r\n                                            <span>MRP: ₹{batch.mrp.toFixed(2)}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    {batch.currentStock === 0 && (\r\n                                        <div className=\"flex items-center text-red-600\">\r\n                                            <AlertCircle size={16} />\r\n                                            <span className=\"ml-1 text-xs font-medium\">OUT OF STOCK</span>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"bg-gray-50 px-4 py-3 flex justify-end\">\r\n                    <button\r\n                        onClick={onClose}\r\n                        className=\"px-4 py-2 text-sm font-medium text-gray-600 bg-white border border-gray-300 rounded hover:bg-gray-50 transition-colors\"\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst SalesBillPage: React.FC = () => {\r\n    // State management\r\n    const [salesBill, setSalesBill] = useState<SalesBill>({\r\n        date: new Date().toISOString().split('T')[0],\r\n        customerId: 0,\r\n        customerName: '',\r\n        customerPhone: '',\r\n        customerAddress: '',\r\n        paymentType: 'Cash',\r\n        taxType: 'Intra',\r\n        items: [],\r\n        grossTotal: 0,\r\n        gstTotal: 0,\r\n        cgst: 0,\r\n        sgst: 0,\r\n        igst: 0,\r\n        discount: 0,\r\n        roundOff: 0,\r\n        finalTotal: 0\r\n    });\r\n\r\n    const [customers, setCustomers] = useState<Customer[]>([]);\r\n    const [medicines, setMedicines] = useState<Medicine[]>([]);\r\n    const [medicineBatches, setMedicineBatches] = useState<MedicineBatch[]>([]);\r\n    const [showBatchModal, setShowBatchModal] = useState(false);\r\n    const [selectedBatches, setSelectedBatches] = useState<MedicineBatch[]>([]);\r\n    const [currentMedicineName, setCurrentMedicineName] = useState('');\r\n    const [editingCell, setEditingCell] = useState<{ row: number, col: string } | null>(null);\r\n    const [medicineSearch, setMedicineSearch] = useState('');\r\n    const [customerSearch, setCustomerSearch] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    // Refs for input navigation\r\n    const inputRefs = useRef<{ [key: string]: HTMLInputElement | HTMLSelectElement | null }>({});\r\n\r\n    // Fetch medicines from API\r\n    useEffect(() => {\r\n        const fetchMedicines = async () => {\r\n            try {\r\n                const res = await fetch(`${API_BASE}/api/Medicines/dropdown`);\r\n                if (!res.ok) {\r\n                    throw new Error('Failed to fetch medicines');\r\n                }\r\n                const medicineData = await res.json();\r\n                setMedicines(medicineData);\r\n            } catch (error) {\r\n                console.error('Error fetching medicines:', error);\r\n            }\r\n        };\r\n        fetchMedicines();\r\n    }, []);\r\n\r\n    // Mock data - replace with actual API calls\r\n    useEffect(() => {\r\n        // Load mock data\r\n        setCustomers([\r\n            { id: 1, name: 'Walk-in Customer', phone: '', address: '', gstNo: '' },\r\n            { id: 2, name: 'John Doe', phone: '9876543210', address: '123 Main St', gstNo: '32ABCDE1234F1Z5' },\r\n            { id: 3, name: 'Jane Smith', phone: '9876543211', address: '456 Oak Ave', gstNo: '' }\r\n        ]);\r\n\r\n        setMedicineBatches([\r\n            { id: 1, medicineId: 1, batchNo: 'B001', expiryDate: '2025-12-31', currentStock: 50, purchaseRate: 45, salesRate: 50, mrp: 55, isExpired: false },\r\n            { id: 2, medicineId: 1, batchNo: 'B002', expiryDate: '2024-06-30', currentStock: 20, purchaseRate: 45, salesRate: 50, mrp: 55, isExpired: false },\r\n            { id: 3, medicineId: 2, batchNo: 'B003', expiryDate: '2025-08-15', currentStock: 0, purchaseRate: 80, salesRate: 90, mrp: 95, isExpired: false },\r\n            { id: 4, medicineId: 2, batchNo: 'B004', expiryDate: '2025-10-30', currentStock: 30, purchaseRate: 80, salesRate: 90, mrp: 95, isExpired: false },\r\n            { id: 5, medicineId: 3, batchNo: 'B005', expiryDate: '2025-03-20', currentStock: 15, purchaseRate: 120, salesRate: 140, mrp: 150, isExpired: false }\r\n        ]);\r\n    }, []);\r\n\r\n    // Utility functions\r\n    const isKeralaGST = (gstNo: string) => {\r\n        return gstNo && gstNo.startsWith('32');\r\n    };\r\n\r\n    const formatExpiry = (dateStr: string) => {\r\n        if (!dateStr) return '';\r\n        const date = new Date(dateStr);\r\n        return `${String(date.getMonth() + 1).padStart(2, '0')}-${date.getFullYear()}`;\r\n    };\r\n\r\n    const safeToFixed = (value: any, decimals: number = 2) => {\r\n        const num = parseFloat(value) || 0;\r\n        return num.toFixed(decimals);\r\n    };\r\n\r\n    // Calculate totals\r\n    const calculateTotals = useCallback(() => {\r\n        const grossTotal = salesBill.items.reduce((sum, item) => sum + (item.baseAmount || 0), 0);\r\n        const gstTotal = salesBill.items.reduce((sum, item) => sum + (item.gstAmount || 0), 0);\r\n        const cgst = salesBill.items.reduce((sum, item) => sum + (item.cgstAmount || 0), 0);\r\n        const sgst = salesBill.items.reduce((sum, item) => sum + (item.sgstAmount || 0), 0);\r\n        const igst = salesBill.items.reduce((sum, item) => sum + (item.igstAmount || 0), 0);\r\n\r\n        const actualTotal = grossTotal + gstTotal - salesBill.discount;\r\n        const roundedTotal = Math.round(actualTotal);\r\n        const roundOff = +(roundedTotal - actualTotal).toFixed(2);\r\n        const finalTotal = +(actualTotal + roundOff).toFixed(2);\r\n\r\n        setSalesBill(prev => ({\r\n            ...prev,\r\n            grossTotal: +grossTotal.toFixed(2),\r\n            gstTotal: +gstTotal.toFixed(2),\r\n            cgst: +cgst.toFixed(2),\r\n            sgst: +sgst.toFixed(2),\r\n            igst: +igst.toFixed(2),\r\n            roundOff,\r\n            finalTotal\r\n        }));\r\n    }, [salesBill.items, salesBill.discount]);\r\n\r\n    useEffect(() => {\r\n        calculateTotals();\r\n    }, [calculateTotals]);\r\n\r\n    // Add new item row\r\n    const addNewItem = () => {\r\n        const newItem: SalesItem = {\r\n            id: null,\r\n            medicineId: 0,\r\n            itemCode: '',\r\n            medicineName: '',\r\n            batchNo: '',\r\n            expiryDate: '',\r\n            qty: 0,\r\n            salesRate: 0,\r\n            mrp: 0,\r\n            gst: 0,\r\n            hsnCode: '',\r\n            discountPercent: 0,\r\n            discountAmount: 0,\r\n            baseAmount: 0,\r\n            gstAmount: 0,\r\n            cgstAmount: 0,\r\n            sgstAmount: 0,\r\n            igstAmount: 0,\r\n            totalAmount: 0,\r\n            packItem: 1,\r\n            currentStock: 0,\r\n            company: ''\r\n        };\r\n\r\n        setSalesBill(prev => ({\r\n            ...prev,\r\n            items: [...prev.items, newItem]\r\n        }));\r\n    };\r\n\r\n    // Remove item\r\n    const removeItem = (index: number) => {\r\n        setSalesBill(prev => ({\r\n            ...prev,\r\n            items: prev.items.filter((_, i) => i !== index)\r\n        }));\r\n    };\r\n\r\n    // Handle medicine selection\r\n    const handleMedicineSelect = (index: number, medicineId: number) => {\r\n        const medicine = medicines.find(m => m.id === medicineId);\r\n        if (!medicine) return;\r\n\r\n        const batches = medicineBatches\r\n            .filter(b => b.medicineId === medicineId)\r\n            .sort((a, b) => new Date(a.expiryDate).getTime() - new Date(b.expiryDate).getTime());\r\n\r\n        if (batches.length === 0) {\r\n            alert('No batches available for this medicine');\r\n            return;\r\n        }\r\n\r\n        if (batches.length === 1) {\r\n            // Single batch - select directly\r\n            const batch = batches[0];\r\n            updateItemWithBatch(index, medicine, batch);\r\n        } else {\r\n            // Multiple batches - show selection modal\r\n            setSelectedBatches(batches);\r\n            setCurrentMedicineName(medicine.medicineName);\r\n            setShowBatchModal(true);\r\n\r\n            // Store the current item index for later use\r\n            (window as any).currentItemIndex = index;\r\n            (window as any).currentMedicine = medicine;\r\n        }\r\n    };\r\n\r\n    // Update item with selected batch\r\n    const updateItemWithBatch = (index: number, medicine: Medicine, batch: MedicineBatch) => {\r\n        const isKerala = salesBill.customerGst ? isKeralaGST(salesBill.customerGst) : true;\r\n\r\n        setSalesBill(prev => {\r\n            const newItems = [...prev.items];\r\n            const baseAmount = 0; // Will be calculated when qty is entered\r\n            const gstAmount = 0;\r\n\r\n            newItems[index] = {\r\n                ...newItems[index],\r\n                medicineId: medicine.id,\r\n                itemCode: medicine.itemCode,\r\n                medicineName: medicine.medicineName,\r\n                batchNo: batch.batchNo,\r\n                expiryDate: batch.expiryDate,\r\n                salesRate: batch.salesRate,\r\n                mrp: batch.mrp,\r\n                gst: medicine.gst,\r\n                hsnCode: medicine.hsnCode,\r\n                packItem: medicine.packItem,\r\n                currentStock: batch.currentStock,\r\n                company: medicine.company,\r\n                baseAmount,\r\n                gstAmount,\r\n                cgstAmount: isKerala ? gstAmount / 2 : 0,\r\n                sgstAmount: isKerala ? gstAmount / 2 : 0,\r\n                igstAmount: isKerala ? 0 : gstAmount,\r\n                totalAmount: baseAmount + gstAmount\r\n            };\r\n\r\n            return { ...prev, items: newItems };\r\n        });\r\n    };\r\n\r\n    // Handle batch selection from modal\r\n    const handleBatchSelect = (batch: MedicineBatch) => {\r\n        const index = (window as any).currentItemIndex;\r\n        const medicine = (window as any).currentMedicine;\r\n\r\n        if (typeof index === 'number' && medicine) {\r\n            updateItemWithBatch(index, medicine, batch);\r\n        }\r\n\r\n        setShowBatchModal(false);\r\n\r\n        // Clean up\r\n        delete (window as any).currentItemIndex;\r\n        delete (window as any).currentMedicine;\r\n\r\n        // Focus next input\r\n        setTimeout(() => {\r\n            const nextInput = inputRefs.current[`qty-${index}`];\r\n            if (nextInput) {\r\n                nextInput.focus();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    // Calculate item amounts\r\n    const calculateItemAmounts = (index: number, field: string, value: any) => {\r\n        setSalesBill(prev => {\r\n            const newItems = [...prev.items];\r\n            const item = { ...newItems[index] };\r\n\r\n            // Update the field\r\n            (item as any)[field] = value;\r\n\r\n            // Recalculate amounts\r\n            const baseBeforeDiscount = item.qty * item.salesRate;\r\n            const discountAmount = (baseBeforeDiscount * item.discountPercent) / 100;\r\n            const baseAmount = baseBeforeDiscount - discountAmount;\r\n            const gstAmount = (baseAmount * item.gst) / 100;\r\n\r\n            const isKerala = salesBill.customerGst ? isKeralaGST(salesBill.customerGst) : true;\r\n            const cgstAmount = isKerala ? gstAmount / 2 : 0;\r\n            const sgstAmount = isKerala ? gstAmount / 2 : 0;\r\n            const igstAmount = isKerala ? 0 : gstAmount;\r\n\r\n            item.discountAmount = discountAmount;\r\n            item.baseAmount = baseAmount;\r\n            item.gstAmount = gstAmount;\r\n            item.cgstAmount = cgstAmount;\r\n            item.sgstAmount = sgstAmount;\r\n            item.igstAmount = igstAmount;\r\n            item.totalAmount = baseAmount + gstAmount;\r\n\r\n            newItems[index] = item;\r\n            return { ...prev, items: newItems };\r\n        });\r\n    };\r\n\r\n    // Handle keyboard navigation\r\n    const handleKeyDown = (e: React.KeyboardEvent, index: number, field: string) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n\r\n            // Define navigation order\r\n            const fields = ['medicine', 'qty', 'salesRate', 'discountPercent'];\r\n            const currentFieldIndex = fields.indexOf(field);\r\n\r\n            if (currentFieldIndex < fields.length - 1) {\r\n                // Move to next field in same row\r\n                const nextField = fields[currentFieldIndex + 1];\r\n                const nextInput = inputRefs.current[`${nextField}-${index}`];\r\n                if (nextInput) {\r\n                    nextInput.focus();\r\n                }\r\n            } else {\r\n                // Move to next row or add new row\r\n                if (index === salesBill.items.length - 1) {\r\n                    addNewItem();\r\n                    setTimeout(() => {\r\n                        const firstInput = inputRefs.current[`medicine-${index + 1}`];\r\n                        if (firstInput) {\r\n                            firstInput.focus();\r\n                        }\r\n                    }, 50);\r\n                } else {\r\n                    const nextRowInput = inputRefs.current[`medicine-${index + 1}`];\r\n                    if (nextRowInput) {\r\n                        nextRowInput.focus();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // Handle customer selection\r\n    const handleCustomerSelect = (customerId: number) => {\r\n        const customer = customers.find(c => c.id === customerId);\r\n        if (customer) {\r\n            const isKerala = customer.gstNo ? isKeralaGST(customer.gstNo) : true;\r\n\r\n            setSalesBill(prev => ({\r\n                ...prev,\r\n                customerId: customer.id,\r\n                customerName: customer.name,\r\n                customerPhone: customer.phone,\r\n                customerAddress: customer.address,\r\n                customerGst: customer.gstNo,\r\n                taxType: isKerala ? 'Intra' : 'Inter'\r\n            }));\r\n\r\n            // Recalculate all items for tax type change\r\n            setSalesBill(prev => {\r\n                const newItems = prev.items.map(item => {\r\n                    const baseAmount = item.qty * item.salesRate - item.discountAmount;\r\n                    const gstAmount = (baseAmount * item.gst) / 100;\r\n\r\n                    return {\r\n                        ...item,\r\n                        cgstAmount: isKerala ? gstAmount / 2 : 0,\r\n                        sgstAmount: isKerala ? gstAmount / 2 : 0,\r\n                        igstAmount: isKerala ? 0 : gstAmount\r\n                    };\r\n                });\r\n\r\n                return { ...prev, items: newItems };\r\n            });\r\n\r\n            setCustomerSearch('');\r\n        }\r\n    };\r\n\r\n    // Save sales bill\r\n    const saveSalesBill = async () => {\r\n        try {\r\n            if (salesBill.items.length === 0) {\r\n                alert('Please add at least one item');\r\n                return;\r\n            }\r\n\r\n            if (salesBill.customerId === 0) {\r\n                alert('Please select a customer');\r\n                return;\r\n            }\r\n\r\n            // Check stock availability\r\n            for (const item of salesBill.items) {\r\n                if (item.qty > item.currentStock) {\r\n                    alert(`Insufficient stock for ${item.medicineName}. Available: ${item.currentStock}, Requested: ${item.qty}`);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            const payload = {\r\n                ...salesBill,\r\n                paymentType: salesBill.paymentType === 'Cash' ? 0 : salesBill.paymentType === 'Credit' ? 1 : 2,\r\n                taxType: salesBill.taxType === 'Intra' ? 0 : 1,\r\n                items: salesBill.items.map(item => ({\r\n                    ...item,\r\n                    id: item.id || undefined\r\n                }))\r\n            };\r\n\r\n            let response;\r\n            if (salesBill.salesId) {\r\n                // Update existing bill\r\n                response = await fetch(`/api/SalesBills/${salesBill.salesId}`, {\r\n                    method: 'PUT',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(payload)\r\n                });\r\n                alert('Sales bill updated successfully!');\r\n                setSuccessMessage('✅ Sales bill updated!');\r\n            } else {\r\n                // Create new bill\r\n                response = await fetch('/api/SalesBills', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(payload)\r\n                });\r\n                alert('Sales bill saved successfully!');\r\n                setSuccessMessage('✅ Sales bill saved!');\r\n            }\r\n\r\n            if (!response.ok) throw new Error('Failed to save sales bill');\r\n\r\n            const result = await response.json();\r\n            setSalesBill(prev => ({ ...prev, salesId: result.salesId }));\r\n\r\n            // Update medicine batch stocks\r\n            for (const item of salesBill.items) {\r\n                const batch = medicineBatches.find(b =>\r\n                    b.medicineId === item.medicineId && b.batchNo === item.batchNo\r\n                );\r\n                if (batch) {\r\n                    await fetch(`/api/MedicineBatches/${batch.id}`, {\r\n                        method: 'PUT',\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify({\r\n                            ...batch,\r\n                            currentStock: batch.currentStock - item.qty\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n\r\n            setTimeout(() => setSuccessMessage(''), 5000);\r\n\r\n        } catch (error: any) {\r\n            console.error('Failed to save sales bill:', error);\r\n            alert(`Failed to save: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    // Cancel sales bill\r\n    const cancelSalesBill = async () => {\r\n        const confirmed = window.confirm('Are you sure you want to cancel this bill?');\r\n        if (!confirmed) return;\r\n\r\n        try {\r\n            if (salesBill.salesId) {\r\n                const res = await fetch(`/api/SalesBills/${salesBill.salesId}/cancel`, {\r\n                    method: 'PUT'\r\n                });\r\n\r\n                if (!res.ok) throw new Error('Failed to cancel bill');\r\n\r\n                setSalesBill(prev => ({\r\n                    ...prev,\r\n                    isCancelled: true,\r\n                    items: prev.items.map(item => ({\r\n                        ...item,\r\n                        medicineName: `[CANCELLED] ${item.medicineName}`\r\n                    }))\r\n                }));\r\n\r\n                alert('Sales bill marked as CANCELLED!');\r\n            } else {\r\n                // Just clear the form for new bills\r\n                setSalesBill({\r\n                    date: new Date().toISOString().split('T')[0],\r\n                    customerId: 0,\r\n                    customerName: '',\r\n                    customerPhone: '',\r\n                    customerAddress: '',\r\n                    paymentType: 'Cash',\r\n                    taxType: 'Intra',\r\n                    items: [],\r\n                    grossTotal: 0,\r\n                    gstTotal: 0,\r\n                    cgst: 0,\r\n                    sgst: 0,\r\n                    igst: 0,\r\n                    discount: 0,\r\n                    roundOff: 0,\r\n                    finalTotal: 0\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error cancelling bill:', error);\r\n            alert('Failed to cancel sales bill.');\r\n        }\r\n    };\r\n\r\n    // Filter medicines for search\r\n    const filteredMedicines = medicines.filter(m => {\r\n        const query = medicineSearch.toLowerCase();\r\n        return (\r\n            m.itemCode.toLowerCase().includes(query) ||\r\n            m.medicineName.toLowerCase().includes(query)\r\n        );\r\n    });\r\n\r\n    // Filter customers for search\r\n    const filteredCustomers = customers.filter(c => {\r\n        const query = customerSearch.toLowerCase();\r\n        return (\r\n            c.id.toString().includes(query) ||\r\n            c.name.toLowerCase().includes(query) ||\r\n            c.phone.includes(query)\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-blue-100\">\r\n            {/* Header */}\r\n            <div className=\"bg-gradient-to-r from-blue-600 to-blue-800 text-white p-4 sm:p-6 shadow-lg\">\r\n                <h1 className=\"text-4xl font-light mb-3 text-center\">Sales Bill</h1>\r\n            </div>\r\n\r\n            {/* Form Section */}\r\n            <div className=\"p-2 sm:p-3 lg:p-4 bg-white\">\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                    {/* Left Side */}\r\n                    <div className=\"space-y-3\">\r\n                        <div className=\"grid grid-cols-1 sm:grid-cols-12 gap-2 items-end\">\r\n                            {/* Sales ID */}\r\n                            <div className=\"sm:col-span-2\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Sales ID</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={salesBill.salesId ?? \"\"}\r\n                                    readOnly\r\n                                    className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md bg-blue-50 text-blue-900 font-medium focus:outline-none\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Date */}\r\n                            <div className=\"sm:col-span-3\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Date</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    value={salesBill.date}\r\n                                    onChange={(e) =>\r\n                                        setSalesBill((prev) => ({ ...prev, date: e.target.value }))\r\n                                    }\r\n                                    className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Customer - Takes the rest */}\r\n                            <div className=\"col-span-12 sm:col-span-7\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Customer</label>\r\n                                <div className=\"relative\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Search customer by ID, name, or phone...\"\r\n                                        value={customerSearch || (salesBill.customerId ? `${salesBill.customerId} - ${salesBill.customerName}` : '')}\r\n                                        onChange={(e) => setCustomerSearch(e.target.value)}\r\n                                        className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                    />\r\n                                    {customerSearch && (\r\n                                        <div className=\"absolute z-10 mt-1 w-full bg-white border border-gray-300 rounded shadow-lg max-h-48 overflow-y-auto\">\r\n                                            {filteredCustomers.length > 0 ? (\r\n                                                filteredCustomers.map((customer) => (\r\n                                                    <div\r\n                                                        key={customer.id}\r\n                                                        className=\"px-3 py-2 hover:bg-blue-100 text-sm cursor-pointer\"\r\n                                                        onClick={() => handleCustomerSelect(customer.id)}\r\n                                                    >\r\n                                                        <div className=\"font-medium\">{customer.id} - {customer.name}</div>\r\n                                                        {customer.phone && (\r\n                                                            <div className=\"text-xs text-gray-600\">{customer.phone}</div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                ))\r\n                                            ) : (\r\n                                                <div className=\"px-3 py-2 text-sm text-gray-500\">No customers found</div>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex flex-col sm:flex-row gap-2\">\r\n                            {/* Customer Phone */}\r\n                            <div className=\"w-full sm:w-1/2\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Phone</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={salesBill.customerPhone}\r\n                                    readOnly\r\n                                    className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md bg-blue-50 text-blue-900\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Customer Address */}\r\n                            <div className=\"w-full sm:w-1/2\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={salesBill.customerAddress}\r\n                                    readOnly\r\n                                    className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md bg-blue-50 text-blue-900\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Right Side */}\r\n                    <div className=\"space-y-3\">\r\n                        <div className=\"flex flex-col sm:flex-row gap-2\">\r\n                            {/* GST IN - 60% */}\r\n                            <div className=\"w-full sm:w-3/5\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Customer GST</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={salesBill.customerGst || ''}\r\n                                    readOnly\r\n                                    className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md bg-blue-50 text-blue-900\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Payment Type - 40% */}\r\n                            <div className=\"w-full sm:w-2/5\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Payment</label>\r\n                                <select\r\n                                    value={salesBill.paymentType}\r\n                                    onChange={(e) => setSalesBill(prev => ({ ...prev, paymentType: e.target.value }))}\r\n                                    className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                >\r\n                                    <option value=\"Cash\">Cash</option>\r\n                                    <option value=\"Credit\">Credit</option>\r\n                                    <option value=\"Online\">Online</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex flex-col sm:flex-row gap-2\">\r\n                            {/* Tax Type - 60% */}\r\n                            <div className=\"w-full sm:w-3/5\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Tax Type</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={salesBill.taxType}\r\n                                    readOnly\r\n                                    className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md bg-blue-50 text-blue-900\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Items Section */}\r\n            <div className=\"p-3 sm:p-4 lg:p-6 bg-gradient-to-r from-blue-50 to-blue-100\">\r\n                <div className=\"flex flex-col sm:flex-row justify-between items-center mb-4\">\r\n                    <h2 className=\"text-xl sm:text-2xl font-bold text-blue-900 mb-2 sm:mb-0\">Items</h2>\r\n                    <button\r\n                        onClick={addNewItem}\r\n                        className=\"bg-gradient-to-r from-blue-600 to-blue-800 text-white px-4 py-2 rounded-lg hover:from-blue-700 hover:to-blue-900 flex items-center gap-2 font-medium shadow-lg transition-all duration-300\"\r\n                    >\r\n                        <Plus size={16} /> Add Item\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Items Table */}\r\n                <div className=\"bg-white rounded-lg shadow-lg relative z-10\">\r\n                    <div className=\"w-full overflow-x-auto\">\r\n                        <table className=\"min-w-[1000px] w-full border border-blue-300 text-xs sm:text-sm\">\r\n                            <thead className=\"bg-gradient-to-r from-blue-600 to-blue-800 text-white\">\r\n                                <tr>\r\n                                    <th className=\"px-2 py-3 text-left text-xs sm:text-sm font-medium border-r border-blue-500\">Medicine</th>\r\n                                    <th className=\"px-2 py-3 text-left text-xs sm:text-sm font-medium border-r border-blue-500\">Batch</th>\r\n                                    <th className=\"px-2 py-3 text-center text-xs sm:text-sm font-medium border-r border-blue-500\">Qty</th>\r\n                                    <th className=\"px-2 py-3 text-center text-xs sm:text-sm font-medium border-r border-blue-500\">Rate</th>\r\n                                    <th className=\"px-2 py-3 text-center text-xs sm:text-sm font-medium border-r border-blue-500\">MRP</th>\r\n                                    <th className=\"px-2 py-3 text-center text-xs sm:text-sm font-medium border-r border-blue-500\">Disc%</th>\r\n                                    <th className=\"px-2 py-3 text-center text-xs sm:text-sm font-medium border-r border-blue-500\">GST%</th>\r\n                                    <th className=\"px-2 py-3 text-center text-xs sm:text-sm font-medium border-r border-blue-500\">Amount</th>\r\n                                    <th className=\"px-2 py-3 text-center text-xs sm:text-sm font-medium\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {salesBill.items.map((item, index) => (\r\n                                    <tr key={index} className={`${index % 2 === 0 ? 'bg-blue-50' : 'bg-white'} hover:bg-blue-100 transition-colors duration-200`}>\r\n                                        {/* Medicine */}\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 min-w-[200px]\">\r\n                                            <div className=\"relative\">\r\n                                                <input\r\n                                                    ref={(el) => {\r\n                                                        inputRefs.current[`medicine-${index}`] = el;\r\n                                                    }}\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Search medicine...\"\r\n                                                    value={medicineSearch}\r\n                                                    onChange={(e) => setMedicineSearch(e.target.value)}\r\n                                                    onKeyDown={(e) => handleKeyDown(e, index, 'medicine')}\r\n                                                    onFocus={() => {\r\n                                                        setEditingCell({ row: index, col: 'medicine' });\r\n                                                        setMedicineSearch('');\r\n                                                    }}\r\n                                                    onBlur={() => {\r\n                                                        setTimeout(() => {\r\n                                                            if (item.medicineName) {\r\n                                                                setMedicineSearch('');\r\n                                                            }\r\n                                                        }, 200);\r\n                                                    }}\r\n                                                    className=\"w-full px-2 py-1 text-xs border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                                                />\r\n\r\n                                                {item.medicineName && (\r\n                                                    <div className=\"absolute inset-0 px-2 py-1 text-xs pointer-events-none bg-transparent\">\r\n                                                        <div className={`font-medium ${item.currentStock === 0 ? 'text-red-600' : 'text-gray-900'}`}>\r\n                                                            {item.itemCode} - {item.medicineName}\r\n                                                            {item.currentStock === 0 && (\r\n                                                                <span className=\"ml-2 text-xs bg-red-100 text-red-600 px-1 rounded\">OUT OF STOCK</span>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                {editingCell?.row === index && editingCell?.col === 'medicine' && medicineSearch && (\r\n                                                    <div className=\"absolute z-20 mt-1 w-full bg-white border border-gray-300 rounded shadow-lg max-h-48 overflow-y-auto\">\r\n                                                        {filteredMedicines.length > 0 ? (\r\n                                                            filteredMedicines.map((medicine) => {\r\n                                                                const batches = medicineBatches.filter(b => b.medicineId === medicine.id);\r\n                                                                const totalStock = batches.reduce((sum, b) => sum + b.currentStock, 0);\r\n\r\n                                                                return (\r\n                                                                    <div\r\n                                                                        key={medicine.id}\r\n                                                                        className={`px-3 py-2 hover:bg-blue-100 text-xs cursor-pointer ${totalStock === 0 ? 'bg-red-50' : ''\r\n                                                                            }`}\r\n                                                                        onClick={() => {\r\n                                                                            handleMedicineSelect(index, medicine.id);\r\n                                                                            setEditingCell(null);\r\n                                                                            setMedicineSearch('');\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <div className={`font-medium ${totalStock === 0 ? 'text-red-600' : 'text-gray-900'}`}>\r\n                                                                            {medicine.itemCode} - {medicine.medicineName}\r\n                                                                        </div>\r\n                                                                        <div className=\"text-xs text-gray-600\">\r\n                                                                            Stock: <span className={totalStock === 0 ? 'text-red-600 font-medium' : 'text-green-600'}>{totalStock}</span> |\r\n                                                                            GST: {medicine.gst}% |\r\n                                                                            Company: {medicine.company}\r\n                                                                        </div>\r\n                                                                        {totalStock === 0 && (\r\n                                                                            <div className=\"text-xs text-red-600 font-medium\">OUT OF STOCK</div>\r\n                                                                        )}\r\n                                                                    </div>\r\n                                                                );\r\n                                                            })\r\n                                                        ) : (\r\n                                                            <div className=\"px-3 py-2 text-xs text-gray-500\">No medicines found</div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        {/* Batch */}\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 text-xs text-center\">\r\n                                            {item.batchNo}\r\n                                        </td>\r\n                                        {/* Quantity */}\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200\">\r\n                                            <input\r\n                                                ref={(el) => {\r\n                                                    inputRefs.current[`qty-${index}`] = el;\r\n                                                }}\r\n                                                type=\"number\"\r\n                                                min=\"0\"\r\n                                                max={item.currentStock}\r\n                                                value={item.qty || ''}\r\n                                                onChange={(e) => {\r\n                                                    const qty = parseFloat(e.target.value) || 0;\r\n                                                    if (qty > item.currentStock) {\r\n                                                        alert(`Cannot exceed available stock: ${item.currentStock}`);\r\n                                                        return;\r\n                                                    }\r\n                                                    calculateItemAmounts(index, 'qty', qty);\r\n                                                }}\r\n                                                onKeyDown={(e) => handleKeyDown(e, index, 'qty')}\r\n                                                className=\"w-16 px-2 py-1 text-xs border border-gray-300 rounded text-center focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                                                placeholder=\"0\"\r\n                                            />\r\n                                        </td>\r\n\r\n                                        {/* Sales Rate */}\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200\">\r\n                                            <input\r\n                                                ref={(el) => { inputRefs.current[`salesRate-${index}`] = el }}\r\n                                                type=\"number\"\r\n                                                step=\"0.01\"\r\n                                                value={item.salesRate || ''}\r\n                                                onChange={(e) => {\r\n                                                    const rate = parseFloat(e.target.value) || 0;\r\n                                                    calculateItemAmounts(index, 'salesRate', rate);\r\n                                                }}\r\n                                                onKeyDown={(e) => handleKeyDown(e, index, 'salesRate')}\r\n                                                className=\"w-20 px-2 py-1 text-xs border border-gray-300 rounded text-center focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                                                placeholder=\"0.00\"\r\n                                            />\r\n                                        </td>\r\n\r\n                                        {/* MRP */}\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 text-xs text-center\">\r\n                                            ₹{safeToFixed(item.mrp)}\r\n                                        </td>\r\n\r\n                                        {/* Discount % */}\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200\">\r\n                                            <input\r\n                                                ref={(el) => { inputRefs.current[`discountPercent-${index}`] = el }}\r\n                                                type=\"number\"\r\n                                                min=\"0\"\r\n                                                max=\"100\"\r\n                                                step=\"0.01\"\r\n                                                value={item.discountPercent || ''}\r\n                                                onChange={(e) => {\r\n                                                    const discount = parseFloat(e.target.value) || 0;\r\n                                                    calculateItemAmounts(index, 'discountPercent', discount);\r\n                                                }}\r\n                                                onKeyDown={(e) => handleKeyDown(e, index, 'discountPercent')}\r\n                                                className=\"w-16 px-2 py-1 text-xs border border-gray-300 rounded text-center focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                                                placeholder=\"0\"\r\n                                            />\r\n                                        </td>\r\n\r\n                                        {/* GST % */}\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 text-xs text-center\">\r\n                                            {item.gst}%\r\n                                        </td>\r\n\r\n                                        {/* Amount */}\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 text-xs text-center font-bold text-green-700\">\r\n                                            ₹{safeToFixed(item.totalAmount)}\r\n                                        </td>\r\n\r\n                                        {/* Action */}\r\n                                        <td className=\"px-2 py-2 text-center\">\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={() => removeItem(index)}\r\n                                                className=\"text-red-600 hover:text-red-800 transition\"\r\n                                                title=\"Remove item\"\r\n                                            >\r\n                                                <Trash2 className=\"w-4 h-4\" />\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                {salesBill.items.length === 0 && (\r\n                                    <tr>\r\n                                        <td colSpan={11} className=\"text-center py-6 text-gray-500 italic\">\r\n                                            No items added yet. Click \"Add Item\" to begin.\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Batch Selection Modal */}\r\n            <BatchSelectionModal\r\n                isOpen={showBatchModal}\r\n                batches={selectedBatches}\r\n                medicineName={currentMedicineName}\r\n                onSelect={handleBatchSelect}\r\n                onClose={() => setShowBatchModal(false)}\r\n            />\r\n\r\n            {/* Summary Section */}\r\n            <div className=\"p-3 sm:p-4 lg:p-6 bg-white\">\r\n                <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 p-4 sm:p-6 rounded-lg\">\r\n                    <h3 className=\"text-lg sm:text-xl font-bold text-blue-900 mb-4\">Summary</h3>\r\n\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 sm:gap-6\">\r\n                        {/* Column 1: Tax Details */}\r\n                        <div className=\"space-y-3\">\r\n                            <div className=\"border border-blue-300 rounded-lg overflow-hidden\">\r\n                                <div className=\"bg-blue-600 text-white p-2 text-center font-semibold text-sm\">Tax Details</div>\r\n                                <div className=\"divide-y divide-blue-200\">\r\n                                    <div className=\"flex justify-between items-center p-2 bg-white\">\r\n                                        <span className=\"text-sm font-medium text-blue-900\">GST Total:</span>\r\n                                        <span className=\"text-sm font-bold text-blue-900\">₹{safeToFixed(salesBill.gstTotal)}</span>\r\n                                    </div>\r\n                                    <div className=\"flex justify-between items-center p-2 bg-blue-50\">\r\n                                        <span className=\"text-sm font-medium text-blue-900\">CGST:</span>\r\n                                        <span className=\"text-sm font-bold text-blue-900\">₹{safeToFixed(salesBill.cgst)}</span>\r\n                                    </div>\r\n                                    <div className=\"flex justify-between items-center p-2 bg-white\">\r\n                                        <span className=\"text-sm font-medium text-blue-900\">SGST:</span>\r\n                                        <span className=\"text-sm font-bold text-blue-900\">₹{safeToFixed(salesBill.sgst)}</span>\r\n                                    </div>\r\n                                    <div className=\"flex justify-between items-center p-2 bg-blue-50\">\r\n                                        <span className=\"text-sm font-medium text-blue-900\">IGST:</span>\r\n                                        <span className=\"text-sm font-bold text-blue-900\">₹{safeToFixed(salesBill.igst)}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Column 2: Amount Details */}\r\n                        <div className=\"space-y-3\">\r\n                            <div className=\"border border-blue-300 rounded-lg overflow-hidden\">\r\n                                <div className=\"bg-blue-600 text-white p-2 text-center font-semibold text-sm\">Amount Details</div>\r\n                                <div className=\"divide-y divide-blue-200\">\r\n                                    <div className=\"flex justify-between items-center p-2 bg-green-50 font-bold\">\r\n                                        <span className=\"text-sm text-green-900\">Gross Total:</span>\r\n                                        <span className=\"text-sm text-green-900\">₹{safeToFixed(salesBill.grossTotal)}</span>\r\n                                    </div>\r\n                                    <div className=\"flex justify-between items-center p-2 bg-blue-50\">\r\n                                        <span className=\"text-sm font-medium text-blue-900\">Round Off:</span>\r\n                                        <span className=\"text-sm font-bold text-blue-900\">₹{safeToFixed(salesBill.roundOff)}</span>\r\n                                    </div>\r\n                                    <div className=\"flex justify-between items-center p-2 bg-white\">\r\n                                        <span className=\"text-sm font-medium text-blue-900\">Discount:</span>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            step=\"0.01\"\r\n                                            value={salesBill.discount}\r\n                                            onChange={(e) => setSalesBill(prev => ({ ...prev, discount: Number(e.target.value) }))}\r\n                                            className=\"w-20 px-2 py-1 text-sm border border-blue-300 rounded text-right font-bold\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Column 3: Final Total */}\r\n                        <div className=\"lg:flex lg:items-center lg:justify-center\">\r\n                            <div className=\"bg-gradient-to-r from-red-500 to-red-700 text-white p-4 rounded-lg text-center shadow-lg\">\r\n                                <div className=\"text-sm font-medium mb-1\">Total Amount</div>\r\n                                <div className=\"text-2xl font-bold\">₹{safeToFixed(salesBill.finalTotal)}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Messages */}\r\n            <div className=\"flex justify-center\">\r\n                <div className=\"w-full max-w-md\">\r\n                    {errorMessage && (\r\n                        <div className=\"mb-4 text-sm text-red-600 font-semibold bg-red-100 border border-red-300 p-2 rounded text-center\">\r\n                            {errorMessage}\r\n                        </div>\r\n                    )}\r\n                    {successMessage && (\r\n                        <div className=\"bg-green-100 text-green-800 p-2 rounded mb-4 shadow text-sm font-medium text-center\">\r\n                            {successMessage}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Save + Cancel Buttons */}\r\n            <div className=\"p-3 sm:p-4 lg:p-6 bg-gradient-to-r from-blue-50 to-blue-100\">\r\n                <div className=\"flex justify-center gap-4\">\r\n                    <button\r\n                        onClick={saveSalesBill}\r\n                        className=\"bg-gradient-to-r from-green-600 to-green-800 text-white px-8 py-3 rounded-lg hover:from-green-700 hover:to-green-900 flex items-center gap-2 font-bold text-lg shadow-lg transition-all duration-300\"\r\n                    >\r\n                        <Save size={20} /> Save Bill\r\n                    </button>\r\n\r\n                    <button\r\n                        onClick={cancelSalesBill}\r\n                        className=\"bg-gradient-to-r from-red-600 to-red-800 text-white px-8 py-3 rounded-lg hover:from-red-700 hover:to-red-900 flex items-center gap-2 font-bold text-lg shadow-lg transition-all duration-300\"\r\n                    >\r\n                        <Trash2 size={20} /> Cancel Bill\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SalesBillPage;"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;;;;;AAKA,MAAM,WAAW,mHAAA,CAAA,UAAG,CAAC,QAAQ,CAAC,OAAO;AAyFrC,MAAM,sBAA0D,CAAC,EAC7D,MAAM,EACN,OAAO,EACP,YAAY,EACZ,QAAQ,EACR,OAAO,EACV;IACG,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAExC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,QAAQ;YACR,iBAAiB;QACrB;IACJ,GAAG;QAAC;KAAO;IAEX,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,gBAAgB,CAAC;YACnB,IAAI,CAAC,QAAQ;YAEb,OAAQ,EAAE,GAAG;gBACT,KAAK;oBACD,EAAE,cAAc;oBAChB,iBAAiB,CAAA,OAAQ,KAAK,GAAG,CAAC,GAAG,OAAO;oBAC5C;gBACJ,KAAK;oBACD,EAAE,cAAc;oBAChB,iBAAiB,CAAA,OAAQ,KAAK,GAAG,CAAC,QAAQ,MAAM,GAAG,GAAG,OAAO;oBAC7D;gBACJ,KAAK;oBACD,EAAE,cAAc;oBAChB,IAAI,OAAO,CAAC,cAAc,EAAE;wBACxB,SAAS,OAAO,CAAC,cAAc;oBACnC;oBACA;gBACJ,KAAK;oBACD,EAAE,cAAc;oBAChB;oBACA;YACR;QACJ;QAEA,SAAS,gBAAgB,CAAC,WAAW;QACrC,OAAO,IAAM,SAAS,mBAAmB,CAAC,WAAW;IACzD,GAAG;QAAC;QAAQ;QAAe;QAAS;QAAU;KAAQ;IAEtD,IAAI,CAAC,QAAQ,OAAO;IAEpB,MAAM,eAAe,CAAC;QAClB,MAAM,OAAO,IAAI,KAAK;QACtB,OAAO,GAAG,OAAO,KAAK,QAAQ,KAAK,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,KAAK,WAAW,IAAI;IAClF;IAEA,MAAM,kBAAkB,CAAC;QACrB,MAAM,QAAQ,IAAI;QAClB,MAAM,SAAS,IAAI,KAAK;QACxB,MAAM,WAAW,OAAO,OAAO,KAAK,MAAM,OAAO;QACjD,MAAM,WAAW,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO,KAAK,KAAK,EAAE;QAC1D,OAAO;IACX;IAEA,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAI,KAAK;YAAU,WAAU;;8BAC1B,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAG,WAAU;;gCAAwB;gCAAgB;;;;;;;sCACtD,8OAAC;4BAAE,WAAU;sCAA0B;;;;;;;;;;;;8BAG3C,8OAAC;oBAAI,WAAU;8BACV,QAAQ,GAAG,CAAC,CAAC,OAAO;wBACjB,MAAM,eAAe,gBAAgB,MAAM,UAAU;wBACrD,MAAM,YAAY,eAAe;wBACjC,MAAM,eAAe,gBAAgB,MAAM,gBAAgB;wBAC3D,MAAM,aAAa,UAAU;wBAE7B,qBACI,8OAAC;4BAEG,WAAW,CAAC,8CAA8C,EAAE,aACtD,gCACA,mBACD,CAAC,EAAE,MAAM,YAAY,KAAK,IAAI,cAAc,IAC3C;4BACN,SAAS,IAAM,SAAS;sCAExB,cAAA,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;wDAAK,WAAU;;4DAA4B;4DAChC,MAAM,OAAO;;;;;;;kEAEzB,8OAAC;wDAAK,WAAW,CAAC,0BAA0B,EAAE,YACxC,4BACA,eACI,kCACA,+BACJ;;4DAAE;4DACE,aAAa,MAAM,UAAU;;;;;;;oDAEtC,2BACG,8OAAC;wDAAK,WAAU;kEAAkD;;;;;;;;;;;;0DAK1E,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;;4DAAK;0EAAO,8OAAC;gEAAK,WAAW,CAAC,YAAY,EAAE,MAAM,YAAY,KAAK,IAAI,iBAAiB,kBACnF;0EAAG,MAAM,YAAY;;;;;;;;;;;;kEAC3B,8OAAC;;4DAAK;4DAAQ,MAAM,SAAS,CAAC,OAAO,CAAC;;;;;;;kEACtC,8OAAC;;4DAAK;4DAAO,MAAM,GAAG,CAAC,OAAO,CAAC;;;;;;;;;;;;;;;;;;;oCAGtC,MAAM,YAAY,KAAK,mBACpB,8OAAC;wCAAI,WAAU;;0DACX,8OAAC,oNAAA,CAAA,cAAW;gDAAC,MAAM;;;;;;0DACnB,8OAAC;gDAAK,WAAU;0DAA2B;;;;;;;;;;;;;;;;;;2BAtClD,MAAM,EAAE;;;;;oBA4CzB;;;;;;8BAGJ,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC;wBACG,SAAS;wBACT,WAAU;kCACb;;;;;;;;;;;;;;;;;;;;;;AAOrB;AAEA,MAAM,gBAA0B;IAC5B,mBAAmB;IACnB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa;QAClD,MAAM,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;QAC5C,YAAY;QACZ,cAAc;QACd,eAAe;QACf,iBAAiB;QACjB,aAAa;QACb,SAAS;QACT,OAAO,EAAE;QACT,YAAY;QACZ,UAAU;QACV,MAAM;QACN,MAAM;QACN,MAAM;QACN,UAAU;QACV,UAAU;QACV,YAAY;IAChB;IAEA,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACzD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACzD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB,EAAE;IAC1E,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB,EAAE;IAC1E,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuC;IACpF,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,4BAA4B;IAC5B,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkE,CAAC;IAE1F,2BAA2B;IAC3B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,iBAAiB;YACnB,IAAI;gBACA,MAAM,MAAM,MAAM,MAAM,GAAG,SAAS,uBAAuB,CAAC;gBAC5D,IAAI,CAAC,IAAI,EAAE,EAAE;oBACT,MAAM,IAAI,MAAM;gBACpB;gBACA,MAAM,eAAe,MAAM,IAAI,IAAI;gBACnC,aAAa;YACjB,EAAE,OAAO,OAAO;gBACZ,QAAQ,KAAK,CAAC,6BAA6B;YAC/C;QACJ;QACA;IACJ,GAAG,EAAE;IAEL,4CAA4C;IAC5C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,iBAAiB;QACjB,aAAa;YACT;gBAAE,IAAI;gBAAG,MAAM;gBAAoB,OAAO;gBAAI,SAAS;gBAAI,OAAO;YAAG;YACrE;gBAAE,IAAI;gBAAG,MAAM;gBAAY,OAAO;gBAAc,SAAS;gBAAe,OAAO;YAAkB;YACjG;gBAAE,IAAI;gBAAG,MAAM;gBAAc,OAAO;gBAAc,SAAS;gBAAe,OAAO;YAAG;SACvF;QAED,mBAAmB;YACf;gBAAE,IAAI;gBAAG,YAAY;gBAAG,SAAS;gBAAQ,YAAY;gBAAc,cAAc;gBAAI,cAAc;gBAAI,WAAW;gBAAI,KAAK;gBAAI,WAAW;YAAM;YAChJ;gBAAE,IAAI;gBAAG,YAAY;gBAAG,SAAS;gBAAQ,YAAY;gBAAc,cAAc;gBAAI,cAAc;gBAAI,WAAW;gBAAI,KAAK;gBAAI,WAAW;YAAM;YAChJ;gBAAE,IAAI;gBAAG,YAAY;gBAAG,SAAS;gBAAQ,YAAY;gBAAc,cAAc;gBAAG,cAAc;gBAAI,WAAW;gBAAI,KAAK;gBAAI,WAAW;YAAM;YAC/I;gBAAE,IAAI;gBAAG,YAAY;gBAAG,SAAS;gBAAQ,YAAY;gBAAc,cAAc;gBAAI,cAAc;gBAAI,WAAW;gBAAI,KAAK;gBAAI,WAAW;YAAM;YAChJ;gBAAE,IAAI;gBAAG,YAAY;gBAAG,SAAS;gBAAQ,YAAY;gBAAc,cAAc;gBAAI,cAAc;gBAAK,WAAW;gBAAK,KAAK;gBAAK,WAAW;YAAM;SACtJ;IACL,GAAG,EAAE;IAEL,oBAAoB;IACpB,MAAM,cAAc,CAAC;QACjB,OAAO,SAAS,MAAM,UAAU,CAAC;IACrC;IAEA,MAAM,eAAe,CAAC;QAClB,IAAI,CAAC,SAAS,OAAO;QACrB,MAAM,OAAO,IAAI,KAAK;QACtB,OAAO,GAAG,OAAO,KAAK,QAAQ,KAAK,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,KAAK,WAAW,IAAI;IAClF;IAEA,MAAM,cAAc,CAAC,OAAY,WAAmB,CAAC;QACjD,MAAM,MAAM,WAAW,UAAU;QACjC,OAAO,IAAI,OAAO,CAAC;IACvB;IAEA,mBAAmB;IACnB,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAChC,MAAM,aAAa,UAAU,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,CAAC,KAAK,UAAU,IAAI,CAAC,GAAG;QACvF,MAAM,WAAW,UAAU,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,CAAC,KAAK,SAAS,IAAI,CAAC,GAAG;QACpF,MAAM,OAAO,UAAU,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,CAAC,KAAK,UAAU,IAAI,CAAC,GAAG;QACjF,MAAM,OAAO,UAAU,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,CAAC,KAAK,UAAU,IAAI,CAAC,GAAG;QACjF,MAAM,OAAO,UAAU,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,CAAC,KAAK,UAAU,IAAI,CAAC,GAAG;QAEjF,MAAM,cAAc,aAAa,WAAW,UAAU,QAAQ;QAC9D,MAAM,eAAe,KAAK,KAAK,CAAC;QAChC,MAAM,WAAW,CAAC,CAAC,eAAe,WAAW,EAAE,OAAO,CAAC;QACvD,MAAM,aAAa,CAAC,CAAC,cAAc,QAAQ,EAAE,OAAO,CAAC;QAErD,aAAa,CAAA,OAAQ,CAAC;gBAClB,GAAG,IAAI;gBACP,YAAY,CAAC,WAAW,OAAO,CAAC;gBAChC,UAAU,CAAC,SAAS,OAAO,CAAC;gBAC5B,MAAM,CAAC,KAAK,OAAO,CAAC;gBACpB,MAAM,CAAC,KAAK,OAAO,CAAC;gBACpB,MAAM,CAAC,KAAK,OAAO,CAAC;gBACpB;gBACA;YACJ,CAAC;IACL,GAAG;QAAC,UAAU,KAAK;QAAE,UAAU,QAAQ;KAAC;IAExC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN;IACJ,GAAG;QAAC;KAAgB;IAEpB,mBAAmB;IACnB,MAAM,aAAa;QACf,MAAM,UAAqB;YACvB,IAAI;YACJ,YAAY;YACZ,UAAU;YACV,cAAc;YACd,SAAS;YACT,YAAY;YACZ,KAAK;YACL,WAAW;YACX,KAAK;YACL,KAAK;YACL,SAAS;YACT,iBAAiB;YACjB,gBAAgB;YAChB,YAAY;YACZ,WAAW;YACX,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,aAAa;YACb,UAAU;YACV,cAAc;YACd,SAAS;QACb;QAEA,aAAa,CAAA,OAAQ,CAAC;gBAClB,GAAG,IAAI;gBACP,OAAO;uBAAI,KAAK,KAAK;oBAAE;iBAAQ;YACnC,CAAC;IACL;IAEA,cAAc;IACd,MAAM,aAAa,CAAC;QAChB,aAAa,CAAA,OAAQ,CAAC;gBAClB,GAAG,IAAI;gBACP,OAAO,KAAK,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;YAC7C,CAAC;IACL;IAEA,4BAA4B;IAC5B,MAAM,uBAAuB,CAAC,OAAe;QACzC,MAAM,WAAW,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAC9C,IAAI,CAAC,UAAU;QAEf,MAAM,UAAU,gBACX,MAAM,CAAC,CAAA,IAAK,EAAE,UAAU,KAAK,YAC7B,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,UAAU,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,UAAU,EAAE,OAAO;QAErF,IAAI,QAAQ,MAAM,KAAK,GAAG;YACtB,MAAM;YACN;QACJ;QAEA,IAAI,QAAQ,MAAM,KAAK,GAAG;YACtB,iCAAiC;YACjC,MAAM,QAAQ,OAAO,CAAC,EAAE;YACxB,oBAAoB,OAAO,UAAU;QACzC,OAAO;YACH,0CAA0C;YAC1C,mBAAmB;YACnB,uBAAuB,SAAS,YAAY;YAC5C,kBAAkB;YAElB,6CAA6C;YAC5C,OAAe,gBAAgB,GAAG;YAClC,OAAe,eAAe,GAAG;QACtC;IACJ;IAEA,kCAAkC;IAClC,MAAM,sBAAsB,CAAC,OAAe,UAAoB;QAC5D,MAAM,WAAW,UAAU,WAAW,GAAG,YAAY,UAAU,WAAW,IAAI;QAE9E,aAAa,CAAA;YACT,MAAM,WAAW;mBAAI,KAAK,KAAK;aAAC;YAChC,MAAM,aAAa,GAAG,yCAAyC;YAC/D,MAAM,YAAY;YAElB,QAAQ,CAAC,MAAM,GAAG;gBACd,GAAG,QAAQ,CAAC,MAAM;gBAClB,YAAY,SAAS,EAAE;gBACvB,UAAU,SAAS,QAAQ;gBAC3B,cAAc,SAAS,YAAY;gBACnC,SAAS,MAAM,OAAO;gBACtB,YAAY,MAAM,UAAU;gBAC5B,WAAW,MAAM,SAAS;gBAC1B,KAAK,MAAM,GAAG;gBACd,KAAK,SAAS,GAAG;gBACjB,SAAS,SAAS,OAAO;gBACzB,UAAU,SAAS,QAAQ;gBAC3B,cAAc,MAAM,YAAY;gBAChC,SAAS,SAAS,OAAO;gBACzB;gBACA;gBACA,YAAY,WAAW,YAAY,IAAI;gBACvC,YAAY,WAAW,YAAY,IAAI;gBACvC,YAAY,WAAW,IAAI;gBAC3B,aAAa,aAAa;YAC9B;YAEA,OAAO;gBAAE,GAAG,IAAI;gBAAE,OAAO;YAAS;QACtC;IACJ;IAEA,oCAAoC;IACpC,MAAM,oBAAoB,CAAC;QACvB,MAAM,QAAQ,AAAC,OAAe,gBAAgB;QAC9C,MAAM,WAAW,AAAC,OAAe,eAAe;QAEhD,IAAI,OAAO,UAAU,YAAY,UAAU;YACvC,oBAAoB,OAAO,UAAU;QACzC;QAEA,kBAAkB;QAElB,WAAW;QACX,OAAO,AAAC,OAAe,gBAAgB;QACvC,OAAO,AAAC,OAAe,eAAe;QAEtC,mBAAmB;QACnB,WAAW;YACP,MAAM,YAAY,UAAU,OAAO,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC;YACnD,IAAI,WAAW;gBACX,UAAU,KAAK;YACnB;QACJ,GAAG;IACP;IAEA,yBAAyB;IACzB,MAAM,uBAAuB,CAAC,OAAe,OAAe;QACxD,aAAa,CAAA;YACT,MAAM,WAAW;mBAAI,KAAK,KAAK;aAAC;YAChC,MAAM,OAAO;gBAAE,GAAG,QAAQ,CAAC,MAAM;YAAC;YAElC,mBAAmB;YAClB,IAAY,CAAC,MAAM,GAAG;YAEvB,sBAAsB;YACtB,MAAM,qBAAqB,KAAK,GAAG,GAAG,KAAK,SAAS;YACpD,MAAM,iBAAiB,AAAC,qBAAqB,KAAK,eAAe,GAAI;YACrE,MAAM,aAAa,qBAAqB;YACxC,MAAM,YAAY,AAAC,aAAa,KAAK,GAAG,GAAI;YAE5C,MAAM,WAAW,UAAU,WAAW,GAAG,YAAY,UAAU,WAAW,IAAI;YAC9E,MAAM,aAAa,WAAW,YAAY,IAAI;YAC9C,MAAM,aAAa,WAAW,YAAY,IAAI;YAC9C,MAAM,aAAa,WAAW,IAAI;YAElC,KAAK,cAAc,GAAG;YACtB,KAAK,UAAU,GAAG;YAClB,KAAK,SAAS,GAAG;YACjB,KAAK,UAAU,GAAG;YAClB,KAAK,UAAU,GAAG;YAClB,KAAK,UAAU,GAAG;YAClB,KAAK,WAAW,GAAG,aAAa;YAEhC,QAAQ,CAAC,MAAM,GAAG;YAClB,OAAO;gBAAE,GAAG,IAAI;gBAAE,OAAO;YAAS;QACtC;IACJ;IAEA,6BAA6B;IAC7B,MAAM,gBAAgB,CAAC,GAAwB,OAAe;QAC1D,IAAI,EAAE,GAAG,KAAK,SAAS;YACnB,EAAE,cAAc;YAEhB,0BAA0B;YAC1B,MAAM,SAAS;gBAAC;gBAAY;gBAAO;gBAAa;aAAkB;YAClE,MAAM,oBAAoB,OAAO,OAAO,CAAC;YAEzC,IAAI,oBAAoB,OAAO,MAAM,GAAG,GAAG;gBACvC,iCAAiC;gBACjC,MAAM,YAAY,MAAM,CAAC,oBAAoB,EAAE;gBAC/C,MAAM,YAAY,UAAU,OAAO,CAAC,GAAG,UAAU,CAAC,EAAE,OAAO,CAAC;gBAC5D,IAAI,WAAW;oBACX,UAAU,KAAK;gBACnB;YACJ,OAAO;gBACH,kCAAkC;gBAClC,IAAI,UAAU,UAAU,KAAK,CAAC,MAAM,GAAG,GAAG;oBACtC;oBACA,WAAW;wBACP,MAAM,aAAa,UAAU,OAAO,CAAC,CAAC,SAAS,EAAE,QAAQ,GAAG,CAAC;wBAC7D,IAAI,YAAY;4BACZ,WAAW,KAAK;wBACpB;oBACJ,GAAG;gBACP,OAAO;oBACH,MAAM,eAAe,UAAU,OAAO,CAAC,CAAC,SAAS,EAAE,QAAQ,GAAG,CAAC;oBAC/D,IAAI,cAAc;wBACd,aAAa,KAAK;oBACtB;gBACJ;YACJ;QACJ;IACJ;IAEA,4BAA4B;IAC5B,MAAM,uBAAuB,CAAC;QAC1B,MAAM,WAAW,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAC9C,IAAI,UAAU;YACV,MAAM,WAAW,SAAS,KAAK,GAAG,YAAY,SAAS,KAAK,IAAI;YAEhE,aAAa,CAAA,OAAQ,CAAC;oBAClB,GAAG,IAAI;oBACP,YAAY,SAAS,EAAE;oBACvB,cAAc,SAAS,IAAI;oBAC3B,eAAe,SAAS,KAAK;oBAC7B,iBAAiB,SAAS,OAAO;oBACjC,aAAa,SAAS,KAAK;oBAC3B,SAAS,WAAW,UAAU;gBAClC,CAAC;YAED,4CAA4C;YAC5C,aAAa,CAAA;gBACT,MAAM,WAAW,KAAK,KAAK,CAAC,GAAG,CAAC,CAAA;oBAC5B,MAAM,aAAa,KAAK,GAAG,GAAG,KAAK,SAAS,GAAG,KAAK,cAAc;oBAClE,MAAM,YAAY,AAAC,aAAa,KAAK,GAAG,GAAI;oBAE5C,OAAO;wBACH,GAAG,IAAI;wBACP,YAAY,WAAW,YAAY,IAAI;wBACvC,YAAY,WAAW,YAAY,IAAI;wBACvC,YAAY,WAAW,IAAI;oBAC/B;gBACJ;gBAEA,OAAO;oBAAE,GAAG,IAAI;oBAAE,OAAO;gBAAS;YACtC;YAEA,kBAAkB;QACtB;IACJ;IAEA,kBAAkB;IAClB,MAAM,gBAAgB;QAClB,IAAI;YACA,IAAI,UAAU,KAAK,CAAC,MAAM,KAAK,GAAG;gBAC9B,MAAM;gBACN;YACJ;YAEA,IAAI,UAAU,UAAU,KAAK,GAAG;gBAC5B,MAAM;gBACN;YACJ;YAEA,2BAA2B;YAC3B,KAAK,MAAM,QAAQ,UAAU,KAAK,CAAE;gBAChC,IAAI,KAAK,GAAG,GAAG,KAAK,YAAY,EAAE;oBAC9B,MAAM,CAAC,uBAAuB,EAAE,KAAK,YAAY,CAAC,aAAa,EAAE,KAAK,YAAY,CAAC,aAAa,EAAE,KAAK,GAAG,EAAE;oBAC5G;gBACJ;YACJ;YAEA,MAAM,UAAU;gBACZ,GAAG,SAAS;gBACZ,aAAa,UAAU,WAAW,KAAK,SAAS,IAAI,UAAU,WAAW,KAAK,WAAW,IAAI;gBAC7F,SAAS,UAAU,OAAO,KAAK,UAAU,IAAI;gBAC7C,OAAO,UAAU,KAAK,CAAC,GAAG,CAAC,CAAA,OAAQ,CAAC;wBAChC,GAAG,IAAI;wBACP,IAAI,KAAK,EAAE,IAAI;oBACnB,CAAC;YACL;YAEA,IAAI;YACJ,IAAI,UAAU,OAAO,EAAE;gBACnB,uBAAuB;gBACvB,WAAW,MAAM,MAAM,CAAC,gBAAgB,EAAE,UAAU,OAAO,EAAE,EAAE;oBAC3D,QAAQ;oBACR,SAAS;wBAAE,gBAAgB;oBAAmB;oBAC9C,MAAM,KAAK,SAAS,CAAC;gBACzB;gBACA,MAAM;gBACN,kBAAkB;YACtB,OAAO;gBACH,kBAAkB;gBAClB,WAAW,MAAM,MAAM,mBAAmB;oBACtC,QAAQ;oBACR,SAAS;wBAAE,gBAAgB;oBAAmB;oBAC9C,MAAM,KAAK,SAAS,CAAC;gBACzB;gBACA,MAAM;gBACN,kBAAkB;YACtB;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;YAElC,MAAM,SAAS,MAAM,SAAS,IAAI;YAClC,aAAa,CAAA,OAAQ,CAAC;oBAAE,GAAG,IAAI;oBAAE,SAAS,OAAO,OAAO;gBAAC,CAAC;YAE1D,+BAA+B;YAC/B,KAAK,MAAM,QAAQ,UAAU,KAAK,CAAE;gBAChC,MAAM,QAAQ,gBAAgB,IAAI,CAAC,CAAA,IAC/B,EAAE,UAAU,KAAK,KAAK,UAAU,IAAI,EAAE,OAAO,KAAK,KAAK,OAAO;gBAElE,IAAI,OAAO;oBACP,MAAM,MAAM,CAAC,qBAAqB,EAAE,MAAM,EAAE,EAAE,EAAE;wBAC5C,QAAQ;wBACR,SAAS;4BAAE,gBAAgB;wBAAmB;wBAC9C,MAAM,KAAK,SAAS,CAAC;4BACjB,GAAG,KAAK;4BACR,cAAc,MAAM,YAAY,GAAG,KAAK,GAAG;wBAC/C;oBACJ;gBACJ;YACJ;YAEA,WAAW,IAAM,kBAAkB,KAAK;QAE5C,EAAE,OAAO,OAAY;YACjB,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,MAAM,CAAC,gBAAgB,EAAE,MAAM,OAAO,EAAE;QAC5C;IACJ;IAEA,oBAAoB;IACpB,MAAM,kBAAkB;QACpB,MAAM,YAAY,OAAO,OAAO,CAAC;QACjC,IAAI,CAAC,WAAW;QAEhB,IAAI;YACA,IAAI,UAAU,OAAO,EAAE;gBACnB,MAAM,MAAM,MAAM,MAAM,CAAC,gBAAgB,EAAE,UAAU,OAAO,CAAC,OAAO,CAAC,EAAE;oBACnE,QAAQ;gBACZ;gBAEA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;gBAE7B,aAAa,CAAA,OAAQ,CAAC;wBAClB,GAAG,IAAI;wBACP,aAAa;wBACb,OAAO,KAAK,KAAK,CAAC,GAAG,CAAC,CAAA,OAAQ,CAAC;gCAC3B,GAAG,IAAI;gCACP,cAAc,CAAC,YAAY,EAAE,KAAK,YAAY,EAAE;4BACpD,CAAC;oBACL,CAAC;gBAED,MAAM;YACV,OAAO;gBACH,oCAAoC;gBACpC,aAAa;oBACT,MAAM,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;oBAC5C,YAAY;oBACZ,cAAc;oBACd,eAAe;oBACf,iBAAiB;oBACjB,aAAa;oBACb,SAAS;oBACT,OAAO,EAAE;oBACT,YAAY;oBACZ,UAAU;oBACV,MAAM;oBACN,MAAM;oBACN,MAAM;oBACN,UAAU;oBACV,UAAU;oBACV,YAAY;gBAChB;YACJ;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,0BAA0B;YACxC,MAAM;QACV;IACJ;IAEA,8BAA8B;IAC9B,MAAM,oBAAoB,UAAU,MAAM,CAAC,CAAA;QACvC,MAAM,QAAQ,eAAe,WAAW;QACxC,OACI,EAAE,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,UAClC,EAAE,YAAY,CAAC,WAAW,GAAG,QAAQ,CAAC;IAE9C;IAEA,8BAA8B;IAC9B,MAAM,oBAAoB,UAAU,MAAM,CAAC,CAAA;QACvC,MAAM,QAAQ,eAAe,WAAW;QACxC,OACI,EAAE,EAAE,CAAC,QAAQ,GAAG,QAAQ,CAAC,UACzB,EAAE,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,UAC9B,EAAE,KAAK,CAAC,QAAQ,CAAC;IAEzB;IAEA,qBACI,8OAAC;QAAI,WAAU;;0BAEX,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAG,WAAU;8BAAuC;;;;;;;;;;;0BAIzD,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;;sCAEX,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAI,WAAU;;sDAEX,8OAAC;4CAAI,WAAU;;8DACX,8OAAC;oDAAM,WAAU;8DAAiD;;;;;;8DAClE,8OAAC;oDACG,MAAK;oDACL,OAAO,UAAU,OAAO,IAAI;oDAC5B,QAAQ;oDACR,WAAU;;;;;;;;;;;;sDAKlB,8OAAC;4CAAI,WAAU;;8DACX,8OAAC;oDAAM,WAAU;8DAAiD;;;;;;8DAClE,8OAAC;oDACG,MAAK;oDACL,OAAO,UAAU,IAAI;oDACrB,UAAU,CAAC,IACP,aAAa,CAAC,OAAS,CAAC;gEAAE,GAAG,IAAI;gEAAE,MAAM,EAAE,MAAM,CAAC,KAAK;4DAAC,CAAC;oDAE7D,WAAU;;;;;;;;;;;;sDAKlB,8OAAC;4CAAI,WAAU;;8DACX,8OAAC;oDAAM,WAAU;8DAAiD;;;;;;8DAClE,8OAAC;oDAAI,WAAU;;sEACX,8OAAC;4DACG,MAAK;4DACL,aAAY;4DACZ,OAAO,kBAAkB,CAAC,UAAU,UAAU,GAAG,GAAG,UAAU,UAAU,CAAC,GAAG,EAAE,UAAU,YAAY,EAAE,GAAG,EAAE;4DAC3G,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;4DACjD,WAAU;;;;;;wDAEb,gCACG,8OAAC;4DAAI,WAAU;sEACV,kBAAkB,MAAM,GAAG,IACxB,kBAAkB,GAAG,CAAC,CAAC,yBACnB,8OAAC;oEAEG,WAAU;oEACV,SAAS,IAAM,qBAAqB,SAAS,EAAE;;sFAE/C,8OAAC;4EAAI,WAAU;;gFAAe,SAAS,EAAE;gFAAC;gFAAI,SAAS,IAAI;;;;;;;wEAC1D,SAAS,KAAK,kBACX,8OAAC;4EAAI,WAAU;sFAAyB,SAAS,KAAK;;;;;;;mEANrD,SAAS,EAAE;;;;0FAWxB,8OAAC;gEAAI,WAAU;0EAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQzE,8OAAC;oCAAI,WAAU;;sDAEX,8OAAC;4CAAI,WAAU;;8DACX,8OAAC;oDAAM,WAAU;8DAAiD;;;;;;8DAClE,8OAAC;oDACG,MAAK;oDACL,OAAO,UAAU,aAAa;oDAC9B,QAAQ;oDACR,WAAU;;;;;;;;;;;;sDAKlB,8OAAC;4CAAI,WAAU;;8DACX,8OAAC;oDAAM,WAAU;8DAAiD;;;;;;8DAClE,8OAAC;oDACG,MAAK;oDACL,OAAO,UAAU,eAAe;oDAChC,QAAQ;oDACR,WAAU;;;;;;;;;;;;;;;;;;;;;;;;sCAO1B,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAI,WAAU;;sDAEX,8OAAC;4CAAI,WAAU;;8DACX,8OAAC;oDAAM,WAAU;8DAAiD;;;;;;8DAClE,8OAAC;oDACG,MAAK;oDACL,OAAO,UAAU,WAAW,IAAI;oDAChC,QAAQ;oDACR,WAAU;;;;;;;;;;;;sDAKlB,8OAAC;4CAAI,WAAU;;8DACX,8OAAC;oDAAM,WAAU;8DAAiD;;;;;;8DAClE,8OAAC;oDACG,OAAO,UAAU,WAAW;oDAC5B,UAAU,CAAC,IAAM,aAAa,CAAA,OAAQ,CAAC;gEAAE,GAAG,IAAI;gEAAE,aAAa,EAAE,MAAM,CAAC,KAAK;4DAAC,CAAC;oDAC/E,WAAU;;sEAEV,8OAAC;4DAAO,OAAM;sEAAO;;;;;;sEACrB,8OAAC;4DAAO,OAAM;sEAAS;;;;;;sEACvB,8OAAC;4DAAO,OAAM;sEAAS;;;;;;;;;;;;;;;;;;;;;;;;8CAKnC,8OAAC;oCAAI,WAAU;8CAEX,cAAA,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDAAM,WAAU;0DAAiD;;;;;;0DAClE,8OAAC;gDACG,MAAK;gDACL,OAAO,UAAU,OAAO;gDACxB,QAAQ;gDACR,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BASlC,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAG,WAAU;0CAA2D;;;;;;0CACzE,8OAAC;gCACG,SAAS;gCACT,WAAU;;kDAEV,8OAAC,kMAAA,CAAA,OAAI;wCAAC,MAAM;;;;;;oCAAM;;;;;;;;;;;;;kCAK1B,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAM,WAAU;;kDACb,8OAAC;wCAAM,WAAU;kDACb,cAAA,8OAAC;;8DACG,8OAAC;oDAAG,WAAU;8DAA8E;;;;;;8DAC5F,8OAAC;oDAAG,WAAU;8DAA8E;;;;;;8DAC5F,8OAAC;oDAAG,WAAU;8DAAgF;;;;;;8DAC9F,8OAAC;oDAAG,WAAU;8DAAgF;;;;;;8DAC9F,8OAAC;oDAAG,WAAU;8DAAgF;;;;;;8DAC9F,8OAAC;oDAAG,WAAU;8DAAgF;;;;;;8DAC9F,8OAAC;oDAAG,WAAU;8DAAgF;;;;;;8DAC9F,8OAAC;oDAAG,WAAU;8DAAgF;;;;;;8DAC9F,8OAAC;oDAAG,WAAU;8DAAuD;;;;;;;;;;;;;;;;;kDAG7E,8OAAC;;4CACI,UAAU,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,sBACxB,8OAAC;oDAAe,WAAW,GAAG,QAAQ,MAAM,IAAI,eAAe,WAAW,iDAAiD,CAAC;;sEAExH,8OAAC;4DAAG,WAAU;sEACV,cAAA,8OAAC;gEAAI,WAAU;;kFACX,8OAAC;wEACG,KAAK,CAAC;4EACF,UAAU,OAAO,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,GAAG;wEAC7C;wEACA,MAAK;wEACL,aAAY;wEACZ,OAAO;wEACP,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;wEACjD,WAAW,CAAC,IAAM,cAAc,GAAG,OAAO;wEAC1C,SAAS;4EACL,eAAe;gFAAE,KAAK;gFAAO,KAAK;4EAAW;4EAC7C,kBAAkB;wEACtB;wEACA,QAAQ;4EACJ,WAAW;gFACP,IAAI,KAAK,YAAY,EAAE;oFACnB,kBAAkB;gFACtB;4EACJ,GAAG;wEACP;wEACA,WAAU;;;;;;oEAGb,KAAK,YAAY,kBACd,8OAAC;wEAAI,WAAU;kFACX,cAAA,8OAAC;4EAAI,WAAW,CAAC,YAAY,EAAE,KAAK,YAAY,KAAK,IAAI,iBAAiB,iBAAiB;;gFACtF,KAAK,QAAQ;gFAAC;gFAAI,KAAK,YAAY;gFACnC,KAAK,YAAY,KAAK,mBACnB,8OAAC;oFAAK,WAAU;8FAAoD;;;;;;;;;;;;;;;;;oEAMnF,aAAa,QAAQ,SAAS,aAAa,QAAQ,cAAc,gCAC9D,8OAAC;wEAAI,WAAU;kFACV,kBAAkB,MAAM,GAAG,IACxB,kBAAkB,GAAG,CAAC,CAAC;4EACnB,MAAM,UAAU,gBAAgB,MAAM,CAAC,CAAA,IAAK,EAAE,UAAU,KAAK,SAAS,EAAE;4EACxE,MAAM,aAAa,QAAQ,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,YAAY,EAAE;4EAEpE,qBACI,8OAAC;gFAEG,WAAW,CAAC,mDAAmD,EAAE,eAAe,IAAI,cAAc,IAC5F;gFACN,SAAS;oFACL,qBAAqB,OAAO,SAAS,EAAE;oFACvC,eAAe;oFACf,kBAAkB;gFACtB;;kGAEA,8OAAC;wFAAI,WAAW,CAAC,YAAY,EAAE,eAAe,IAAI,iBAAiB,iBAAiB;;4FAC/E,SAAS,QAAQ;4FAAC;4FAAI,SAAS,YAAY;;;;;;;kGAEhD,8OAAC;wFAAI,WAAU;;4FAAwB;0GAC5B,8OAAC;gGAAK,WAAW,eAAe,IAAI,6BAA6B;0GAAmB;;;;;;4FAAkB;4FACvG,SAAS,GAAG;4FAAC;4FACT,SAAS,OAAO;;;;;;;oFAE7B,eAAe,mBACZ,8OAAC;wFAAI,WAAU;kGAAmC;;;;;;;+EAlBjD,SAAS,EAAE;;;;;wEAsB5B,mBAEA,8OAAC;4EAAI,WAAU;sFAAkC;;;;;;;;;;;;;;;;;;;;;;sEAQrE,8OAAC;4DAAG,WAAU;sEACT,KAAK,OAAO;;;;;;sEAGjB,8OAAC;4DAAG,WAAU;sEACV,cAAA,8OAAC;gEACG,KAAK,CAAC;oEACF,UAAU,OAAO,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG;gEACxC;gEACA,MAAK;gEACL,KAAI;gEACJ,KAAK,KAAK,YAAY;gEACtB,OAAO,KAAK,GAAG,IAAI;gEACnB,UAAU,CAAC;oEACP,MAAM,MAAM,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;oEAC1C,IAAI,MAAM,KAAK,YAAY,EAAE;wEACzB,MAAM,CAAC,+BAA+B,EAAE,KAAK,YAAY,EAAE;wEAC3D;oEACJ;oEACA,qBAAqB,OAAO,OAAO;gEACvC;gEACA,WAAW,CAAC,IAAM,cAAc,GAAG,OAAO;gEAC1C,WAAU;gEACV,aAAY;;;;;;;;;;;sEAKpB,8OAAC;4DAAG,WAAU;sEACV,cAAA,8OAAC;gEACG,KAAK,CAAC;oEAAS,UAAU,OAAO,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,GAAG;gEAAG;gEAC5D,MAAK;gEACL,MAAK;gEACL,OAAO,KAAK,SAAS,IAAI;gEACzB,UAAU,CAAC;oEACP,MAAM,OAAO,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;oEAC3C,qBAAqB,OAAO,aAAa;gEAC7C;gEACA,WAAW,CAAC,IAAM,cAAc,GAAG,OAAO;gEAC1C,WAAU;gEACV,aAAY;;;;;;;;;;;sEAKpB,8OAAC;4DAAG,WAAU;;gEAAyD;gEACjE,YAAY,KAAK,GAAG;;;;;;;sEAI1B,8OAAC;4DAAG,WAAU;sEACV,cAAA,8OAAC;gEACG,KAAK,CAAC;oEAAS,UAAU,OAAO,CAAC,CAAC,gBAAgB,EAAE,OAAO,CAAC,GAAG;gEAAG;gEAClE,MAAK;gEACL,KAAI;gEACJ,KAAI;gEACJ,MAAK;gEACL,OAAO,KAAK,eAAe,IAAI;gEAC/B,UAAU,CAAC;oEACP,MAAM,WAAW,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;oEAC/C,qBAAqB,OAAO,mBAAmB;gEACnD;gEACA,WAAW,CAAC,IAAM,cAAc,GAAG,OAAO;gEAC1C,WAAU;gEACV,aAAY;;;;;;;;;;;sEAKpB,8OAAC;4DAAG,WAAU;;gEACT,KAAK,GAAG;gEAAC;;;;;;;sEAId,8OAAC;4DAAG,WAAU;;gEAAkF;gEAC1F,YAAY,KAAK,WAAW;;;;;;;sEAIlC,8OAAC;4DAAG,WAAU;sEACV,cAAA,8OAAC;gEACG,MAAK;gEACL,SAAS,IAAM,WAAW;gEAC1B,WAAU;gEACV,OAAM;0EAEN,cAAA,8OAAC,0MAAA,CAAA,SAAM;oEAAC,WAAU;;;;;;;;;;;;;;;;;mDArKrB;;;;;4CA0KZ,UAAU,KAAK,CAAC,MAAM,KAAK,mBACxB,8OAAC;0DACG,cAAA,8OAAC;oDAAG,SAAS;oDAAI,WAAU;8DAAwC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAY/F,8OAAC;gBACG,QAAQ;gBACR,SAAS;gBACT,cAAc;gBACd,UAAU;gBACV,SAAS,IAAM,kBAAkB;;;;;;0BAIrC,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAG,WAAU;sCAAkD;;;;;;sCAEhE,8OAAC;4BAAI,WAAU;;8CAEX,8OAAC;oCAAI,WAAU;8CACX,cAAA,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDAAI,WAAU;0DAA+D;;;;;;0DAC9E,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAK,WAAU;0EAAoC;;;;;;0EACpD,8OAAC;gEAAK,WAAU;;oEAAkC;oEAAE,YAAY,UAAU,QAAQ;;;;;;;;;;;;;kEAEtF,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAK,WAAU;0EAAoC;;;;;;0EACpD,8OAAC;gEAAK,WAAU;;oEAAkC;oEAAE,YAAY,UAAU,IAAI;;;;;;;;;;;;;kEAElF,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAK,WAAU;0EAAoC;;;;;;0EACpD,8OAAC;gEAAK,WAAU;;oEAAkC;oEAAE,YAAY,UAAU,IAAI;;;;;;;;;;;;;kEAElF,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAK,WAAU;0EAAoC;;;;;;0EACpD,8OAAC;gEAAK,WAAU;;oEAAkC;oEAAE,YAAY,UAAU,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAO9F,8OAAC;oCAAI,WAAU;8CACX,cAAA,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDAAI,WAAU;0DAA+D;;;;;;0DAC9E,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAK,WAAU;0EAAyB;;;;;;0EACzC,8OAAC;gEAAK,WAAU;;oEAAyB;oEAAE,YAAY,UAAU,UAAU;;;;;;;;;;;;;kEAE/E,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAK,WAAU;0EAAoC;;;;;;0EACpD,8OAAC;gEAAK,WAAU;;oEAAkC;oEAAE,YAAY,UAAU,QAAQ;;;;;;;;;;;;;kEAEtF,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAK,WAAU;0EAAoC;;;;;;0EACpD,8OAAC;gEACG,MAAK;gEACL,MAAK;gEACL,OAAO,UAAU,QAAQ;gEACzB,UAAU,CAAC,IAAM,aAAa,CAAA,OAAQ,CAAC;4EAAE,GAAG,IAAI;4EAAE,UAAU,OAAO,EAAE,MAAM,CAAC,KAAK;wEAAE,CAAC;gEACpF,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQ9B,8OAAC;oCAAI,WAAU;8CACX,cAAA,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDAAI,WAAU;0DAA2B;;;;;;0DAC1C,8OAAC;gDAAI,WAAU;;oDAAqB;oDAAE,YAAY,UAAU,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQ1F,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;;wBACV,8BACG,8OAAC;4BAAI,WAAU;sCACV;;;;;;wBAGR,gCACG,8OAAC;4BAAI,WAAU;sCACV;;;;;;;;;;;;;;;;;0BAOjB,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BACG,SAAS;4BACT,WAAU;;8CAEV,8OAAC,kMAAA,CAAA,OAAI;oCAAC,MAAM;;;;;;gCAAM;;;;;;;sCAGtB,8OAAC;4BACG,SAAS;4BACT,WAAU;;8CAEV,8OAAC,0MAAA,CAAA,SAAM;oCAAC,MAAM;;;;;;gCAAM;;;;;;;;;;;;;;;;;;;;;;;;AAM5C;uCAEe","debugId":null}}]
}