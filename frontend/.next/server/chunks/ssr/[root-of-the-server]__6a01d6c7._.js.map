{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/lib/axios.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"https://localhost:7112\", // update to your .NET API URL\r\n});\r\n\r\n// // âœ… Automatically attach JWT token\r\n// API.interceptors.request.use((config) => {\r\n//   const token = localStorage.getItem(\"token\");\r\n\r\n//   if (token) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//   }\r\n\r\n//   return config;\r\n// });\r\n\r\nexport default API;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;uCAae","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/app/%28dashboard%29/viewAssignments/assignpatient/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { User, Calendar, Clock, Users, UserCheck, Heart, FileText, Search, ExternalLink } from 'lucide-react';\r\nimport { useSearchParams, useRouter } from 'next/navigation';\r\nimport API from '@/lib/axios';\r\n\r\ninterface FormErrors {\r\n  [key: string]: string;\r\n}\r\n\r\ninterface Patient {\r\n  id: string;\r\n  name: string;\r\n  age: number;\r\n  phone: string;\r\n}\r\n\r\ninterface Doctor {\r\n  id: string;\r\n  name: string;\r\n  phone: string;\r\n}\r\n\r\ninterface Volunteer {\r\n  id: string;\r\n  name: string;\r\n  phone: string;\r\n}\r\n\r\ninterface Nurse {\r\n  id: string;\r\n  name: string;\r\n  phone: string;\r\n}\r\ninterface FormData {\r\n  assignmentId: string;\r\n  date: string;\r\n  time: string;\r\n  patientId: string;\r\n  doctorId: string;\r\n  volunteerId: string;\r\n  nurseId: string;\r\n  description: string;\r\n}\r\n\r\ninterface SearchableSelectProps<T> {\r\n  label: string;\r\n  value: string;\r\n  searchValue: string;\r\n  setSearchValue: (value: string) => void;\r\n  showDropdown: boolean;\r\n  setShowDropdown: (show: boolean) => void;\r\n  items: T[];\r\n  onSelect: (id: string) => void;\r\n  renderItem: (item: T) => React.ReactNode;\r\n  editUrl?: string;\r\n  error?: string;\r\n}\r\n\r\nconst AssignmentForm = () => {\r\n  const [formData, setFormData] = useState<FormData>({\r\n    assignmentId: '',\r\n    date: '',\r\n    time: '',\r\n    patientId: '',\r\n    doctorId: '',\r\n    volunteerId: '',\r\n    nurseId: '',\r\n    description: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState<FormErrors>({});\r\n\r\n  // Search states\r\n  const [patientSearch, setPatientSearch] = useState('');\r\n  const [doctorSearch, setDoctorSearch] = useState('');\r\n  const [volunteerSearch, setVolunteerSearch] = useState('');\r\n  const [nurseSearch, setNurseSearch] = useState('');\r\n\r\n  // Dropdown visibility states\r\n  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);\r\n\r\n\r\n  // Counter for PT ID generation\r\n  const [assignmentCounter, setAssignmentCounter] = useState(1);\r\n\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const isEdit = searchParams.get(\"edit\")?.toLowerCase() === \"true\";\r\n  const editId = searchParams.get(\"id\");\r\n\r\n  // Data states\r\n  const [patients, setPatients] = useState<Patient[]>([]);\r\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\r\n  const [volunteers, setVolunteers] = useState<Volunteer[]>([]);\r\n  const [nurses, setNurses] = useState<Nurse[]>([]);\r\n\r\n  // API functions\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const { data } = await API.get<Patient[]>('/api/Hpforms/all-patients');\r\n      setPatients(data);\r\n    } catch (error) {\r\n      console.error('Error fetching patients:', error);\r\n      setPatients([]);\r\n    }\r\n  };\r\n\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      const { data } = await API.get<Doctor[]>('/api/Doctors/all-doctors');\r\n      setDoctors(data);\r\n    } catch (error) {\r\n      console.error('Error fetching doctors:', error);\r\n      setDoctors([]);\r\n    }\r\n  };\r\n\r\n  const fetchVolunteers = async () => {\r\n    try {\r\n      const { data } = await API.get<Volunteer[]>('/api/Volunteers/all-volunteers');\r\n      setVolunteers(data);\r\n    } catch (error) {\r\n      console.error('Error fetching volunteers:', error);\r\n      setVolunteers([]);\r\n    }\r\n  };\r\n\r\n  const fetchNurses = async () => {\r\n    try {\r\n      const { data } = await API.get<Nurse[]>('/api/Nurses/all-nurses');\r\n      setNurses(data);\r\n    } catch (error) {\r\n      console.error('Error fetching nurses:', error);\r\n      setNurses([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAssignmentForEdit = async () => {\r\n      if (isEdit && editId) {\r\n        try {\r\n          const { data }: { data: Record<string, any> } = await API.get(`/api/PatientAssignments/byAssignmentId/${editId}`);\r\n\r\n          // Get current time in HH:MM format\r\n          const now = new Date();\r\n          const currentTime = now.toTimeString().slice(0, 5);\r\n\r\n          setFormData({\r\n            assignmentId: data.assignmentId || \"\",\r\n            date: data.date?.slice(0, 10) || \"\",\r\n            time: currentTime,\r\n            patientId: data.patientId || \"\",\r\n            doctorId: data.doctorId || \"\",\r\n            volunteerId: data.volunteerId || \"\",\r\n            nurseId: data.nurseId || \"\",\r\n            description: data.description || \"\",\r\n          });\r\n\r\n          // Pre-fill SearchableSelect display strings\r\n          const selectedPatient = patients.find(p => p.id === data.patientId);\r\n          if (selectedPatient) setPatientSearch(`${selectedPatient.id} | ${selectedPatient.name} | ${selectedPatient.phone || \"\"}`);\r\n\r\n          const selectedDoctor = doctors.find(d => d.id === data.doctorId);\r\n          if (selectedDoctor) setDoctorSearch(`${selectedDoctor.id} | ${selectedDoctor.name} | ${selectedDoctor.phone || \"\"}`);\r\n\r\n          const selectedVolunteer = volunteers.find(v => v.id === data.volunteerId);\r\n          if (selectedVolunteer) setVolunteerSearch(`${selectedVolunteer.id} | ${selectedVolunteer.name} | ${selectedVolunteer.phone || \"\"}`);\r\n\r\n          const selectedNurse = nurses.find(n => n.id === data.nurseId);\r\n          if (selectedNurse) setNurseSearch(`${selectedNurse.id} | ${selectedNurse.name} | ${selectedNurse.phone || \"\"}`);\r\n        } catch (err) {\r\n          console.error(\"Error fetching assignment for edit:\", err);\r\n          alert(\"Failed to load assignment for editing.\");\r\n        }\r\n      }\r\n    };\r\n\r\n    if (patients.length && doctors.length && volunteers.length && nurses.length) {\r\n      fetchAssignmentForEdit();\r\n    }\r\n  }, [isEdit, editId, patients, doctors, volunteers, nurses]);\r\n\r\n  // Generate PT ID function\r\n  const generateAssignmentId = () => {\r\n    const paddedNumber = assignmentCounter.toString().padStart(3, '0');\r\n    return `PT-${paddedNumber}`;\r\n  };\r\n\r\n  //to fetch last assignment Id\r\n  useEffect(() => {\r\n    const fetchLastAssignmentId = async () => {\r\n      try {\r\n        const res = await API.get<string>('/api/PatientAssignments/getid'); // response is plain text\r\n        const lastId = res.data;\r\n\r\n        const lastNumber = parseInt(lastId.replace('PT-', '')) || 0;\r\n        const newCounter = lastNumber + 1;\r\n\r\n        setAssignmentCounter(newCounter);\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          assignmentId: `PT-${newCounter.toString().padStart(3, '0')}`\r\n        }));\r\n      } catch (error) {\r\n        console.error('Failed to fetch last assignment ID:', error);\r\n      }\r\n    };\r\n\r\n    fetchLastAssignmentId();\r\n  }, []);\r\n\r\n\r\n  // Initialize form data and fetch API data\r\n  useEffect(() => {\r\n    const getCurrentDateTime = () => {\r\n      const now = new Date();\r\n      const date = now.toISOString().split('T')[0];\r\n      const time = now.toTimeString().slice(0, 5);\r\n      return { date, time };\r\n    };\r\n    const { date, time } = getCurrentDateTime();\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      assignmentId: generateAssignmentId(),\r\n      date: date,\r\n      time: time\r\n    }));\r\n    // Fetch data from APIs\r\n    fetchPatients();\r\n    fetchDoctors();\r\n    fetchVolunteers();\r\n    fetchNurses();\r\n  }, []);\r\n\r\n  //closing searchboxes when mouse clicked outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      const target = event.target as HTMLElement;\r\n\r\n      if (!target.closest('.searchable-select')) {\r\n        // Close dropdown\r\n        setActiveDropdown(null);\r\n\r\n        // Clear the appropriate search field\r\n        if (activeDropdown === 'patient') setPatientSearch('');\r\n        else if (activeDropdown === 'doctor') setDoctorSearch('');\r\n        else if (activeDropdown === 'volunteer') setVolunteerSearch('');\r\n        else if (activeDropdown === 'nurse') setNurseSearch('');\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, [activeDropdown]);\r\n\r\n\r\n  // Filter functions\r\n  function filterBySearch<T extends { id: string; name: string; phone?: string }>(\r\n    items: T[],\r\n    searchText: string\r\n  ): T[] {\r\n    if (!searchText.trim()) return items;\r\n\r\n    const query = searchText.toLowerCase();\r\n\r\n    return items.filter(item => {\r\n      const nameParts = item.name.toLowerCase().split(' ');\r\n      const matchesNameStart = nameParts.some(part => part.startsWith(query));\r\n      const matchesId = item.id.toLowerCase().startsWith(query);\r\n      const matchesPhone = item.phone?.startsWith(query);\r\n\r\n      return matchesNameStart || matchesId || matchesPhone;\r\n    });\r\n  }\r\n\r\n  const filteredPatients = filterBySearch(patients, patientSearch);\r\n  const filteredDoctors = filterBySearch(doctors, doctorSearch);\r\n  const filteredVolunteers = filterBySearch(volunteers, volunteerSearch);\r\n  const filteredNurses = filterBySearch(nurses, nurseSearch);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: FormErrors = {};\r\n\r\n    if (!formData.patientId) newErrors.patientId = 'Please select a patient';\r\n    if (!formData.doctorId) newErrors.doctorId = 'Please select a doctor';\r\n    if (!formData.volunteerId) newErrors.volunteerId = 'Please select a volunteer';\r\n    if (!formData.nurseId) newErrors.nurseId = 'Please select a nurse';\r\n    if (!formData.description.trim()) newErrors.description = 'Please provide a description';\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const [submitMessage, setSubmitMessage] = useState('');\r\n  const [submitStatus, setSubmitStatus] = useState<'success' | 'error' | ''>('');\r\n\r\n  const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n\r\n    const currentTime = new Date().toTimeString().slice(0, 5);\r\n    const submissionData = {\r\n      ...formData,\r\n      time: currentTime,\r\n    };\r\n\r\n    if (validateForm()) {\r\n      try {\r\n        const apiData = {\r\n          assignmentId: submissionData.assignmentId,\r\n          date: submissionData.date,\r\n          time: submissionData.time,\r\n          patientId: submissionData.patientId,\r\n          doctorId: submissionData.doctorId,\r\n          volunteerId: submissionData.volunteerId,\r\n          nurseId: submissionData.nurseId,\r\n          description: submissionData.description,\r\n        };\r\n\r\n        if (isEdit && editId) {\r\n          await API.put(`/api/PatientAssignments/updateByAssignmentId/${editId}`, apiData);\r\n          setSubmitMessage(\"Assignment updated successfully!\");\r\n        } else {\r\n          await API.post(\"/api/PatientAssignments\", apiData);\r\n          setSubmitMessage(\"Assignment created successfully!\");\r\n        }\r\n\r\n        setSubmitStatus(\"success\");\r\n\r\n        setTimeout(() => {\r\n          router.push(\"/viewAssignments\");\r\n        }, 1000);\r\n      } catch (error: any) {\r\n        console.error(\"Error submitting assignment:\", error);\r\n        const errorMessage =\r\n          error.response?.data?.message ||\r\n          error.message ||\r\n          \"An unknown error occurred\";\r\n\r\n        setSubmitMessage(`Failed to ${isEdit ? \"update\" : \"create\"} assignment: ${errorMessage}`);\r\n        setSubmitStatus(\"error\");\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-blue-100\">\r\n      {/* Header */}\r\n      <div className=\"bg-gradient-to-r from-blue-900 to-blue-700 text-white p-4 text-center sm:p-6 shadow-lg\">\r\n        <h1 className=\"text-3xl font-light mb-3\">\r\n          {isEdit ? 'Edit Patient Assignment' : 'HealthCare Assignment Form'}\r\n        </h1>\r\n        <p className=\"text-2l text-blue-200\">\r\n          Assign patients to healthcare professionals\r\n        </p>\r\n      </div>\r\n\r\n      {/* Form */}\r\n      <div className=\"bg-white p-4 rounded-b-lg shadow-lg\">\r\n        <div className=\"space-y-4\">\r\n\r\n          {/* Assignment Details Section */}\r\n          <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <FileText className=\"w-5 h-5 text-gray-600 mr-2\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-800\">Assignment Details</h3>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2 uppercase tracking-wide\">\r\n                  Assignment ID <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"assignmentId\"\r\n                  value={formData.assignmentId}\r\n                  className=\"w-full p-2 border-2 border-gray-300 rounded-lg text-gray-800 font-medium bg-gray-100 cursor-not-allowed text-sm\"\r\n                  placeholder=\"Auto-generated ID\"\r\n                  readOnly\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2 uppercase tracking-wide\">\r\n                  Date <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <Calendar className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    value={formData.date}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full p-2 pl-10 border-2 border-gray-300 rounded-lg text-gray-800 font-medium focus:border-gray-500 focus:ring-2 focus:ring-gray-200 focus:outline-none text-sm\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-semibold text-gray-700 mb-2 uppercase tracking-wide\">\r\n                  Time <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <Clock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                  <input\r\n                    type=\"time\"\r\n                    name=\"time\"\r\n                    value={formData.time}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full p-2 pl-10 border-2 border-gray-300 rounded-lg text-gray-800 font-medium focus:border-gray-500 focus:ring-2 focus:ring-gray-200 focus:outline-none text-sm\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Patient and Doctor Selection - Horizontal Layout */}\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n            {/* Patient Selection */}\r\n            <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 searchable-select\">\r\n              <div className=\"flex items-center mb-4\">\r\n                <User className=\"w-5 h-5 text-gray-600 mr-2\" />\r\n                <h3 className=\"text-lg font-semibold text-gray-800\">Patient Assignment</h3>\r\n              </div>\r\n\r\n              <SearchableSelect\r\n                label=\"Select Patient\"\r\n                value={formData.patientId}\r\n                searchValue={patientSearch}\r\n                setSearchValue={setPatientSearch}\r\n                showDropdown={activeDropdown === 'patient'}\r\n                setShowDropdown={(open) => setActiveDropdown(open ? 'patient' : null)}\r\n                items={filteredPatients}\r\n                onSelect={(id: string) => setFormData(prev => ({ ...prev, patientId: id }))}\r\n                renderItem={(patient: Patient) => (\r\n                  <div>\r\n                    <div className=\"font-semibold text-gray-800\">{patient.id} | {patient.name}</div>\r\n                    <div className=\"text-sm text-gray-600\">Age: {patient.age} | Ph: {patient.phone}</div>\r\n                  </div>\r\n                )}\r\n                editUrl={formData.patientId ? `/viewpatients/patient_reg?edit=true&id=${formData.patientId}` : undefined}\r\n                error={errors.patientId}\r\n              />\r\n            </div>\r\n\r\n            {/* Doctor Selection */}\r\n            <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 searchable-select\">\r\n              <div className=\"flex items-center mb-4\">\r\n                <UserCheck className=\"w-5 h-5 text-gray-600 mr-2\" />\r\n                <h3 className=\"text-lg font-semibold text-gray-800\">Doctor Assignment</h3>\r\n              </div>\r\n\r\n              <SearchableSelect\r\n                label=\"Select Doctor\"\r\n                value={formData.doctorId}\r\n                searchValue={doctorSearch}\r\n                setSearchValue={setDoctorSearch}\r\n                showDropdown={activeDropdown === 'doctor'}\r\n                setShowDropdown={(open) => setActiveDropdown(open ? 'doctor' : null)}\r\n                items={filteredDoctors}\r\n                onSelect={(id) => setFormData(prev => ({ ...prev, doctorId: id }))}\r\n                renderItem={(doctor) => (\r\n                  <div>\r\n                    <div className=\"font-semibold text-gray-800\">{doctor.id} | Dr. {doctor.name}</div>\r\n                    <div className=\"text-sm text-gray-600\">Ph: {doctor.phone}</div>\r\n                  </div>\r\n                )}\r\n                editUrl={formData.doctorId ? `/viewdoctor/doctor?edit=true&id=${formData.doctorId}` : undefined}\r\n                error={errors.doctorId}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n\r\n          {/* Volunteer and Nurse Selection - Horizontal Layout */}\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n            {/* Volunteer Selection */}\r\n            <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 searchable-select\">\r\n              <div className=\"flex items-center mb-4\">\r\n                <Heart className=\"w-5 h-5 text-gray-600 mr-2\" />\r\n                <h3 className=\"text-lg font-semibold text-gray-800\">Volunteer Assignment</h3>\r\n              </div>\r\n\r\n              <SearchableSelect\r\n                label=\"Select Volunteer\"\r\n                value={formData.volunteerId}\r\n                searchValue={volunteerSearch}\r\n                setSearchValue={setVolunteerSearch}\r\n                showDropdown={activeDropdown === 'volunteer'}\r\n                setShowDropdown={(open) => setActiveDropdown(open ? 'volunteer' : null)}\r\n                items={filteredVolunteers}\r\n                onSelect={(id: string) => setFormData(prev => ({ ...prev, volunteerId: id }))}\r\n                renderItem={(volunteer: Volunteer) => (\r\n                  <div>\r\n                    <div className=\"font-semibold text-gray-800\">{volunteer.id} | {volunteer.name}</div>\r\n                    <div className=\"text-sm text-gray-600\">Ph: {volunteer.phone}</div>\r\n                  </div>\r\n                )}\r\n                editUrl={formData.volunteerId ? `/viewvolunteers/volunteer?edit=true&id=${formData.volunteerId}` : undefined}\r\n                error={errors.volunteerId}\r\n              />\r\n            </div>\r\n\r\n            {/* Nurse Selection */}\r\n            <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 searchable-select\">\r\n              <div className=\"flex items-center mb-4\">\r\n                <Users className=\"w-5 h-5 text-gray-600 mr-2\" />\r\n                <h3 className=\"text-lg font-semibold text-gray-800\">Nurse Assignment</h3>\r\n              </div>\r\n\r\n              <SearchableSelect\r\n                label=\"Select Nurse\"\r\n                value={formData.nurseId}\r\n                searchValue={nurseSearch}\r\n                setSearchValue={setNurseSearch}\r\n                showDropdown={activeDropdown === 'nurse'}\r\n                setShowDropdown={(open) => setActiveDropdown(open ? 'nurse' : null)}\r\n                items={filteredNurses}\r\n                onSelect={(id: string) => setFormData(prev => ({ ...prev, nurseId: id }))}\r\n                renderItem={(nurse: Nurse) => (\r\n                  <div>\r\n                    <div className=\"font-semibold text-gray-800\">{nurse.id} | {nurse.name}</div>\r\n                    <div className=\"text-sm text-gray-600\">Ph: {nurse.phone}</div>\r\n                  </div>\r\n                )}\r\n                editUrl={formData.nurseId ? `/viewnurses/nurse?edit=true&id=${formData.nurseId}` : undefined}\r\n                error={errors.nurseId}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n\r\n          {/* Description */}\r\n          <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <FileText className=\"w-5 h-5 text-gray-600 mr-2\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-800\">Assignment Description</h3>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-semibold text-gray-700 mb-2 uppercase tracking-wide\">\r\n                Description <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <textarea\r\n                name=\"description\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                rows={3}\r\n                className={`w-full p-2 border-2 rounded-lg text-gray-800 font-medium transition-all duration-300 text-sm resize-none\r\n                    ${errors.description\r\n                    ? 'border-red-400 bg-red-50 focus:border-red-500 focus:ring-red-200'\r\n                    : 'border-gray-300 bg-white focus:border-gray-500 focus:ring-gray-200'\r\n                  }\r\n                    focus:outline-none focus:ring-2`}\r\n                placeholder=\"Provide detailed information about this assignment, including care instructions, special requirements, or any relevant notes...\"\r\n              />\r\n              {errors.description && <p className=\"text-red-500 text-sm mt-1\">{errors.description}</p>}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Submit Button */}\r\n          {/* Submit Status Message */}\r\n          {submitMessage && (\r\n            <div\r\n              className={`mb-4 p-3 rounded-lg text-center text-sm font-semibold ${submitStatus === 'success'\r\n                ? 'bg-green-100 text-green-800 border border-green-300'\r\n                : 'bg-red-100 text-red-800 border border-red-300'\r\n                }`}\r\n            >\r\n              {submitMessage}\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"flex justify-center pt-6\">\r\n            <button\r\n              onClick={handleSubmit}\r\n              className=\"bg-gray-800 hover:bg-gray-900 text-white font-semibold py-3 px-8 rounded-lg text-base\r\n             transform transition-all duration-300 hover:scale-105 hover:shadow-lg\r\n             focus:outline-none focus:ring-4 focus:ring-gray-300\"\r\n            >\r\n              {isEdit ? \"Update Assignment\" : \"Create Assignment\"}\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignmentForm;\r\n\r\nconst SearchableSelect = <T extends { id: string; name: string; phone?: string }>({\r\n  label,\r\n  value,\r\n  searchValue,\r\n  setSearchValue,\r\n  showDropdown,\r\n  setShowDropdown,\r\n  items,\r\n  onSelect,\r\n  renderItem,\r\n  editUrl,\r\n  error,\r\n}: SearchableSelectProps<T>) => {\r\n  const dropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n  return (\r\n    <div ref={dropdownRef} className=\"relative searchable-select\">\r\n      <label className=\"block text-sm font-semibold text-gray-700 mb-2 uppercase tracking-wide\">\r\n        {label} <span className=\"text-red-500\">*</span>\r\n      </label>\r\n\r\n      <div className=\"relative\">\r\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n        <input\r\n          type=\"text\"\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n          onFocus={() => setShowDropdown(true)}\r\n          className={`w-full p-2 pl-10 pr-10 border-2 rounded-lg text-gray-800 font-medium transition-all duration-300 text-sm\r\n            ${error\r\n              ? 'border-red-400 bg-red-50 focus:border-red-500 focus:ring-red-200'\r\n              : 'border-gray-300 bg-white focus:border-gray-500 focus:ring-gray-200'\r\n            }\r\n            focus:outline-none focus:ring-2`}\r\n          placeholder={`Search and select ${label.toLowerCase()}...`}\r\n        />\r\n\r\n        {value && editUrl && (\r\n          <a\r\n            href={editUrl}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700 transition-colors\"\r\n          >\r\n            <ExternalLink className=\"w-4 h-4\" />\r\n          </a>\r\n        )}\r\n      </div>\r\n\r\n      {showDropdown && (\r\n        <div className=\"absolute z-10 w-full mt-1 bg-white border-2 border-gray-300 rounded-lg shadow-lg max-h-60 overflow-y-auto\">\r\n          {items.length > 0 ? (\r\n            items.map((item) => (\r\n              <div\r\n                key={item.id}\r\n                onMouseDown={(e) => {\r\n                  e.preventDefault();\r\n                  onSelect(item.id);\r\n                  setSearchValue(`${item.id} | ${item.name} | ${item.phone ?? ''}`);\r\n                  setShowDropdown(false);\r\n                }}\r\n                className=\"p-3 hover:bg-gray-100 cursor-pointer border-b border-gray-200 last:border-b-0 transition-colors\"\r\n              >\r\n                {renderItem(item)}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className=\"p-3 text-gray-500 text-center\">\r\n              {searchValue ? 'No results found' : 'No data available'}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {error && <p className=\"text-red-500 text-sm mt-1\">{error}</p>}\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"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","debugId":null}}]
}