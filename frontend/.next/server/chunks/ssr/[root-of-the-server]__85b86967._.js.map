{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/lib/axios.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"https://localhost:7112\", // update to your .NET API URL\r\n});\r\n\r\n// // ✅ Automatically attach JWT token\r\n// API.interceptors.request.use((config) => {\r\n//   const token = localStorage.getItem(\"token\");\r\n\r\n//   if (token) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//   }\r\n\r\n//   return config;\r\n// });\r\n\r\nexport default API;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;uCAae","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/app/%28dashboard%29/doctorsnote/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSearchParams, useRouter } from 'next/navigation';\r\nimport API from '@/lib/axios';\r\nimport { User, Heart, Calendar, VenetianMask, FileText, Activity, Stethoscope, Eye, Plus, X, Check, Trash2 } from 'lucide-react';\r\n\r\ninterface PatientInfo {\r\n    name: string;\r\n    age: string;\r\n    gender: string;\r\n}\r\n\r\ninterface Symptom {\r\n    name: string;\r\n    pqrstDescription: string;\r\n}\r\n\r\ninterface DoctorNoteFormData {\r\n    patientId: string;\r\n    reviewId: string;\r\n    date: string;\r\n    historyOfIllness: string;\r\n    presentMedications: string;\r\n    associatedIllness?: string;\r\n    pulse: string;\r\n    bp: string;\r\n    height: string;\r\n    weight: string;\r\n    generalExamination?: string;\r\n    systematicExamination?: string;\r\n    additionalNotes?: string;\r\n\r\n    // ✅ Add this to allow entering multiple symptoms\r\n    symptoms?: Symptom[];\r\n}\r\n\r\nexport default function DoctorsNoteForm() {\r\n    const [formData, setFormData] = useState<DoctorNoteFormData>({\r\n        patientId: '', // to fetch and display only\r\n        reviewId: '',  // to be submitted to link to assignment\r\n        date: new Date().toISOString().split('T')[0],\r\n        historyOfIllness: '',\r\n        presentMedications: '',\r\n        associatedIllness: '',\r\n        pulse: '',\r\n        bp: '',\r\n        height: '',\r\n        weight: '',\r\n        generalExamination: '',\r\n        systematicExamination: '',\r\n        additionalNotes: '',\r\n        symptoms: [] // 👈 initialized empty\r\n    });\r\n\r\n\r\n    const [assignmentId, setAssignmentId] = useState('');\r\n    const [patientId, setPatientId] = useState('');\r\n    const [patientInfo, setPatientInfo] = useState<PatientInfo>({\r\n        name: '',\r\n        age: '',\r\n        gender: '',\r\n    });\r\n    const searchParams = useSearchParams();\r\n    const router = useRouter();\r\n\r\n    // ✅ Fetch assignmentId + patientId + basic info\r\n    useEffect(() => {\r\n        const assignment = searchParams.get('assignmentId');\r\n        if (!assignment) return;\r\n\r\n        if (assignmentId === assignment) return;\r\n\r\n        setAssignmentId(assignment);\r\n\r\n        const fetchAssignmentAndPatient = async () => {\r\n            try {\r\n                // ✅ Fetch assignment info\r\n                const assignmentRes = await API.get(`/api/PatientAssignments/byAssignmentId/${assignment}`);\r\n                const assignmentData = assignmentRes.data as any;\r\n\r\n                if (!assignmentData?.patientId) return;\r\n\r\n                setPatientId(assignmentData.patientId);\r\n                setFormData(prev => ({\r\n                    ...prev,\r\n                    reviewId: assignment,\r\n                    patientId: assignmentData.patientId\r\n                }));\r\n\r\n                // ✅ Fetch patient info using patientId\r\n                const patientRes = await API.get(`/api/Hpforms/patient/${assignmentData.patientId}`);\r\n                const patientData = patientRes.data as any;\r\n\r\n                if (!patientData) return;\r\n\r\n                setPatientInfo({\r\n                    name: patientData.name || '',\r\n                    age: patientData.age || '',\r\n                    gender: patientData.gender || ''\r\n                });\r\n            } catch (err) {\r\n                console.error('Failed to fetch assignment or patient data:', err);\r\n            }\r\n        };\r\n\r\n        fetchAssignmentAndPatient();\r\n    }, [searchParams, assignmentId]);\r\n\r\n    useEffect(() => {\r\n        const assignment = searchParams.get(\"assignmentId\");\r\n        if (!assignment) return;\r\n\r\n        const fetchDoctorNote = async () => {\r\n            try {\r\n                const res = await API.get(`/api/DoctorsNotes/review/${assignment}`);\r\n\r\n                if (res.status === 204 || !res.data) {\r\n                    console.log(\"🆕 No DoctorNote found — this is a new entry.\");\r\n                    setNoteExists(false);\r\n                    return;\r\n                }\r\n\r\n                setNoteExists(true);\r\n\r\n                const data = res.data as any;\r\n\r\n                const formattedDate = data.date?.split('T')[0] || '';\r\n\r\n                setFormData((prev) => ({\r\n                    ...prev,\r\n                    reviewId: data.reviewId,\r\n                    patientId: data.patientId,\r\n                    date: formattedDate,\r\n                    historyOfIllness: data.historyOfIllness || '',\r\n                    presentMedications: data.presentMedications || '',\r\n                    associatedIllness: data.associatedIllness || '',\r\n                    pulse: data.pulse || '',\r\n                    bp: data.bp || '',\r\n                    height: data.height || '',\r\n                    weight: data.weight || '',\r\n                    generalExamination: data.generalExamination || '',\r\n                    systematicExamination: data.systematicExamination || '',\r\n                    additionalNotes: data.additionalNotes || ''\r\n                }));\r\n\r\n                if (Array.isArray(data.symptoms)) {\r\n                    const mappedSymptoms = data.symptoms.map((s: any) => ({\r\n                        name: s.name || '',\r\n                        pqrstDescription: s.pqrstDescription || ''\r\n                    }));\r\n                    setSymptoms(mappedSymptoms);\r\n                }\r\n            } catch (err: any) {\r\n                if (err.response?.status === 404) {\r\n                    console.log(\"🆕 No DoctorNote found — this is a new entry.\");\r\n                    setNoteExists(false);\r\n                } else {\r\n                    console.error(\"❌ Unexpected error fetching DoctorNote:\", err.message);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchDoctorNote();\r\n    }, [searchParams]);\r\n\r\n\r\n    const getTodaysDate = () => {\r\n        const today = new Date();\r\n        return today.toISOString().split('T')[0];\r\n    };\r\n    const [date, setDate] = useState<string>(getTodaysDate());\r\n\r\n    const [symptoms, setSymptoms] = useState<Symptom[]>([\r\n        { name: '', pqrstDescription: '' }\r\n    ]);\r\n\r\n    const [noteExists, setNoteExists] = useState(false);\r\n    const [submitMessage, setSubmitMessage] = useState('');\r\n    const [submitStatus, setSubmitStatus] = useState<'success' | 'error' | ''>('');\r\n\r\n    const updateSymptom = (\r\n        index: number,\r\n        field: keyof Symptom,\r\n        value: string\r\n    ) => {\r\n        const newSymptoms = [...symptoms];\r\n        newSymptoms[index][field] = value;\r\n        setSymptoms(newSymptoms);\r\n    };\r\n\r\n    const addSymptom = () => {\r\n        setSymptoms([...symptoms, { name: '', pqrstDescription: '' }]);\r\n    };\r\n\r\n    const removeSymptom = (index: number) => {\r\n        if (symptoms.length > 1) {\r\n            setSymptoms(symptoms.filter((_, i) => i !== index));\r\n        }\r\n    };\r\n\r\n    const isEditMode = !!formData.reviewId && symptoms.length > 0;\r\n\r\n    const handleSubmit = async () => {\r\n        const reviewId = formData.reviewId;\r\n\r\n        const dataToSend = {\r\n            ...formData,\r\n            symptoms: symptoms.map(s => ({\r\n                name: s.name,\r\n                pqrstDescription: s.pqrstDescription\r\n            }))\r\n        };\r\n\r\n        try {\r\n            const isEditMode = noteExists;\r\n\r\n            const url = isEditMode\r\n                ? `/api/DoctorsNotes/review/${formData.reviewId}` // now the real reviewId\r\n                : `/api/DoctorsNotes`;\r\n\r\n            if (isEditMode) {\r\n                await API.put(url, dataToSend);\r\n            } else {\r\n                await API.post(url, dataToSend);\r\n            }\r\n            setSubmitMessage(isEditMode\r\n                ? \"Doctor's Note updated successfully!\"\r\n                : \"Doctor's Note created successfully!\");\r\n            setSubmitStatus('success');\r\n\r\n            setTimeout(() => {\r\n                router.push(`/doctor-consultations/details?patientId=${patientId}&assignmentId=${assignmentId}&refresh=1`)\r\n            }, 1000);\r\n\r\n        } catch (error: any) {\r\n            console.error(\"❌ Submission error:\", error.response?.data || error.message);\r\n            setSubmitMessage('An error occurred while submitting the form.');\r\n            setSubmitStatus('error');\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setSubmitMessage('');\r\n            setSubmitStatus('');\r\n        }, 3000);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"min-h-screen w-full max-w-screen bg-gradient-to-br from-blue-50 to-blue-100 px-0 sm:px-0 py-0\">\r\n            {/* Header */}\r\n            <div className=\"bg-gradient-to-r from-blue-900 to-blue-700 text-white p-4 text-center sm:p-6 shadow-lg\">\r\n                <div className=\"flex justify-center items-center gap-3 mb-3\">\r\n                    <h1 className=\"text-2xl sm:text-3xl font-light\">\r\n                        Doctor's Note\r\n                    </h1>\r\n                    <Stethoscope className=\"w-6 h-6 text-blue-200\" />\r\n                </div>\r\n                <p className=\"text-sm sm:text-lg text-blue-200\">\r\n                    Patient Diagnosis and Medical Assessment\r\n                </p>\r\n            </div>\r\n\r\n            {/* Form */}\r\n            <div className=\"p-2 sm:p-4 lg:p-6\">\r\n                <div className=\"space-y-4 sm:space-y-6\">\r\n                    {/* Patient and Review IDs and Date */}\r\n                    <div className=\"text-sm sm:text-base font-medium text-blue-900 mb-4 px-2 sm:px-4\">\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                            {/* Patient ID */}\r\n                            <div className=\"flex justify-start\">\r\n                                <div className=\"flex items-center gap-2 bg-blue-50 text-blue-900 px-3 py-1.5 rounded-lg shadow-sm border border-blue-200 w-fit max-w-xs\">\r\n                                    <span className=\"font-semibold\">Patient ID:</span>\r\n                                    <span className=\"text-sm\">{formData.patientId || '-'}</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Review ID */}\r\n                            <div className=\"flex justify-start\">\r\n                                <div className=\"flex items-center gap-2 bg-blue-50 text-blue-900 px-3 py-1.5 rounded-lg shadow-sm border border-blue-200 w-fit max-w-xs\">\r\n                                    <span className=\"font-semibold\">Review ID:</span>\r\n                                    <span className=\"text-sm\">{formData.reviewId || '-'}</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Date Picker (right side) */}\r\n                            <div className=\"flex items-center gap-2 bg-blue-50 text-blue-900 px-3 py-1.5 rounded-lg shadow-sm border border-blue-200 w-fit max-w-xs\">\r\n                                <span className=\"font-semibold\">Date :</span>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    value={formData.date}\r\n                                    onChange={(e) => setFormData(prev => ({ ...prev, date: e.target.value }))}\r\n                                    className=\"...\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                     {/* 👤 Patient Information Display */}\r\n                    <div className=\"bg-white p-4 rounded-lg shadow-sm border border-gray-200\">\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n\r\n                            {/* Name */}\r\n                            <div>\r\n                                <label className=\"block text-s font-semibold mb-1 uppercase tracking-wide\">\r\n                                    <span className=\"text-blue-900\">Name :</span>{\" \"}\r\n                                    <span className=\"text-blue-600\">\r\n                                        {patientInfo.name + \" / \" + patientInfo.age + \" / \" + patientInfo.gender}\r\n                                    </span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Section 1: History of the Illness */}\r\n                    <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                        <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                            <FileText className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                            <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">\r\n                                1. History of the Illness\r\n                            </h3>\r\n                        </div>\r\n                        <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                            <textarea\r\n                                value={formData.historyOfIllness}\r\n                                onChange={(e) => setFormData({ ...formData, historyOfIllness: e.target.value })}\r\n                                className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                rows={2}\r\n                                placeholder=\"Please provide detailed history of the patient's illness...\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Section 2: Evaluation of presenting Symptoms */}\r\n                    <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                        <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                            <Activity className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                            <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">\r\n                                2. Evaluation of Presenting Symptoms\r\n                            </h3>\r\n                            <span className=\"text-xs text-blue-600 ml-2 bg-blue-100 px-2 py-1 rounded-full\">\r\n                                Use PQRST Format whenever possible\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"space-y-4\">\r\n                            {symptoms.map((symptom, index) => (\r\n                                <div\r\n                                    key={index}\r\n                                    className=\"bg-white p-4 rounded-xl shadow-sm border border-gray-200\"\r\n                                >\r\n                                    <div className=\"flex items-center justify-between mb-3\">\r\n                                        <h4 className=\"text-sm font-semibold text-blue-900\">\r\n                                            Symptom {index + 1}\r\n                                        </h4>\r\n                                        {symptoms.length > 1 && (\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={() => removeSymptom(index)}\r\n                                                className=\"text-red-600 hover:text-red-800 p-1\"\r\n                                            >\r\n                                                <Trash2 className=\"w-4 h-4\" />\r\n                                            </button>\r\n                                        )}\r\n\r\n                                    </div>\r\n\r\n                                    {/* Flex container for horizontal layout */}\r\n                                    <div className=\"flex flex-col lg:flex-row gap-4\">\r\n                                        {/* Symptom Name (40%) */}\r\n                                        <div className=\"w-full lg:w-2/5\">\r\n                                            <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                                Symptom Name:\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={symptom.name}\r\n                                                onChange={(e) => updateSymptom(index, 'name', e.target.value)}\r\n                                                className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-sm\"\r\n                                                placeholder=\"Enter symptom name\"\r\n                                            />\r\n                                        </div>\r\n\r\n                                        {/* PQRST Evaluation (60%) */}\r\n                                        <div className=\"w-full lg:w-3/5\">\r\n                                            <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                                PQRST Evaluation:\r\n                                            </label>\r\n                                            <textarea\r\n                                                value={symptom.pqrstDescription}\r\n                                                onChange={(e) =>\r\n                                                    updateSymptom(index, 'pqrstDescription', e.target.value)\r\n                                                }\r\n                                                className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300 placeholder:text-gray-400 placeholder:text-sm\"\r\n                                                rows={2}\r\n                                                placeholder={`P - Provocation/Palliation: What makes it better/worse?      Q - Quality: What does it feel like?\r\nR - Region/Radiation: Where is it? Does it spread?               S - Severity: Rate the intensity (1-10)\r\nT - Timing: When did it start? How long does it last?`}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={addSymptom}\r\n                            className=\"mt-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white px-4 py-2 rounded-lg hover:from-blue-700 hover:to-blue-800 flex items-center gap-2 text-sm font-medium shadow-md transition-all duration-300\"\r\n                        >\r\n                            <Plus size={14} /> Add Symptom\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* Section 3: Present Medications */}\r\n                    <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                        <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                            <Heart className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                            <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">\r\n                                3. Present Medications\r\n                            </h3>\r\n                        </div>\r\n                        <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                            <textarea\r\n                                value={formData.presentMedications}\r\n                                onChange={(e) => setFormData({ ...formData, presentMedications: e.target.value })}\r\n                                className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                rows={3}\r\n                                placeholder=\"List current medications with dosages and frequency...\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Section 4: Associated Illness */}\r\n                    <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                        <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                            <FileText className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                            <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">\r\n                                4. Associated Illness (if any)\r\n                            </h3>\r\n                        </div>\r\n                        <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                            <textarea\r\n                                value={formData.associatedIllness}\r\n                                onChange={(e) => setFormData({ ...formData, associatedIllness: e.target.value })}\r\n                                className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                rows={2}\r\n                                placeholder=\"Describe any associated illnesses or comorbidities...\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Section 5: Physical Examination */}\r\n                    <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                        <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                            <Stethoscope className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                            <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">\r\n                                5. Physical Examination\r\n                            </h3>\r\n                        </div>\r\n\r\n                        {/* Vital Signs - Pulse, BP, Height, Weight in single line */}\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-4\">\r\n                            {/* Pulse */}\r\n                            <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                    a) Pulse:\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={formData.pulse}\r\n                                    onChange={(e) => setFormData({ ...formData, pulse: e.target.value })}\r\n                                    className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-sm\"\r\n                                    placeholder=\"e.g., 80 bpm, regular\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* BP */}\r\n                            <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                    b) Blood Pressure:\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={formData.bp}\r\n                                    onChange={(e) => setFormData({ ...formData, bp: e.target.value })}\r\n                                    className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-sm\"\r\n                                    placeholder=\"e.g., 120/80 mmHg\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Height */}\r\n                            <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                    c) Height:\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={formData.height}\r\n                                    onChange={(e) => setFormData({ ...formData, height: e.target.value })}\r\n                                    className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-sm\"\r\n                                    placeholder=\"e.g., 170 cm\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Weight */}\r\n                            <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                    d) Weight:\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={formData.weight}\r\n                                    onChange={(e) => setFormData({ ...formData, weight: e.target.value })}\r\n                                    className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-sm\"\r\n                                    placeholder=\"e.g., 65 kg\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/* General Examination */}\r\n                        <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                            <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                General Examination:\r\n                            </label>\r\n                            <textarea\r\n                                value={formData.generalExamination}\r\n                                onChange={(e) => setFormData({ ...formData, generalExamination: e.target.value })}\r\n                                className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                rows={2}\r\n                                placeholder=\"Describe general appearance, consciousness level, nutritional status, pallor, jaundice, lymphadenopathy, edema, etc.\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Section 6: Systematic Examination */}\r\n                    <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                        <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                            <Eye className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                            <h3 className=\"text-base lg:text-lg font-semibold text-blue-900\">\r\n                                6. Systematic Examination\r\n                            </h3>\r\n                        </div>\r\n\r\n                        <p className=\"text-base text-blue-800 font-semibold mb-2 ml-1\">\r\n                            CVS / RS / GIT / CNS / Others\r\n                        </p>\r\n\r\n                        <textarea\r\n                            value={formData.systematicExamination}\r\n                            onChange={(e) =>\r\n                                setFormData({ ...formData, systematicExamination: e.target.value })\r\n                            }\r\n                            className=\"w-full p-4 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300 placeholder:text-gray-400 placeholder:text-sm\"\r\n                            rows={3}\r\n                            placeholder={`CVS (Cardiovascular System)\\nRS (Respiratory System)\\nGIT (Gastrointestinal System)\\nCNS (Central Nervous System)\\nOthers`}\r\n                        />\r\n                    </div>\r\n\r\n\r\n\r\n                    {/* Section 7: Additional Notes */}\r\n                    <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                        <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                            <FileText className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                            <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">\r\n                                7. Additional Notes\r\n                            </h3>\r\n                        </div>\r\n                        <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                            <textarea\r\n                                value={formData.additionalNotes}\r\n                                onChange={(e) => setFormData({ ...formData, additionalNotes: e.target.value })}\r\n                                className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                rows={2}\r\n                                placeholder=\"Any additional observations, impressions, or recommendations...\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Submit Status Message */}\r\n                    {submitMessage && (\r\n                        <div className={`mb-4 p-3 rounded-lg text-center text-sm font-semibold ${submitStatus === 'success'\r\n                            ? 'bg-green-100 text-green-800 border border-green-300'\r\n                            : 'bg-red-100 text-red-800 border border-red-300'\r\n                            }`}>\r\n                            {submitMessage}\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Submit Button Section */}\r\n                    <div className=\"flex justify-center pt-6 print:hidden\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            onClick={handleSubmit}\r\n                            className=\"bg-gradient-to-r from-blue-600 to-blue-700 text-white px-8 sm:px-12 py-3 sm:py-4 rounded-xl sm:rounded-2xl text-base sm:text-lg font-semibold hover:from-blue-700 hover:to-blue-800 transition-all duration-300 transform hover:scale-105 shadow-md sm:shadow-xl hover:shadow-lg sm:hover:shadow-2xl flex items-center gap-2 sm:gap-3\"\r\n                        >\r\n                            <Check className=\"w-5 h-5 sm:w-6 sm:h-6\" />\r\n                            {isEditMode ? \"Update Doctor's Note\" : \"Submit Doctor's Note\"}\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}