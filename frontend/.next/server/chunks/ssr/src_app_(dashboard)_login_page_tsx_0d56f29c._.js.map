{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/app/%28dashboard%29/login/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\n\n\n// Define the user map type\ntype UserMap = {\n  [key: string]: {\n    [username: string]: string;\n  };\n};\n\nconst users: UserMap = {\n  Managment: {\n    Arjun: \"Managment123\",\n    Swetha: \"Managment123\",\n  },\n  admin: {\n    Syam: \"admin123\",\n    Devi: \"admin123\",\n  },\n};\n\nexport default function LoginPage() {\n  const [activeTab, setActiveTab] = useState<\"Managment\" | \"admin\">(\"Managment\");\n  const [ManagmentUsername, setManagmentUsername] = useState(\"\");\n  const [ManagmentPassword, setManagmentPassword] = useState(\"\");\n  const [adminUsername, setAdminUsername] = useState(\"\");\n  const [adminPassword, setAdminPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleLogin = () => {\n    const username = activeTab === \"Managment\" ? ManagmentUsername : adminUsername;\n    const password = activeTab === \"Managment\" ? ManagmentPassword : adminPassword;\n\n    if (users[activeTab] && users[activeTab][username] === password) {\n      localStorage.setItem(\"username\", username);\n      window.location.href = \"/home\";\n    } else {\n      setError(\"Invalid username or password\");\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-screen justify-center items-center bg-gradient-to-br from-gray-100 to-blue-200 p-4\">\n      <div className=\"bg-white p-8 rounded-xl shadow-lg w-full max-w-md\">\n        <h2 className=\"text-3xl font-bold text-center text-gray-800 mb-6\">Login</h2>\n\n        {/* Tabs */}\n        <div className=\"flex justify-center gap-4 mb-6\">\n          {([\"Managment\", \"admin\"] as const).map((tab) => (\n            <button\n              key={tab}\n              onClick={() => {\n                setActiveTab(tab);\n                setError(\"\");\n              }}\n              className={`px-4 py-2 rounded-full font-medium transition duration-300 ${\n                activeTab === tab ? \"bg-blue-600 text-white\" : \"bg-gray-200 text-gray-700\"\n              }`}\n            >\n              {tab.charAt(0).toUpperCase() + tab.slice(1)} Login\n            </button>\n          ))}\n        </div>\n\n        {/* Form */}\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm text-gray-700 mb-1\">Username</label>\n            <input\n              type=\"text\"\n              className=\"w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400\"\n              value={activeTab === \"Managment\" ? ManagmentUsername : adminUsername}\n              onChange={(e) =>\n                activeTab === \"Managment\"\n                  ? setManagmentUsername(e.target.value)\n                  : setAdminUsername(e.target.value)\n              }\n            />\n          </div>\n          <div>\n            <label className=\"block text-sm text-gray-700 mb-1\">Password</label>\n            <input\n              type=\"password\"\n              className=\"w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400\"\n              value={activeTab === \"Managment\" ? ManagmentPassword : adminPassword}\n              onChange={(e) =>\n                activeTab === \"Managment\"\n                  ? setManagmentPassword(e.target.value)\n                  : setAdminPassword(e.target.value)\n              }\n            />\n          </div>\n          <button\n            onClick={handleLogin}\n            className=\"w-full py-2 bg-blue-600 text-white font-semibold rounded-md hover:bg-blue-700 transition\"\n          >\n            Login\n          </button>\n          {error && <p className=\"text-red-500 text-sm text-center\">{error}</p>}\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAYA,MAAM,QAAiB;IACrB,WAAW;QACT,OAAO;QACP,QAAQ;IACV;IACA,OAAO;QACL,MAAM;QACN,MAAM;IACR;AACF;AAEe,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAyB;IAClE,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,cAAc;QAClB,MAAM,WAAW,cAAc,cAAc,oBAAoB;QACjE,MAAM,WAAW,cAAc,cAAc,oBAAoB;QAEjE,IAAI,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,CAAC,SAAS,KAAK,UAAU;YAC/D,aAAa,OAAO,CAAC,YAAY;YACjC,OAAO,QAAQ,CAAC,IAAI,GAAG;QACzB,OAAO;YACL,SAAS;QACX;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAoD;;;;;;8BAGlE,8OAAC;oBAAI,WAAU;8BACZ,AAAC;wBAAC;wBAAa;qBAAQ,CAAW,GAAG,CAAC,CAAC,oBACtC,8OAAC;4BAEC,SAAS;gCACP,aAAa;gCACb,SAAS;4BACX;4BACA,WAAW,CAAC,2DAA2D,EACrE,cAAc,MAAM,2BAA2B,6BAC/C;;gCAED,IAAI,MAAM,CAAC,GAAG,WAAW,KAAK,IAAI,KAAK,CAAC;gCAAG;;2BATvC;;;;;;;;;;8BAeX,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;;8CACC,8OAAC;oCAAM,WAAU;8CAAmC;;;;;;8CACpD,8OAAC;oCACC,MAAK;oCACL,WAAU;oCACV,OAAO,cAAc,cAAc,oBAAoB;oCACvD,UAAU,CAAC,IACT,cAAc,cACV,qBAAqB,EAAE,MAAM,CAAC,KAAK,IACnC,iBAAiB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;sCAIzC,8OAAC;;8CACC,8OAAC;oCAAM,WAAU;8CAAmC;;;;;;8CACpD,8OAAC;oCACC,MAAK;oCACL,WAAU;oCACV,OAAO,cAAc,cAAc,oBAAoB;oCACvD,UAAU,CAAC,IACT,cAAc,cACV,qBAAqB,EAAE,MAAM,CAAC,KAAK,IACnC,iBAAiB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;sCAIzC,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;wBAGA,uBAAS,8OAAC;4BAAE,WAAU;sCAAoC;;;;;;;;;;;;;;;;;;;;;;;AAKrE","debugId":null}}]
}