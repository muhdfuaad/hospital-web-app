{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/app/%28dashboard%29/patientdetails/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { User, Eye, MapPin, Building, Pill, Heart, Activity, Phone, Calendar, FileText, DollarSign, HandHeart, Camera, Upload, Users, AlertCircle, ClipboardList, CheckCircle, Shield, RotateCcw, Lock, Plus, X, Check, Home } from 'lucide-react';\r\nimport { useSearchParams } from 'next/navigation';\r\nimport API from '@/lib/axios';\r\nimport { useRouter } from 'next/navigation';\r\n\r\n// Type definitions matching backend\r\ninterface Clinic {\r\n    id?: number;\r\n    clinicName: string;\r\n    registerNo: string;\r\n    remarks: string;\r\n}\r\n\r\ninterface ClinicMaster {\r\n    id: number;\r\n    clinicName: string;\r\n}\r\n\r\ninterface Difficulty {\r\n    difficultyName: string;\r\n    impact: string;\r\n    remarks: string;\r\n}\r\n\r\ninterface FamilyMember {\r\n    id?: number;\r\n    name: string;\r\n    age: string;\r\n    relation: string;\r\n    education: string;\r\n    income: string;\r\n    maritalStatus: string;\r\n    longTermPatient: boolean;\r\n    longTermDetails: string;\r\n}\r\n\r\ninterface PatientDetailDto {\r\n    patientId: string;\r\n    painIntensity?: string;\r\n    economicSituation?: string;\r\n    treatments?: string[];\r\n    treatmentDetails?: string;\r\n    assistances?: string[];\r\n    spiritualFaith?: string;\r\n    mentalSupport?: string;\r\n    expectations?: string;\r\n    basicNeeds?: string;\r\n    facilitiesStatus?: string;\r\n    relationshipStatus?: string;\r\n    patientKnowledge?: string;\r\n    patientConcerns?: string;\r\n    familyKnowledge?: string;\r\n    prioritizedIssues?: string;\r\n    summary?: string;\r\n    plan?: string;\r\n    clinics?: Clinic[];\r\n    difficulties?: Difficulty[];\r\n    familyMembers?: FamilyMember[];\r\n}\r\n\r\nconst PatientRegistrationForm = () => {\r\n    // Configuration\r\n    const API_BASE_URL = 'https://localhost:7112/api';\r\n    const router = useRouter();\r\n    const searchParams = useSearchParams();\r\n    const incomingPatientId = searchParams.get('patientId');\r\n\r\n    // Form data state\r\n    const [formData, setFormData] = useState({\r\n        patientId: '',\r\n        painIntensity: '',\r\n        economicSituation: '',\r\n        treatments: [] as string[],\r\n        treatmentDetails: '',\r\n        assistances: [] as string[],\r\n        spiritualFaith: '',\r\n        mentalSupport: '',\r\n        expectations: '',\r\n        basicNeeds: '',\r\n        facilitiesStatus: '',\r\n        relationshipStatus: '',\r\n        patientKnowledge: '',\r\n        patientConcerns: '',\r\n        familyKnowledge: '',\r\n        prioritizedIssues: '',\r\n        summary: '',\r\n        plan: ''\r\n    });\r\n\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [submitMessage, setSubmitMessage] = useState<string>('');\r\n    const [submitStatus, setSubmitStatus] = useState<'success' | 'error' | ''>('');\r\n\r\n    const [clinics, setClinics] = useState<Clinic[]>([\r\n        { clinicName: '', registerNo: '', remarks: '' }\r\n    ]);\r\n\r\n    const [difficulties, setDifficulties] = useState<Difficulty[]>([\r\n        { difficultyName: '', impact: '', remarks: '' }\r\n    ]);\r\n\r\n    const [showClinicModal, setShowClinicModal] = useState(false);\r\n    const [showFamilyModal, setShowFamilyModal] = useState(false);\r\n    const [newClinicName, setNewClinicName] = useState('');\r\n    const [clinicError, setClinicError] = useState('');\r\n    const [isClinicLoading, setIsClinicLoading] = useState(false);\r\n\r\n    const [familyMembers, setFamilyMembers] = useState<FamilyMember[]>([]);\r\n    const [newFamilyMember, setNewFamilyMember] = useState<Omit<FamilyMember, 'id'>>({\r\n        name: '',\r\n        age: '',\r\n        relation: '',\r\n        education: '',\r\n        income: '',\r\n        maritalStatus: '',\r\n        longTermPatient: false,\r\n        longTermDetails: ''\r\n    });\r\n\r\n    const [clinicMasters, setClinicMasters] = useState<ClinicMaster[]>([\r\n        { id: 1, clinicName: 'General Hospital' },\r\n        { id: 2, clinicName: 'City Medical Center' },\r\n        { id: 3, clinicName: 'Community Health Clinic' }\r\n    ]);\r\n\r\n    const treatmentOptions = [\r\n        { key: 'ayurveda', label: 'Ayurveda' },\r\n        { key: 'homeo', label: 'Homeopathy' },\r\n        { key: 'naturopathy', label: 'Naturopathy' },\r\n        { key: 'greenMedicines', label: 'Green Medicines' },\r\n        { key: 'sidhaMedicines', label: 'Sidha Medicines' },\r\n        { key: 'others', label: 'Others' }\r\n    ];\r\n\r\n    const assistanceOptions = [\r\n        { key: 'medicineSupport', label: 'Medicine Support' },\r\n        { key: 'educationalAssistance', label: 'Educational Assistance' },\r\n        { key: 'foodSupport', label: 'Food Support' },\r\n        { key: 'rsby', label: 'RSBY' },\r\n        { key: 'kaarunya', label: 'Kaarunya' },\r\n        { key: 'others', label: 'Others' }\r\n    ];\r\n\r\n    const difficultyNameOptions = [\r\n        'Pain', 'Nausea', 'Vomiting', 'Loss of appetite', 'Chest/Abdominal pain',\r\n        'Difficulty swallowing', 'Constipation', 'Cough', 'Shortness of Breath',\r\n        'Lack of Sleep', 'Drowsiness', 'Fatigue', 'Swelling', 'Swelling in the feet',\r\n        'Urinary problems', 'Mouth Ulcers', 'Bad smell', 'Drug Allergies', 'Other'\r\n    ];\r\n\r\n    // Set incoming patientId into formData\r\n    useEffect(() => {\r\n        if (!incomingPatientId) return;\r\n\r\n        // Always set patientId into formData\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            patientId: incomingPatientId\r\n        }));\r\n\r\n        // Try to fetch patient data — if exists, enter edit mode\r\n        const checkIfEditMode = async () => {\r\n            setIsLoading(true);\r\n            try {\r\n                const res = await fetch(`${API_BASE_URL}/PatientDetails/patient/${incomingPatientId}`);\r\n                if (!res.ok) throw new Error(\"Patient not found\");\r\n\r\n                const data: PatientDetailDto = await res.json();\r\n                setIsEditMode(true);\r\n                populateFormFromApi(data);\r\n            } catch (error) {\r\n                // ✅ Not an error, just a new patient with no existing details\r\n                console.log(\"No existing patient details — assuming new detail entry.\");\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        checkIfEditMode();\r\n    }, [incomingPatientId]);\r\n\r\n\r\n\r\n    // Show alert on first visit\r\n    useEffect(() => {\r\n        if (typeof window !== \"undefined\" && formData.patientId && !sessionStorage.getItem(\"alertShown\")) {\r\n            alert(\"✅ Please check and fill this form!!\");\r\n            sessionStorage.setItem(\"alertShown\", \"true\");\r\n        }\r\n    }, [formData.patientId]);\r\n\r\n    // Prefill if in edit mode\r\n    useEffect(() => {\r\n        if (isEditMode && incomingPatientId) {\r\n            const fetchPatientData = async () => {\r\n                setIsLoading(true);\r\n                try {\r\n                    const res = await fetch(`${API_BASE_URL}/PatientDetails/patient/${incomingPatientId}`);\r\n                    if (!res.ok) throw new Error(\"Patient fetch failed\");\r\n\r\n                    const data: PatientDetailDto = await res.json();\r\n                    populateFormFromApi(data);\r\n                    setFormData({\r\n                        patientId: data.patientId ?? '',\r\n                        painIntensity: data.painIntensity ?? '',\r\n                        economicSituation: data.economicSituation ?? '',\r\n                        treatments: data.treatments ?? [],\r\n                        treatmentDetails: data.treatmentDetails ?? '',\r\n                        assistances: data.assistances ?? [],\r\n                        spiritualFaith: data.spiritualFaith ?? '',\r\n                        mentalSupport: data.mentalSupport ?? '',\r\n                        expectations: data.expectations ?? '',\r\n                        basicNeeds: data.basicNeeds ?? '',\r\n                        facilitiesStatus: data.facilitiesStatus ?? '',\r\n                        relationshipStatus: data.relationshipStatus ?? '',\r\n                        patientKnowledge: data.patientKnowledge ?? '',\r\n                        patientConcerns: data.patientConcerns ?? '',\r\n                        familyKnowledge: data.familyKnowledge ?? '',\r\n                        prioritizedIssues: data.prioritizedIssues ?? '',\r\n                        summary: data.summary ?? '',\r\n                        plan: data.plan ?? ''\r\n                    });\r\n\r\n                    // Prefill related data\r\n                    setClinics(data.clinics ?? []);\r\n                    setDifficulties(\r\n                        data.difficulties?.map(d => ({\r\n                            difficultyName: d.difficultyName ?? '',\r\n                            impact: d.impact ?? '',\r\n                            remarks: d.remarks ?? ''\r\n                        })) ?? []\r\n                    );\r\n                    setFamilyMembers(\r\n                        data.familyMembers?.map(f => ({\r\n                            name: f.name ?? '',\r\n                            age: f.age ?? '',\r\n                            relation: f.relation ?? '',\r\n                            education: f.education ?? '',\r\n                            income: f.income ?? '',\r\n                            maritalStatus: f.maritalStatus ?? '',\r\n                            longTermPatient: f.longTermPatient ?? false,\r\n                            longTermDetails: f.longTermDetails ?? ''\r\n                        })) ?? []\r\n                    );\r\n\r\n                } catch (error) {\r\n                    console.error(\"❌ Error loading patient data:\", error);\r\n                } finally {\r\n                    setIsLoading(false);\r\n                }\r\n            };\r\n\r\n            fetchPatientData();\r\n        }\r\n    }, [isEditMode, incomingPatientId]);\r\n\r\n\r\n    const populateFormFromApi = (data: PatientDetailDto) => {\r\n        setFormData({\r\n            patientId: data.patientId || '',\r\n            painIntensity: data.painIntensity ?? '',\r\n            economicSituation: data.economicSituation ?? '',\r\n            treatments: data.treatments ?? [],\r\n            treatmentDetails: data.treatmentDetails ?? '',\r\n            assistances: data.assistances ?? [],\r\n            spiritualFaith: data.spiritualFaith ?? '',\r\n            mentalSupport: data.mentalSupport ?? '',\r\n            expectations: data.expectations ?? '',\r\n            basicNeeds: data.basicNeeds ?? '',\r\n            facilitiesStatus: data.facilitiesStatus ?? '',\r\n            relationshipStatus: data.relationshipStatus ?? '',\r\n            patientKnowledge: data.patientKnowledge ?? '',\r\n            patientConcerns: data.patientConcerns ?? '',\r\n            familyKnowledge: data.familyKnowledge ?? '',\r\n            prioritizedIssues: data.prioritizedIssues ?? '',\r\n            summary: data.summary ?? '',\r\n            plan: data.plan ?? ''\r\n        });\r\n\r\n        if (data.clinics && data.clinics.length > 0) {\r\n            setClinics(data.clinics);\r\n        }\r\n\r\n        if (data.difficulties && data.difficulties.length > 0) {\r\n            setDifficulties(data.difficulties.map(d => ({\r\n                difficultyName: d.difficultyName || '',\r\n                impact: d.impact || '',\r\n                remarks: d.remarks || ''\r\n            })));\r\n        }\r\n\r\n        if (data.familyMembers && data.familyMembers.length > 0) {\r\n            setFamilyMembers(data.familyMembers);\r\n        }\r\n    };\r\n\r\n\r\n    const createFormData = (): FormData => {\r\n        const formDataObj = new FormData();\r\n\r\n        formDataObj.append('patientId', formData.patientId);\r\n        Object.entries(formData).forEach(([key, value]) => {\r\n            if (Array.isArray(value)) {\r\n                value.forEach((item, index) => {\r\n                    formDataObj.append(`${key}[${index}]`, item);\r\n                });\r\n            } else {\r\n                formDataObj.append(key, value);\r\n            }\r\n        });\r\n\r\n        clinics.forEach((clinic, index) => {\r\n            formDataObj.append(`clinics[${index}].clinicName`, clinic.clinicName);\r\n            formDataObj.append(`clinics[${index}].registerNo`, clinic.registerNo);\r\n            formDataObj.append(`clinics[${index}].remarks`, clinic.remarks);\r\n        });\r\n\r\n        difficulties.forEach((difficultyName, index) => {\r\n            formDataObj.append(`difficulties[${index}].difficultyNameName`, difficultyName.difficultyName);\r\n            formDataObj.append(`difficulties[${index}].impact`, difficultyName.impact);\r\n            formDataObj.append(`difficulties[${index}].remarks`, difficultyName.remarks);\r\n        });\r\n\r\n        familyMembers.forEach((member, index) => {\r\n            Object.entries(member).forEach(([key, value]) => {\r\n                if (key !== 'id') {\r\n                    formDataObj.append(`familyMembers[${index}].${key}`, value.toString());\r\n                }\r\n            });\r\n        });\r\n\r\n        return formDataObj;\r\n    };\r\n\r\n    const handleTreatmentChange = (treatmentKey: string, checked: boolean) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            treatments: checked\r\n                ? [...prev.treatments, treatmentKey]\r\n                : prev.treatments.filter(t => t !== treatmentKey)\r\n        }));\r\n    };\r\n\r\n    const handleAssistanceChange = (assistanceKey: string, checked: boolean) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            assistances: checked\r\n                ? [...prev.assistances, assistanceKey]\r\n                : prev.assistances.filter(a => a !== assistanceKey)\r\n        }));\r\n    };\r\n\r\n\r\n    // Clinic Modal Handlers\r\n    const handleCloseClinicModal = () => {\r\n        setShowClinicModal(false);\r\n        setNewClinicName('');\r\n        setClinicError('');\r\n    };\r\n\r\n    const handleClinicKeyPress = (e: React.KeyboardEvent) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            handleAddClinic();\r\n        }\r\n    };\r\n\r\n    // === Clinic Handlers ===\r\n    const addClinic = () => setClinics(prev => [...prev, { clinicName: '', registerNo: '', remarks: '' }]);\r\n    const removeClinic = (index: number) => setClinics(prev => prev.filter((_, i) => i !== index));\r\n    const updateClinic = (index: number, field: keyof Clinic, value: string) => {\r\n        const updated = clinics.map((c, i) => i === index ? { ...c, [field]: value } : c);\r\n        setClinics(updated);\r\n    };\r\n\r\n    // Fetch clinic master data\r\n    useEffect(() => {\r\n        const fetchClinics = async () => {\r\n            try {\r\n                const response = await fetch(\"https://localhost:7112/api/ClinicMasters\");\r\n                if (response.ok) {\r\n                    const data: ClinicMaster[] = await response.json();\r\n                    setClinicMasters(Array.isArray(data) ? data : []);\r\n                } else {\r\n                    console.error(\"❌ Failed to fetch clinics\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"❌ Error fetching clinics:\", error);\r\n            }\r\n        };\r\n\r\n        fetchClinics();\r\n    }, []);\r\n\r\n    const handleAddClinic = async () => {\r\n        const trimmed = newClinicName.trim();\r\n        if (!trimmed) {\r\n            setClinicError('Clinic name is required');\r\n            return;\r\n        }\r\n        const exists = clinicMasters.some(c => c.clinicName.toLowerCase() === trimmed.toLowerCase());\r\n        if (exists) {\r\n            setClinicError('Clinic already exists');\r\n            return;\r\n        }\r\n\r\n        setIsClinicLoading(true);\r\n        try {\r\n            const res = await fetch('https://localhost:7112/api/ClinicMasters', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ clinicName: trimmed }),\r\n            });\r\n\r\n            if (!res.ok) throw new Error('Failed to save clinic');\r\n            const saved = await res.json();\r\n            setClinicMasters(prev => [...prev, saved]);\r\n            setClinics(prev => [...prev, { clinicName: saved.clinicName, registerNo: '', remarks: '' }]);\r\n            setShowClinicModal(false);\r\n            setNewClinicName('');\r\n        } catch (err) {\r\n            console.error('❌ Clinic Save Error:', err);\r\n            setClinicError('Failed to add clinic. Try again.');\r\n        } finally {\r\n            setIsClinicLoading(false);\r\n        }\r\n    };\r\n\r\n    // Difficulty handlers\r\n    const addDifficulty = () => {\r\n        setDifficulties([...difficulties, { difficultyName: '', impact: '', remarks: '' }]);\r\n    };\r\n\r\n    const removeDifficulty = (index: number) => {\r\n        if (difficulties.length > 1) {\r\n            setDifficulties(difficulties.filter((_, i) => i !== index));\r\n        }\r\n    };\r\n\r\n    const updateDifficulty = (index: number, field: keyof Difficulty, value: string) => {\r\n        const updated = difficulties.map((diff, i) =>\r\n            i === index ? { ...diff, [field]: value } : diff\r\n        );\r\n        setDifficulties(updated);\r\n    };\r\n\r\n    // Family member handlers\r\n    const addFamilyMember = () => {\r\n        setFamilyMembers([...familyMembers, { ...newFamilyMember, id: Date.now() }]);\r\n        setNewFamilyMember({\r\n            name: '',\r\n            age: '',\r\n            relation: '',\r\n            education: '',\r\n            income: '',\r\n            maritalStatus: '',\r\n            longTermPatient: false,\r\n            longTermDetails: ''\r\n        });\r\n        setShowFamilyModal(false);\r\n    };\r\n\r\n    const removeFamilyMember = (id: number) => {\r\n        setFamilyMembers(familyMembers.filter(member => member.id !== id));\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        if (!formData.patientId.trim()) {\r\n            setSubmitMessage('Patient ID is required');\r\n            setSubmitStatus('error');\r\n            return;\r\n        }\r\n\r\n        // Prepare submission payload\r\n        const submissionData = {\r\n            ...formData,\r\n            treatments: [...formData.treatments],   // ✅ Explicitly include only selected treatments\r\n            assistances: [...formData.assistances], // ✅ Explicitly include only selected assistances\r\n            clinics: clinics.filter(c => c.clinicName.trim()).map(c => ({\r\n                clinicName: c.clinicName,\r\n                registerNo: c.registerNo,\r\n                remarks: c.remarks,\r\n            })),\r\n            difficulties: difficulties.filter(d => d.difficultyName.trim()).map(d => ({\r\n                difficultyName: d.difficultyName,\r\n                impact: d.impact,\r\n                remarks: d.remarks,\r\n            })),\r\n            familyMembers: familyMembers.map(f => ({\r\n                name: f.name,\r\n                age: f.age,\r\n                relation: f.relation,\r\n                education: f.education,\r\n                income: f.income,\r\n                maritalStatus: f.maritalStatus,\r\n                longTermPatient: f.longTermPatient,\r\n                longTermDetails: f.longTermDetails,\r\n            })),\r\n        };\r\n\r\n        try {\r\n            setIsSubmitting(true);\r\n\r\n            const url = isEditMode\r\n                ? `${API_BASE_URL}/PatientDetails/patient/${formData.patientId}` // PUT\r\n                : `${API_BASE_URL}/PatientDetails`;                     // POST\r\n\r\n            const response = await fetch(url, {\r\n                method: isEditMode ? 'PUT' : 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(submissionData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setSubmitMessage('✅ Patient details saved successfully!');\r\n                setSubmitStatus('success');\r\n                router.push('/Viewpatients');\r\n            } else {\r\n                const errorText = await response.text(); // Fetch full error from backend\r\n                console.error('❌ Error from backend:', errorText);\r\n                setSubmitMessage('❌ Failed to save patient details. Please try again.');\r\n                setSubmitStatus('error');\r\n            }\r\n        } catch (error) {\r\n            setSubmitMessage('❌ An unexpected error occurred while submitting the form.');\r\n            setSubmitStatus('error');\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"min-h-screen w-full bg-gradient-to-br from-blue-50 to-blue-100 px-2 sm:px-4 lg:px-8 py-4\">\r\n            <div className=\"max-w-full\">\r\n                {/* Full-width Header */}\r\n                <div className=\"w-full bg-gradient-to-r from-blue-900 to-blue-700 text-white py-6 text-center rounded-none mb-4\">\r\n\r\n                    <div className=\"flex justify-center mb-3\">\r\n                        <Heart className=\"w-10 h-10 sm:w-12 sm:h-12 text-blue-200\" />\r\n                    </div>\r\n                    <h1 className=\"text-2xl sm:text-3xl lg:text-4xl font-light mb-1\">\r\n                        Patient Registration Form\r\n                    </h1>\r\n                    <p className=\"text-sm sm:text-base lg:text-lg text-blue-200\">\r\n                        Comprehensive Assessment and Care Planning\r\n                    </p>\r\n                </div>\r\n\r\n\r\n                {/* Form */}\r\n                <div className=\"p-2 sm:p-4 lg:p-6\">\r\n                    <form onSubmit={handleSubmit} className=\"space-y-4 sm:space-y-6\">\r\n                        {formData.patientId && (\r\n                            <div className=\"text-left text-sm sm:text-base font-medium text-blue-900 mb-4 px-2 sm:px-4\">\r\n                                <div className=\"inline-block bg-blue-100 text-blue-800 px-4 py-2 rounded-lg shadow-sm border border-blue-300\">\r\n                                    Patient ID: <span className=\"font-semibold\">{formData.patientId}</span>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        {/* Section 1: Registered Palliative Clinics */}\r\n                        <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                                <Building className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">1. Registered Palliative Clinics by the Patient</h3>\r\n                            </div>\r\n\r\n                            {/* Clinic Master Selection */}\r\n                            <div className=\"mb-4\">\r\n                                <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                    Select Clinic <span className=\"text-red-500\">*</span>\r\n                                </label>\r\n                                <div className=\"flex gap-2 items-center\">\r\n                                    <select\r\n                                        name=\"clinicMaster\"\r\n                                        className=\"flex-1 w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-sm\"\r\n                                        onChange={(e) => {\r\n                                            const selectedClinic = clinicMasters.find(c => c.clinicName === e.target.value);\r\n                                            if (selectedClinic) {\r\n                                                const exists = clinics.some(c => c.clinicName === selectedClinic.clinicName);\r\n                                                if (!exists) {\r\n                                                    setClinics([\r\n                                                        ...clinics.filter(c => c.clinicName !== ''),\r\n                                                        { clinicName: selectedClinic.clinicName, registerNo: '', remarks: '' }\r\n                                                    ]);\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <option value=\"\">Select a clinic</option>\r\n                                        {clinicMasters\r\n                                            .filter((clinic) => clinic && clinic.clinicName)\r\n                                            .map((clinic) => (\r\n                                                <option key={clinic.id} value={clinic.clinicName}>\r\n                                                    {clinic.clinicName}\r\n                                                </option>\r\n                                            ))}\r\n                                    </select>\r\n\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={() => setShowClinicModal(true)}\r\n                                        className=\"bg-blue-600 text-white px-3 py-2 rounded-lg hover:bg-blue-700 transition flex items-center justify-center shadow-md\"\r\n                                        title=\"Add new clinic\"\r\n                                    >\r\n                                        <Plus size={16} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"overflow-x-auto\">\r\n                                <table className=\"w-full border-collapse border border-gray-300 rounded-lg overflow-hidden text-xs sm:text-sm\">\r\n                                    <thead>\r\n                                        <tr className=\"bg-gradient-to-r from-blue-600 to-blue-700 text-white\">\r\n                                            <th className=\"border border-gray-300 p-2 text-left font-medium\">Clinic Name</th>\r\n                                            <th className=\"border border-gray-300 p-2 text-left font-medium\">Register No.</th>\r\n                                            <th className=\"border border-gray-300 p-2 text-left font-medium\">Remarks</th>\r\n                                            <th className=\"border border-gray-300 p-2 text-center font-medium\">Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {clinics.map((clinic, index) => (\r\n                                            <tr\r\n                                                key={`${clinic.clinicName}-${index}`} // ✅ UNIQUE KEY FIX\r\n                                                className=\"hover:bg-blue-50 transition-colors duration-200\"\r\n                                            >\r\n                                                <td className=\"border border-gray-300 p-1 sm:p-2\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        value={clinic.clinicName}\r\n                                                        onChange={(e) => updateClinic(index, 'clinicName', e.target.value)}\r\n                                                        className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-xs sm:text-sm\"\r\n                                                        placeholder=\"Enter clinic name\"\r\n                                                    />\r\n                                                </td>\r\n                                                <td className=\"border border-gray-300 p-1 sm:p-2\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        value={clinic.registerNo}\r\n                                                        onChange={(e) => updateClinic(index, 'registerNo', e.target.value)}\r\n                                                        className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-xs sm:text-sm\"\r\n                                                        placeholder=\"Enter register number\"\r\n                                                    />\r\n                                                </td>\r\n                                                <td className=\"border border-gray-300 p-1 sm:p-2\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        value={clinic.remarks}\r\n                                                        onChange={(e) => updateClinic(index, 'remarks', e.target.value)}\r\n                                                        className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-xs sm:text-sm\"\r\n                                                        placeholder=\"Enter remarks\"\r\n                                                    />\r\n                                                </td>\r\n                                                <td className=\"border border-gray-300 p-1 sm:p-2 text-center\">\r\n                                                    {clinics.length > 1 && (\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={() => removeClinic(index)}\r\n                                                            className=\"text-red-500 hover:text-red-700 hover:bg-red-50 p-1 rounded-full transition-all duration-300\"\r\n                                                        >\r\n                                                            <X size={16} />\r\n                                                        </button>\r\n                                                    )}\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={addClinic}\r\n                                className=\"mt-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white px-4 py-2 rounded-lg hover:from-blue-700 hover:to-blue-800 flex items-center gap-2 text-sm font-medium shadow-md transition-all duration-300\"\r\n                            >\r\n                                <Plus size={14} /> Add Clinic Row\r\n                            </button>\r\n\r\n                        </div>\r\n\r\n                        {/* Clinic Modal */}\r\n                        {showClinicModal && (\r\n                            <div\r\n                                className=\"fixed inset-0 bg-black/30 flex justify-center items-center z-50\"\r\n                                onKeyDown={(e) => {\r\n                                    if (e.key === \"Escape\") handleCloseClinicModal();\r\n                                }}\r\n                            >\r\n                                <div className=\"bg-white rounded-lg w-full max-w-md shadow-xl p-6 animate-fade-in\">\r\n                                    <h3 className=\"text-lg font-semibold mb-4 text-blue-900\">🏥 Add New Clinic</h3>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={newClinicName}\r\n                                        onChange={(e) => {\r\n                                            setNewClinicName(e.target.value);\r\n                                            setClinicError(\"\");\r\n                                        }}\r\n                                        onKeyDown={handleClinicKeyPress}\r\n                                        placeholder=\"Enter clinic name\"\r\n                                        className=\"w-full border border-gray-300 px-3 py-2 mb-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                                        autoFocus\r\n                                    />\r\n\r\n                                    {clinicError && (\r\n                                        <p className=\"text-red-500 text-sm mb-4\">{clinicError}</p>\r\n                                    )}\r\n\r\n                                    <div className=\"flex justify-end gap-2\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={handleCloseClinicModal}\r\n                                            className=\"border border-gray-300 px-4 py-2 rounded-lg hover:bg-gray-100 transition-colors\"\r\n                                            disabled={isClinicLoading}\r\n                                        >\r\n                                            Cancel\r\n                                        </button>\r\n\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={handleAddClinic}\r\n                                            disabled={isClinicLoading || !newClinicName.trim()}\r\n                                            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg disabled:bg-blue-300 hover:bg-blue-700 transition-colors\"\r\n                                        >\r\n                                            {isClinicLoading ? \"Adding...\" : \"Add Clinic\"}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Section 2: Current Physical Difficulties */}\r\n                        <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                                <Activity className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">\r\n                                    2. Current Physical Difficulties of the Patient\r\n                                </h3>\r\n                            </div>\r\n\r\n                            <div className=\"overflow-x-auto\">\r\n                                <table className=\"w-full border-collapse border border-gray-300 rounded-lg overflow-hidden text-xs sm:text-sm\">\r\n                                    <thead>\r\n                                        <tr className=\"bg-gradient-to-r from-blue-600 to-blue-700 text-white\">\r\n                                            <th className=\"border border-gray-300 p-2 text-left font-medium\">The Difficulty</th>\r\n                                            <th className=\"border border-gray-300 p-2 text-left font-medium\">Daily Life Impact</th>\r\n                                            <th className=\"border border-gray-300 p-2 text-left font-medium\">Remarks</th>\r\n                                            <th className=\"border border-gray-300 p-2 text-center font-medium\">Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {difficulties.map((diff, index) => (\r\n                                            <tr key={`${diff.difficultyName}-${index}`} className=\"hover:bg-blue-50 transition-colors duration-200\">\r\n                                                <td className=\"border border-gray-300 p-1 sm:p-2\">\r\n                                                    <select\r\n                                                        value={diff.difficultyName}\r\n                                                        onChange={(e) => updateDifficulty(index, 'difficultyName', e.target.value)}\r\n                                                        className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-xs sm:text-sm\"\r\n                                                    >\r\n                                                        <option value=\"\">Select difficulty</option>\r\n                                                        {difficultyNameOptions.map(option => (\r\n                                                            <option key={option} value={option}>{option}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </td>\r\n                                                <td className=\"border border-gray-300 p-1 sm:p-2\">\r\n                                                    <div className=\"flex flex-col sm:flex-row gap-1 sm:gap-2\">\r\n                                                        {[\r\n                                                            { value: 'On a small scale', label: 'Small', color: 'bg-green-100 text-green-800' },\r\n                                                            { value: 'Fairly good', label: 'Fair', color: 'bg-yellow-100 text-yellow-800' },\r\n                                                            { value: 'Hard', label: 'Hard', color: 'bg-red-100 text-red-800' }\r\n                                                        ].map(option => (\r\n                                                            <label\r\n                                                                key={option.value}\r\n                                                                className={`flex items-center p-1 sm:p-2 rounded-lg cursor-pointer transition-all duration-300 border ${diff.impact === option.value\r\n                                                                    ? 'border-blue-500 bg-blue-50'\r\n                                                                    : 'border-gray-300 bg-white hover:bg-gray-50'\r\n                                                                    }`}\r\n                                                            >\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    name={`difficultyName-${index}`}\r\n                                                                    value={option.value}\r\n                                                                    checked={diff.impact === option.value}\r\n                                                                    onChange={(e) => updateDifficulty(index, 'impact', e.target.value)}\r\n                                                                    className=\"mr-1 sm:mr-2 w-3 h-3 text-blue-600\"\r\n                                                                />\r\n                                                                <span className={`px-2 py-1 rounded-full text-xs font-medium ${option.color}`}>\r\n                                                                    {option.label}\r\n                                                                </span>\r\n                                                            </label>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td className=\"border border-gray-300 p-1 sm:p-2\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        value={diff.remarks || ''}\r\n                                                        onChange={(e) => updateDifficulty(index, 'remarks', e.target.value)}\r\n                                                        className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-xs sm:text-sm\"\r\n                                                        placeholder=\"Enter remarks\"\r\n                                                    />\r\n                                                </td>\r\n                                                <td className=\"border border-gray-300 p-1 sm:p-2 text-center\">\r\n                                                    {difficulties.length > 1 && (\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={() => removeDifficulty(index)}\r\n                                                            className=\"text-red-500 hover:text-red-700 hover:bg-red-50 p-1 rounded-full transition-all duration-300\"\r\n                                                        >\r\n                                                            <X size={16} />\r\n                                                        </button>\r\n                                                    )}\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={addDifficulty}\r\n                                className=\"mt-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white px-4 py-2 rounded-lg hover:from-blue-700 hover:to-blue-800 flex items-center gap-2 text-sm font-medium shadow-md transition-all duration-300\"\r\n                            >\r\n                                <Plus size={14} /> Add Difficulty\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n                        {/* Section 3: Body Pain Intensity */}\r\n                        <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                                <AlertCircle className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">3. Body Pain Intensity Marking</h3>\r\n                            </div>\r\n                            <div className=\"bg-white p-3 sm:p-4 rounded-lg shadow-sm\">\r\n                                <div className=\"flex flex-wrap items-center justify-center gap-2 sm:gap-3 mb-3\">\r\n                                    <span className=\"text-xs sm:text-sm font-medium text-blue-900 uppercase tracking-wide\">Pain Level:</span>\r\n                                    {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(num => (\r\n                                        <label key={num} className=\"flex flex-col items-center cursor-pointer\">\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                name=\"painIntensity\"\r\n                                                value={num}\r\n                                                checked={formData.painIntensity === num.toString()}\r\n                                                onChange={(e) => setFormData({ ...formData, painIntensity: e.target.value })}\r\n                                                className=\"mb-1 w-3 h-3 sm:w-4 sm:h-4 text-red-600\"\r\n                                            />\r\n                                            <span className={`text-sm sm:text-base font-bold px-2 py-1 rounded-full ${formData.painIntensity === num.toString()\r\n                                                ? 'bg-red-500 text-white'\r\n                                                : 'bg-gray-200 text-gray-700'\r\n                                                } transition-all duration-300`}>\r\n                                                {num}\r\n                                            </span>\r\n                                        </label>\r\n                                    ))}\r\n                                </div>\r\n                                <div className=\"flex justify-between text-xs sm:text-sm text-gray-600 font-medium\">\r\n                                    <span className=\"bg-green-100 text-green-800 px-2 py-1 rounded-full\">No Pain</span>\r\n                                    <span className=\"bg-red-100 text-red-800 px-2 py-1 rounded-full\">Worst Pain</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Section 4: Family Information */}\r\n                        <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                                <Users className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">4. Family Information</h3>\r\n                            </div>\r\n                            <p className=\"text-xs sm:text-sm text-blue-700 mb-3 sm:mb-4 bg-blue-100 p-2 sm:p-3 rounded-lg\">\r\n                                Details of Residents in the household where the Patient permanently resides\r\n                            </p>\r\n\r\n                            {familyMembers.length > 0 && (\r\n                                <div className=\"overflow-x-auto mb-3 sm:mb-4\">\r\n                                    <table className=\"w-full border-collapse border border-gray-300 rounded-lg overflow-hidden shadow-sm text-xs\">\r\n                                        <thead>\r\n                                            <tr className=\"bg-gradient-to-r from-blue-600 to-blue-700 text-white\">\r\n                                                <th className=\"border border-gray-300 p-2 text-left font-medium\">SI.No</th>\r\n                                                <th className=\"border border-gray-300 p-2 text-left font-medium\">Name</th>\r\n                                                <th className=\"border border-gray-300 p-2 text-left font-medium\">Age</th>\r\n                                                <th className=\"border border-gray-300 p-2 text-left font-medium\">Relation</th>\r\n                                                <th className=\"border border-gray-300 p-2 text-left font-medium\">Education</th>\r\n                                                <th className=\"border border-gray-300 p-2 text-left font-medium\">Income</th>\r\n                                                <th className=\"border border-gray-300 p-2 text-left font-medium\">Marital Status</th>\r\n                                                <th className=\"border border-gray-300 p-2 text-left font-medium\">Long-term Patient</th>\r\n                                                <th className=\"border border-gray-300 p-2 text-center font-medium\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {familyMembers.map((member, index) => (\r\n                                                <tr key={member.id ?? `family-${index}`} className=\"hover:bg-blue-50 transition-colors duration-200\">\r\n                                                    <td className=\"border border-gray-300 p-2 font-medium text-blue-900\">{index + 1}</td>\r\n                                                    <td className=\"border border-gray-300 p-2\">{member.name}</td>\r\n                                                    <td className=\"border border-gray-300 p-2\">{member.age}</td>\r\n                                                    <td className=\"border border-gray-300 p-2\">{member.relation}</td>\r\n                                                    <td className=\"border border-gray-300 p-2\">{member.education}</td>\r\n                                                    <td className=\"border border-gray-300 p-2\">{member.income}</td>\r\n                                                    <td className=\"border border-gray-300 p-2\">{member.maritalStatus}</td>\r\n                                                    <td className=\"border border-gray-300 p-2\">\r\n                                                        {member.longTermPatient ? (\r\n                                                            <span className=\"bg-red-100 text-red-800 px-2 py-1 rounded-full text-xs font-medium\">\r\n                                                                Yes: {member.longTermDetails}\r\n                                                            </span>\r\n                                                        ) : (\r\n                                                            <span className=\"bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs font-medium\">\r\n                                                                No\r\n                                                            </span>\r\n                                                        )}\r\n                                                    </td>\r\n                                                    <td className=\"border border-gray-300 p-2 text-center\">\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={() => {\r\n                                                                if (typeof member.id === 'number') {\r\n                                                                    removeFamilyMember(member.id);\r\n                                                                }\r\n                                                            }}\r\n                                                            className=\"text-red-500 hover:text-red-700 hover:bg-red-50 p-1 rounded-full transition-all duration-300\"\r\n                                                        >\r\n                                                            <X size={14} />\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            )}\r\n\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => setShowFamilyModal(true)}\r\n                                className=\"bg-gradient-to-r from-blue-600 to-blue-700 text-white px-4 py-2 rounded-lg hover:from-blue-700 hover:to-blue-800 flex items-center gap-2 text-sm font-medium shadow-md transition-all duration-300\"\r\n                            >\r\n                                <Plus size={14} /> Add Family Member\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n                        {/* Family Member Modal */}\r\n                        {showFamilyModal && (\r\n                            <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n                                <div className=\"bg-white p-4 sm:p-6 rounded-xl max-w-md w-full max-h-[90vh] overflow-y-auto shadow-2xl\">\r\n                                    <div className=\"flex items-center mb-4\">\r\n                                        <User className=\"w-5 h-5 text-blue-600 mr-2\" />\r\n                                        <h3 className=\"text-lg font-semibold text-blue-900\">Add Family Member</h3>\r\n                                    </div>\r\n                                    <div className=\"space-y-3\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Name\"\r\n                                            value={newFamilyMember.name}\r\n                                            onChange={(e) => setNewFamilyMember({ ...newFamilyMember, name: e.target.value })}\r\n                                            className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-sm\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"Age\"\r\n                                            value={newFamilyMember.age}\r\n                                            onChange={(e) => setNewFamilyMember({ ...newFamilyMember, age: e.target.value })}\r\n                                            className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-sm\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Relation\"\r\n                                            value={newFamilyMember.relation}\r\n                                            onChange={(e) => setNewFamilyMember({ ...newFamilyMember, relation: e.target.value })}\r\n                                            className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-sm\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Education\"\r\n                                            value={newFamilyMember.education}\r\n                                            onChange={(e) => setNewFamilyMember({ ...newFamilyMember, education: e.target.value })}\r\n                                            className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-sm\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Income\"\r\n                                            value={newFamilyMember.income}\r\n                                            onChange={(e) => setNewFamilyMember({ ...newFamilyMember, income: e.target.value })}\r\n                                            className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-sm\"\r\n                                        />\r\n                                        <select\r\n                                            value={newFamilyMember.maritalStatus}\r\n                                            onChange={(e) => setNewFamilyMember({ ...newFamilyMember, maritalStatus: e.target.value })}\r\n                                            className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-sm\"\r\n                                        >\r\n                                            <option value=\"\">Select Marital Status</option>\r\n                                            <option value=\"Single\">Single</option>\r\n                                            <option value=\"Married\">Married</option>\r\n                                            <option value=\"Divorced\">Divorced</option>\r\n                                            <option value=\"Widowed\">Widowed</option>\r\n                                        </select>\r\n                                        <div className=\"flex items-center p-3 bg-blue-50 rounded-lg\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={newFamilyMember.longTermPatient}\r\n                                                onChange={(e) => setNewFamilyMember({ ...newFamilyMember, longTermPatient: e.target.checked })}\r\n                                                className=\"mr-2 w-4 h-4 text-blue-600\"\r\n                                            />\r\n                                            <label className=\"text-sm font-medium text-blue-900\">Long-term Patient</label>\r\n                                        </div>\r\n                                        {newFamilyMember.longTermPatient && (\r\n                                            <textarea\r\n                                                placeholder=\"Long-term patient details\"\r\n                                                value={newFamilyMember.longTermDetails}\r\n                                                onChange={(e) => setNewFamilyMember({ ...newFamilyMember, longTermDetails: e.target.value })}\r\n                                                className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300 text-sm\"\r\n                                                rows={3}\r\n                                            />\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"flex gap-2 mt-4\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={addFamilyMember}\r\n                                            className=\"bg-gradient-to-r from-blue-600 to-blue-700 text-white px-4 py-2 rounded-lg hover:from-blue-700 hover:to-blue-800 text-sm font-medium shadow-md transition-all duration-300\"\r\n                                        >\r\n                                            Add\r\n                                        </button>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={() => setShowFamilyModal(false)}\r\n                                            className=\"bg-gradient-to-r from-gray-500 to-gray-600 text-white px-4 py-2 rounded-lg hover:from-gray-600 hover:to-gray-700 text-sm font-medium shadow-md transition-all duration-300\"\r\n                                        >\r\n                                            Cancel\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Section 5: Economic Situation */}\r\n                        <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                                <DollarSign className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">5. Economic Situation</h3>\r\n                            </div>\r\n                            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-2 sm:gap-3\">\r\n                                {[\r\n                                    { value: 'W', label: 'Wealthy (W)', color: 'bg-green-100 text-green-800' },\r\n                                    { value: 'UMC', label: 'Upper Middle Class (UMC)', color: 'bg-blue-100 text-blue-800' },\r\n                                    { value: 'LMC', label: 'Lower Middle Class (LMC)', color: 'bg-yellow-100 text-yellow-800' },\r\n                                    { value: 'P', label: 'Poor (P)', color: 'bg-orange-100 text-orange-800' },\r\n                                    { value: 'VP', label: 'Very Poor (VP)', color: 'bg-red-100 text-red-800' }\r\n                                ].map(option => (\r\n                                    <label key={option.value} className={`flex items-center p-3 rounded-lg cursor-pointer transition-all duration-300 border ${formData.economicSituation === option.value\r\n                                        ? 'border-blue-500 bg-blue-50'\r\n                                        : 'border-gray-300 bg-white hover:bg-gray-50'\r\n                                        }`}>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"economicSituation\"\r\n                                            value={option.value}\r\n                                            checked={formData.economicSituation === option.value}\r\n                                            onChange={(e) => setFormData({ ...formData, economicSituation: e.target.value })}\r\n                                            className=\"mr-2 w-4 h-4 text-blue-600\"\r\n                                        />\r\n                                        <span className={`px-2 py-1 rounded-full text-xs sm:text-sm font-medium ${option.color}`}>\r\n                                            {option.label}\r\n                                        </span>\r\n                                    </label>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Section 6: Other Treatments */}\r\n                        <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                                <Pill className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-base sm:text-lg lg:text-xl font-semibold text-blue-900\">\r\n                                    6. Any other treatments currently undergoing by the patient\r\n                                </h3>\r\n                            </div>\r\n                            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\r\n                                {treatmentOptions.map(option => (\r\n                                    <label\r\n                                        key={option.key}\r\n                                        className={`flex items-center p-4 rounded-xl cursor-pointer transition-all duration-300 border-2 ${formData.treatments.includes(option.key)\r\n                                            ? 'border-blue-500 bg-blue-50'\r\n                                            : 'border-gray-300 bg-white hover:bg-gray-50'\r\n                                            }`}\r\n                                    >\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={formData.treatments.includes(option.key)}\r\n                                            onChange={(e) => handleTreatmentChange(option.key, e.target.checked)}\r\n                                            className=\"mr-3 w-5 h-5 text-blue-600\"\r\n                                        />\r\n                                        <span className=\"px-3 py-1 rounded-full text-sm font-semibold\">\r\n                                            {option.label}\r\n                                        </span>\r\n                                    </label>\r\n                                ))}\r\n                            </div>\r\n                            <div>\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                    Detailed information about treatments\r\n                                </label>\r\n                                <textarea\r\n                                    placeholder=\"Please provide detailed information about the treatments...\"\r\n                                    value={formData.treatmentDetails}\r\n                                    onChange={(e) => setFormData({ ...formData, treatmentDetails: e.target.value })}\r\n                                    className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                    rows={2}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/* Section 7: Other Assistances */}\r\n                        <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                                <HandHeart className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-base sm:text-lg lg:text-xl font-semibold text-blue-900\">\r\n                                    7. Other Assistances the Patient is receiving\r\n                                </h3>\r\n                            </div>\r\n                            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\r\n                                {assistanceOptions.map(option => (\r\n                                    <label\r\n                                        key={option.key}\r\n                                        className={`flex items-center p-4 rounded-xl cursor-pointer transition-all duration-300 border-2 ${formData.assistances.includes(option.key)\r\n                                            ? 'border-blue-500 bg-blue-50'\r\n                                            : 'border-gray-300 bg-white hover:bg-gray-50'\r\n                                            }`}\r\n                                    >\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={formData.assistances.includes(option.key)}\r\n                                            onChange={(e) => handleAssistanceChange(option.key, e.target.checked)}\r\n                                            className=\"mr-3 w-5 h-5 text-blue-600\"\r\n                                        />\r\n                                        <span className=\"px-3 py-1 rounded-full text-sm font-semibold\">\r\n                                            {option.label}\r\n                                        </span>\r\n                                    </label>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/* Section 8: Spiritual Problems */}\r\n                        <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                                <Heart className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">8. Spiritual Problems</h3>\r\n                            </div>\r\n                            <div className=\"space-y-4\">\r\n                                <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                    <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Faith (Religion/Politics/Others/Currently comforting/non-comforting):\r\n                                    </label>\r\n                                    <textarea\r\n                                        value={formData.spiritualFaith}\r\n                                        onChange={(e) => setFormData({ ...formData, spiritualFaith: e.target.value })}\r\n                                        className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                        rows={2}\r\n                                        placeholder=\"Please describe your spiritual faith and beliefs...\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                    <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Mental/Spiritual support from whom/what?:\r\n                                    </label>\r\n                                    <textarea\r\n                                        value={formData.mentalSupport}\r\n                                        onChange={(e) => setFormData({ ...formData, mentalSupport: e.target.value })}\r\n                                        className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                        rows={2}\r\n                                        placeholder=\"Please describe sources of mental and spiritual support...\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                    <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Expectations:\r\n                                    </label>\r\n                                    <textarea\r\n                                        value={formData.expectations}\r\n                                        onChange={(e) => setFormData({ ...formData, expectations: e.target.value })}\r\n                                        className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                        rows={2}\r\n                                        placeholder=\"Please describe your expectations...\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Section 9: Social Problems */}\r\n                        <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                                <Users className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">9. Social Problems</h3>\r\n                            </div>\r\n                            <div className=\"space-y-4\">\r\n                                <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                    <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Basic needs (food/clothing/shelter):\r\n                                    </label>\r\n                                    <textarea\r\n                                        value={formData.basicNeeds}\r\n                                        onChange={(e) => setFormData({ ...formData, basicNeeds: e.target.value })}\r\n                                        className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                        rows={2}\r\n                                        placeholder=\"Please describe the status of basic needs...\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                    <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Status of other facilities (drinking water / electricity/etc.):\r\n                                    </label>\r\n                                    <textarea\r\n                                        value={formData.facilitiesStatus}\r\n                                        onChange={(e) => setFormData({ ...formData, facilitiesStatus: e.target.value })}\r\n                                        className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                        rows={2}\r\n                                        placeholder=\"Please describe the status of facilities...\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                    <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Current Status of relationships (Family members/ relatives/others):\r\n                                    </label>\r\n                                    <textarea\r\n                                        value={formData.relationshipStatus}\r\n                                        onChange={(e) => setFormData({ ...formData, relationshipStatus: e.target.value })}\r\n                                        className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                        rows={2}\r\n                                        placeholder=\"Please describe the current relationship status...\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Section 10: Insights */}\r\n                        <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                                <Eye className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">10. Insights</h3>\r\n                            </div>\r\n                            <div className=\"space-y-4\">\r\n                                <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                    <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Patient's knowledge of the disease:\r\n                                    </label>\r\n                                    <textarea\r\n                                        value={formData.patientKnowledge}\r\n                                        onChange={(e) => setFormData({ ...formData, patientKnowledge: e.target.value })}\r\n                                        className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                        rows={2}\r\n                                        placeholder=\"Please describe the patient's understanding of their condition...\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                    <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Patient concerns:\r\n                                    </label>\r\n                                    <textarea\r\n                                        value={formData.patientConcerns}\r\n                                        onChange={(e) => setFormData({ ...formData, patientConcerns: e.target.value })}\r\n                                        className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                        rows={2}\r\n                                        placeholder=\"Please describe the patient's main concerns...\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                    <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Family Knowledge and concerns:\r\n                                    </label>\r\n                                    <textarea\r\n                                        value={formData.familyKnowledge}\r\n                                        onChange={(e) => setFormData({ ...formData, familyKnowledge: e.target.value })}\r\n                                        className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                        rows={2}\r\n                                        placeholder=\"Please describe the family's understanding and concerns...\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                    <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Patient issues are prioritized:\r\n                                    </label>\r\n                                    <textarea\r\n                                        value={formData.prioritizedIssues}\r\n                                        onChange={(e) => setFormData({ ...formData, prioritizedIssues: e.target.value })}\r\n                                        className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                        rows={2}\r\n                                        placeholder=\"Please list the prioritized issues in order of importance...\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Section 11: Summary */}\r\n                        <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                                <FileText className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">11. Summary</h3>\r\n                            </div>\r\n                            <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                    Assessment Summary:\r\n                                </label>\r\n                                <textarea\r\n                                    value={formData.summary}\r\n                                    onChange={(e) => setFormData({ ...formData, summary: e.target.value })}\r\n                                    className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                    rows={3}\r\n                                    placeholder=\"Please provide a comprehensive summary of the patient's assessment...\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Section 12: Plans */}\r\n                        <div className=\"bg-gray-50 p-3 sm:p-4 lg:p-5 rounded-xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-3 sm:mb-4\">\r\n                                <Calendar className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-blue-900\">12. Plans</h3>\r\n                            </div>\r\n                            <div className=\"bg-white p-4 rounded-xl shadow-sm\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                    Care Plan:\r\n                                </label>\r\n                                <textarea\r\n                                    value={formData.plan}\r\n                                    onChange={(e) => setFormData({ ...formData, plan: e.target.value })}\r\n                                    className=\"w-full p-3 border-2 border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-300\"\r\n                                    rows={3}\r\n                                    placeholder=\"Please outline the comprehensive care plan for the patient...\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/* Submit Button */}\r\n                        <div className=\"flex justify-center mt-10\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"bg-gradient-to-r from-green-600 to-green-700 text-white px-12 py-4 rounded-2xl text-lg font-semibold hover:from-green-700 hover:to-green-800 transition-all duration-300 transform hover:scale-105 shadow-xl hover:shadow-2xl flex items-center gap-3\"\r\n                            >\r\n                                <Check className=\"w-6 h-6\" />\r\n                                Submit Patient Registration Form\r\n                            </button>\r\n                        </div>\r\n                        {/* Submit Status Message */}\r\n                        {submitMessage && (\r\n                            <div className={`mb-4 p-3 rounded-lg text-center text-sm font-semibold ${submitStatus === 'success'\r\n                                ? 'bg-green-100 text-green-800 border border-green-300'\r\n                                : 'bg-red-100 text-red-800 border border-red-300'\r\n                                }`}>\r\n                                {submitMessage}\r\n                            </div>\r\n                        )}\r\n\r\n                    </form>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientRegistrationForm;"],"names":[],"mappings":"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","debugId":null}}]
}