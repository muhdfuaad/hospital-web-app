{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/app/viewpatients/patient_reg/page.tsx"],"sourcesContent":["'use client';\r\nimport { useParams } from 'next/navigation';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport {\r\n    User,\r\n    MapPin,\r\n    Phone,\r\n    Calendar,\r\n    FileText,\r\n    Heart,\r\n    Camera,\r\n    Upload,\r\n    Users,\r\n    AlertCircle,\r\n    ClipboardList,\r\n    CheckCircle,\r\n    Shield,\r\n    RotateCcw,\r\n    Lock, Plus, X, Check,\r\n    Home\r\n} from 'lucide-react';\r\n// import './form.css';\r\n\r\ninterface District {\r\n    id: number\r\n    name: string;\r\n}\r\n\r\ninterface Panchayath {\r\n    panchayathId: number;\r\n    panchayathName: string;\r\n    dstId: number;\r\n    dstName: string;\r\n}\r\ntype Params = {\r\n    params: {\r\n        id: string;\r\n    };\r\n};\r\ninterface PatientCategory {\r\n    id: number;\r\n    categoryName: string;\r\n}\r\n\r\n\r\n// Explicit form data typing\r\ninterface FormDataType {\r\n    id?: number;\r\n    patientId: string;\r\n    district: string;\r\n    panchayath: string;\r\n    ward: string;\r\n    area: string;\r\n    date: string;\r\n    diagnosis: string;\r\n    category: string;\r\n    status: string;\r\n    name: string;\r\n    age: string;\r\n    gender: string;\r\n    financialStatus: string;\r\n    spouseName: string;\r\n    fatherName: string;\r\n    motherName: string;\r\n    adhaarAddress: string;\r\n    currentAddress: string;\r\n    phoneNumber1: string;\r\n    phoneNumber2: string;\r\n    adhaarNumber: string;\r\n    contactPerson: string;\r\n    relation: string;\r\n    contactPhone: string;\r\n    neighbourResidence: string;\r\n    neighbourPhone: string;\r\n    communityVolunteer: string;\r\n    communityVolunteerPhone: string;\r\n    wardMember: string;\r\n    wardMemberPhone: string;\r\n    aashaVolunteer: string;\r\n    aashaVolunteerPhone: string;\r\n    otherPerson: string;\r\n    otherPersonPhone: string;\r\n    houseRoute: string;\r\n    photograph: File | null;\r\n    aadharDoc: File | null;\r\n    previewPhotoUrl?: string;\r\n    previewAadharName?: string;\r\n}\r\n\r\nexport default function HospitalRegistrationForm() {\r\n    const today = new Date().toISOString().split('T')[0];\r\n    const router = useRouter();\r\n\r\n    const searchParams = useSearchParams();\r\n    const isEditMode = searchParams.get('edit') === 'true';\r\n    const PatientId = searchParams.get('id'); // Get from query params, not route params\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const [showAdditionalDetailsCheckbox, setShowAdditionalDetailsCheckbox] = useState(false);\r\n    const [collectAdditionalDetails, setCollectAdditionalDetails] = useState(false);\r\n\r\n\r\n    const [formData, setFormData] = useState<FormDataType>({\r\n        patientId: '',\r\n        district: '',\r\n        panchayath: '',\r\n        ward: '',\r\n        area: '',\r\n        date: today,\r\n        diagnosis: '',\r\n        category: '',\r\n        status: '',\r\n        name: '',\r\n        age: '',\r\n        gender: '',\r\n        financialStatus: '',\r\n        spouseName: '',\r\n        fatherName: '',\r\n        motherName: '',\r\n        adhaarAddress: '',\r\n        currentAddress: '',\r\n        phoneNumber1: '',\r\n        phoneNumber2: '',\r\n        adhaarNumber: '',\r\n        contactPerson: '',\r\n        relation: '',\r\n        contactPhone: '',\r\n        neighbourResidence: '',\r\n        neighbourPhone: '',\r\n        communityVolunteer: '',\r\n        communityVolunteerPhone: '',\r\n        wardMember: '',\r\n        wardMemberPhone: '',\r\n        aashaVolunteer: '',\r\n        aashaVolunteerPhone: '',\r\n        otherPerson: '',\r\n        otherPersonPhone: '',\r\n        houseRoute: '',\r\n        photograph: null,\r\n        aadharDoc: null,\r\n    });\r\n\r\n    const [errors, setErrors] = useState<Record<string, string>>({});\r\n    const [districts, setDistricts] = useState<District[]>([]);\r\n    const [panchayaths, setPanchayaths] = useState<Panchayath[]>([]);\r\n    const [selectedDistrictId, setSelectedDistrictId] = useState<number | null>(null);\r\n    const [selectedPanchayathId, setSelectedPanchayathId] = useState<number | null>(null);\r\n\r\n    // Category management states\r\n    const [categories, setCategories] = useState<PatientCategory[]>([]);\r\n    const [showCategoryModal, setShowCategoryModal] = useState(false);\r\n    const [newCategoryName, setNewCategoryName] = useState(\"\");\r\n    const [isCategoryLoading, setIsCategoryLoading] = useState(false);\r\n    const [categoryError, setCategoryError] = useState(\"\");\r\n\r\n    // Fetch patient categories on load\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n                const response = await fetch(\"https://localhost:7112/api/PatientCategories\");\r\n                if (response.ok) {\r\n                    const data: PatientCategory[] = await response.json();\r\n                    setCategories(Array.isArray(data) ? data : []);\r\n                } else {\r\n                    console.error(\"Failed to fetch categories — falling back to defaults\");\r\n                    fallbackCategories();\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching categories:\", error);\r\n                fallbackCategories();\r\n            }\r\n        };\r\n\r\n        const fallbackCategories = () => {\r\n            setCategories([\r\n                { id: 1, categoryName: \"General\" },\r\n                { id: 2, categoryName: \"Emergency\" }\r\n            ]);\r\n        };\r\n\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    const handleAddCategory = async () => {\r\n        const trimmed = newCategoryName.trim();\r\n        if (!trimmed) {\r\n            setCategoryError(\"Category name is required\");\r\n            return;\r\n        }\r\n\r\n        if (categories.some((cat) => cat?.categoryName?.toLowerCase() === trimmed.toLowerCase())) {\r\n            setCategoryError(\"Category already exists\");\r\n            return;\r\n        }\r\n\r\n        setIsCategoryLoading(true);\r\n        setCategoryError(\"\");\r\n\r\n        try {\r\n            const response = await fetch(\"https://localhost:7112/api/PatientCategories\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ categoryName: newCategoryName }),   // ✅ MATCH your API's expected property\r\n            });\r\n\r\n            if (response.ok) {\r\n                const newCategory = await response.json();\r\n\r\n                if (newCategory && (newCategory.name || newCategory.categoryName)) {\r\n                    const categoryDisplayName = newCategory.name || newCategory.categoryName;\r\n\r\n                    setCategories((prev) => [...prev, { ...newCategory, name: categoryDisplayName }]);\r\n                    setFormData((prev) => ({ ...prev, category: categoryDisplayName }));\r\n                    setNewCategoryName(\"\");\r\n                    setShowCategoryModal(false);\r\n                } else {\r\n                    setCategoryError(\"Invalid response format\");\r\n                }\r\n            } else {\r\n                setCategoryError(\"Failed to add category\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error adding category:\", error);\r\n            setCategoryError(\"Network error occurred\");\r\n        } finally {\r\n            setIsCategoryLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCategoryKeyPress = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n            handleAddCategory();\r\n        }\r\n        if (e.key === \"Escape\") {\r\n            handleCloseCategoryModal();\r\n        }\r\n    };\r\n\r\n    const handleCloseCategoryModal = () => {\r\n        setShowCategoryModal(false);\r\n        setNewCategoryName(\"\");\r\n        setCategoryError(\"\");\r\n    };\r\n\r\n    const [buttonText, setButtonText] = useState(\"Submit\");\r\n    const [existingPhotoUrl, setExistingPhotoUrl] = useState('');\r\n    const [existingAadharDocUrl, setExistingAadharDocUrl] = useState('');\r\n    const [photoFileName, setPhotoFileName] = useState('');\r\n    const [aadharFileName, setAadharFileName] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [submitStatus, setSubmitStatus] = useState('');\r\n    const [submitMessage, setSubmitMessage] = useState('');\r\n\r\n    // Fetch districts and panchayaths from API first\r\n    useEffect(() => {\r\n        const fetchLocations = async () => {\r\n            try {\r\n                const [dRes, pRes] = await Promise.all([\r\n                    fetch('https://localhost:7112/api/Districts'),\r\n                    fetch('https://localhost:7112/api/Panchayaths'),\r\n                ]);\r\n\r\n                if (dRes.ok && pRes.ok) {\r\n                    const dData = await dRes.json();\r\n                    const pData = await pRes.json();\r\n                    setDistricts(dData);\r\n                    setPanchayaths(pData);\r\n                } else {\r\n                    console.error('Failed to fetch districts/panchayaths - API response not OK');\r\n                }\r\n            } catch (err) {\r\n                console.error('Failed to fetch districts/panchayaths', err);\r\n            }\r\n        };\r\n\r\n        fetchLocations();\r\n    }, []);\r\n\r\n    // Fetch Registration Number from API (only for new registrations)\r\n    useEffect(() => {\r\n        if (!isEditMode) {\r\n            const fetchRegNumber = async () => {\r\n                try {\r\n                    const response = await fetch('https://localhost:7112/api/Hpforms/get-patient-id');\r\n                    if (response.ok) {\r\n                        const regNumber = await response.text();\r\n                        setFormData(prev => ({ ...prev, patientId: regNumber }));\r\n                    } else {\r\n                        console.error('Failed to fetch Registration Number - API response not OK');\r\n                    }\r\n                } catch (err) {\r\n                    console.error('Failed to fetch Registration Number', err);\r\n                }\r\n            };\r\n\r\n            fetchRegNumber();\r\n        }\r\n    }, [isEditMode]);\r\n\r\n    const formatDateForInput = (dateString: string): string => {\r\n        const date = new Date(dateString);\r\n        const year = date.getFullYear();\r\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n        const day = String(date.getDate()).padStart(2, \"0\");\r\n        return `${year}-${month}-${day}`;\r\n    };\r\n\r\n\r\n    // Fetch existing patient data for edit mode\r\n    useEffect(() => {\r\n        if (isEditMode && PatientId && districts.length > 0) {\r\n            const fetchPatientData = async () => {\r\n                setIsLoading(true);\r\n                try {\r\n                    console.log('Fetching data for PatientId:', PatientId);\r\n                    const response = await fetch(`https://localhost:7112/api/Hpforms/patient/${PatientId}`);\r\n\r\n                    if (response.ok) {\r\n                        const patientData = await response.json();\r\n                        console.log('Fetched patient data:', patientData);\r\n\r\n                        // ✅ Correctly call the formatDateForInput helper here\r\n                        const formattedDate = patientData.date\r\n                            ? formatDateForInput(patientData.date)\r\n                            : \"\";\r\n\r\n                        // Map API response to form data structure\r\n                        setFormData({\r\n                            patientId: patientData.patientId?.toString() || '',\r\n                            district: patientData.district || '',\r\n                            panchayath: patientData.panchayath || '',\r\n                            ward: patientData.ward || '',\r\n                            area: patientData.area || '',\r\n                            date: formattedDate,\r\n                            diagnosis: patientData.diagnosis || '',\r\n                            category: patientData.category || '',\r\n                            status: patientData.status || '',\r\n                            name: patientData.name || '',\r\n                            age: patientData.age?.toString() || '',\r\n                            gender: patientData.gender || '',\r\n                            financialStatus: patientData.financialStatus || '',\r\n                            spouseName: patientData.spouseName || '',\r\n                            fatherName: patientData.fatherName || '',\r\n                            motherName: patientData.motherName || '',\r\n                            adhaarAddress: patientData.adhaarAddress || '',\r\n                            currentAddress: patientData.currentAddress || '',\r\n                            phoneNumber1: patientData.phoneNumber1 || '',\r\n                            phoneNumber2: patientData.phoneNumber2 || '',\r\n                            adhaarNumber: patientData.adhaarNumber || '',\r\n                            contactPerson: patientData.contactPerson || '',\r\n                            relation: patientData.relation || '',\r\n                            contactPhone: patientData.contactPhone || '',\r\n                            neighbourResidence: patientData.neighbourResidence || '',\r\n                            neighbourPhone: patientData.neighbourPhone || '',\r\n                            communityVolunteer: patientData.communityVolunteer || '',\r\n                            communityVolunteerPhone: patientData.communityVolunteerPhone || '',\r\n                            wardMember: patientData.wardMember || '',\r\n                            wardMemberPhone: patientData.wardMemberPhone || '',\r\n                            aashaVolunteer: patientData.aashaVolunteer || '',\r\n                            aashaVolunteerPhone: patientData.aashaVolunteerPhone || '',\r\n                            otherPerson: patientData.otherPerson || '',\r\n                            otherPersonPhone: patientData.otherPersonPhone || '',\r\n                            houseRoute: patientData.houseRoute || '',\r\n                            photograph: null,\r\n                            aadharDoc: null\r\n                        });\r\n\r\n                        // Show checkbox if category is already Personal Care\r\n                        if (patientData.category?.toLowerCase().trim() === \"personal care\") {\r\n                            setShowAdditionalDetailsCheckbox(true);\r\n                        }\r\n\r\n                        // Set existing photo URL if available\r\n                        if (patientData.photo) {\r\n                            setPhotoFileName(patientData.photo);  // Save just filename\r\n                        }\r\n                        if (patientData.aadharFile) {\r\n                            setAadharFileName(patientData.aadharFile);  // Save just filename\r\n                        }\r\n\r\n                        // Set selected district for panchayath filtering\r\n                        const selectedDistrict = districts.find(d => d.name === patientData.district);\r\n                        if (selectedDistrict) {\r\n                            setSelectedDistrictId(selectedDistrict.id);\r\n                        }\r\n\r\n                        // Add category to list if it doesn't exist\r\n                        if (patientData.category && !categories.includes(patientData.category)) {\r\n                            setCategories(prev => [...prev, patientData.category]);\r\n                        }\r\n\r\n                        setButtonText(\"Update\");\r\n\r\n                    } else {\r\n                        console.error('Failed to fetch patient data:', response.status, response.statusText);\r\n                        setSubmitStatus('error');\r\n                        setSubmitMessage('Failed to load patient data for editing');\r\n                    }\r\n                } catch (err) {\r\n                    console.error('Error fetching patient data:', err);\r\n                    setSubmitStatus('error');\r\n                    setSubmitMessage('Error loading patient data');\r\n                } finally {\r\n                    setIsLoading(false);\r\n                }\r\n            };\r\n\r\n            fetchPatientData();\r\n        }\r\n    }, [isEditMode, PatientId, districts, categories]);\r\n\r\n    // Update selected district when district data changes in edit mode\r\n    useEffect(() => {\r\n        if (isEditMode && formData.district && districts.length > 0) {\r\n            const selectedDistrict = districts.find(d => d.name === formData.district);\r\n            if (selectedDistrict) {\r\n                setSelectedDistrictId(selectedDistrict.id);\r\n            }\r\n        }\r\n    }, [formData.district, districts, isEditMode]);\r\n\r\n\r\n\r\n    const handleChange = (e: React.ChangeEvent<any>) => {\r\n        const { name, value, files } = e.target;\r\n\r\n        if (files) {\r\n            if (name === \"photograph\" && files[0]) {\r\n                setFormData(prev => ({\r\n                    ...prev,\r\n                    photograph: files[0],\r\n                    previewPhotoUrl: URL.createObjectURL(files[0]),\r\n                }));\r\n                setPhotoFileName(files[0].name);\r\n                setExistingPhotoUrl('');\r\n            }\r\n\r\n            if (name === \"aadharDoc\" && files[0]) {\r\n                setFormData(prev => ({\r\n                    ...prev,\r\n                    aadharDoc: files[0],\r\n                    previewAadharName: files[0].name,\r\n                }));\r\n                setAadharFileName(files[0].name);\r\n                setExistingAadharDocUrl('');\r\n            }\r\n        } else {\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                [name]: value\r\n            }));\r\n\r\n            // ✅ Show checkbox only if category is \"personal care\"\r\n            if (name === \"category\") {\r\n                const selected = value.toLowerCase().trim();\r\n                setShowAdditionalDetailsCheckbox(selected === \"personal care\");\r\n                setCollectAdditionalDetails(false); // reset if category changes\r\n            }\r\n\r\n            // ✅ Handle district selection for panchayath filtering\r\n            if (name === 'district') {\r\n                const selectedDistrict = districts.find(d => d.name === value);\r\n                setSelectedDistrictId(selectedDistrict ? selectedDistrict.id : null);\r\n                setFormData(prev => ({ ...prev, panchayath: '' }));\r\n                setSelectedPanchayathId(null);\r\n            }\r\n\r\n            // ✅ Handle panchayath selection\r\n            if (name === 'panchayath') {\r\n                const selectedPanchayath = panchayaths.find(\r\n                    p => p.panchayathName === value && p.dstId === selectedDistrictId\r\n                );\r\n                setSelectedPanchayathId(selectedPanchayath ? selectedPanchayath.dstId : null);\r\n            }\r\n        }\r\n\r\n        // ✅ Clear field-level error on input change\r\n        if (errors[name]) {\r\n            setErrors(prev => ({ ...prev, [name]: '' }));\r\n        }\r\n    };\r\n\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setIsSubmitting(true);\r\n\r\n        const formElement = e.target as HTMLFormElement;\r\n        const form = new FormData(formElement);\r\n\r\n        // Append all form data fields\r\n        form.append('District', formData.district);\r\n        form.append('Panchayath', formData.panchayath);\r\n        form.append('Ward', formData.ward);\r\n        form.append('Area', formData.area);\r\n        form.append('Date', formData.date);\r\n        form.append('Diagnosis', formData.diagnosis);\r\n        form.append('Category', formData.category);\r\n        form.append('Name', formData.name);\r\n        form.append('Age', formData.age);\r\n        form.append('Gender', formData.gender);\r\n        form.append('SpouseName', formData.spouseName);\r\n        form.append('FatherName', formData.fatherName);\r\n        form.append('MotherName', formData.motherName);\r\n        form.append('AdhaarAddress', formData.adhaarAddress);\r\n        form.append('CurrentAddress', formData.currentAddress);\r\n        form.append('PhoneNumber1', formData.phoneNumber1);\r\n        form.append('PhoneNumber2', formData.phoneNumber2);\r\n        form.append('AdhaarNumber', formData.adhaarNumber);\r\n        form.append('ContactPerson', formData.contactPerson);\r\n        form.append('Relation', formData.relation);\r\n        form.append('ContactPhone', formData.contactPhone);\r\n        form.append('NeighbourResidence', formData.neighbourResidence);\r\n        form.append('NeighbourPhone', formData.neighbourPhone);\r\n        form.append('CommunityVolunteer', formData.communityVolunteer);\r\n        form.append('CommunityVolunteerPhone', formData.communityVolunteerPhone);\r\n        form.append('WardMember', formData.wardMember);\r\n        form.append('WardMemberPhone', formData.wardMemberPhone);\r\n        form.append('AashaVolunteer', formData.aashaVolunteer);\r\n        form.append('AashaVolunteerPhone', formData.aashaVolunteerPhone);\r\n        form.append('OtherPerson', formData.otherPerson);\r\n        form.append('OtherPersonPhone', formData.otherPersonPhone);\r\n        form.append('HouseRoute', formData.houseRoute);\r\n\r\n        // Append files if present\r\n        if (formData.photograph) {\r\n            form.append('Photograph', formData.photograph);\r\n        }\r\n        if (formData.aadharDoc) {\r\n            form.append('AadharDoc', formData.aadharDoc);\r\n        }\r\n\r\n        console.log(\"FORMDATA BEING SENT\", formData);\r\n        console.log(\"Edit Mode:\", isEditMode, \"PatientId:\", PatientId);\r\n\r\n        try {\r\n            const url = isEditMode\r\n                ? `https://localhost:7112/api/Hpforms/patient/${PatientId}`\r\n                : \"https://localhost:7112/api/Hpforms\";\r\n\r\n            const method = isEditMode ? \"PUT\" : \"POST\";\r\n\r\n            console.log(\"Making request to:\", url, \"with method:\", method);\r\n\r\n            const res = await fetch(url, {\r\n                method,\r\n                body: form\r\n            });\r\n\r\n            if (!res.ok) {\r\n                const errorText = await res.text();\r\n                console.error(\"Submission failed\", res.status, errorText);\r\n                setSubmitStatus('error');\r\n                setSubmitMessage(`Submission failed: ${res.status} ${res.statusText}`);\r\n                return;\r\n            }\r\n\r\n            setSubmitStatus('success');\r\n            setSubmitMessage(isEditMode ? \"Patient data updated successfully!\" : \"Patient registered successfully!\");\r\n\r\n            // ✅ Conditional redirect logic\r\n            setTimeout(() => {\r\n                const category = formData.category?.toLowerCase().trim();\r\n                const pid = formData.patientId?.trim();\r\n\r\n                if (category === \"personal care\" && collectAdditionalDetails && pid) {\r\n                    router.push(`/patientdetails?patientId=${encodeURIComponent(pid)}`);\r\n                } else {\r\n                    router.push(\"/viewpatients\");\r\n                }\r\n            }, 1500);\r\n\r\n        } catch (err) {\r\n            console.error(\"Submission failed\", err);\r\n            setSubmitStatus('error');\r\n            setSubmitMessage(\"Submission failed. Please check your connection and try again.\");\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n\r\n    const inputClasses = (fieldName: string, errors: Record<string, any> = {}) => `\r\n        w-full px-4 py-3 rounded-xl border-2 transition-all duration-300\r\n        focus:outline-none focus:ring-4 focus:ring-blue-300 focus:border-blue-500\r\n        ${errors[fieldName]\r\n            ? 'border-red-500 bg-red-50'\r\n            : 'border-gray-300 bg-white hover:border-blue-400'\r\n        }\r\n        placeholder-gray-500 text-gray-900 font-medium\r\n    `;\r\n\r\n    // Show loading state\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"min-h-screen w-full bg-gradient-to-br from-blue-50 to-blue-100 px-10 py-8\">\r\n                <div className=\"flex justify-center items-center h-64\">\r\n                    <div className=\"text-xl text-blue-600\">Loading patient data...</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen w-full bg-gradient-to-br from-blue-50 to-blue-100 px-10 py-8\">\r\n            <div>\r\n                {/* Header */}\r\n                <div className=\"bg-gradient-to-r from-blue-900 to-blue-700 text-white p-8 text-center rounded-t-2xl\">\r\n                    <div className=\"flex justify-center mb-4\">\r\n                        <Heart className=\"w-16 h-16 text-blue-200\" />\r\n                    </div>\r\n                    <h1 className=\"text-4xl font-light mb-3\">\r\n                        {isEditMode ? 'Edit Patient Information' : 'Patient Registration'}\r\n                    </h1>\r\n                    <p className=\"text-xl text-blue-200\">\r\n                        {isEditMode ? 'Update patient details' : 'Comprehensive patient care registration system'}\r\n                    </p>\r\n                </div>\r\n\r\n                {/* Submit Status Message */}\r\n                {submitMessage && (\r\n                    <div className={`mb-6 p-4 rounded-xl text-center font-semibold ${submitStatus === 'success'\r\n                        ? 'bg-green-100 text-green-800 border border-green-300'\r\n                        : 'bg-red-100 text-red-800 border border-red-300'\r\n                        }`}>\r\n                        {submitMessage}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Form */}\r\n                <form id=\"hospital-form\" onSubmit={handleSubmit} className=\"bg-white rounded-b-2xl shadow-2xl\">\r\n                    <div className=\"p-8\">\r\n                        <div className=\"space-y-8\">\r\n\r\n                            {/* Registration Details Section */}\r\n                            <div className=\"bg-gray-50 p-6 rounded-2xl border-l-4 border-blue-600\">\r\n                                <div className=\"flex items-center mb-6\">\r\n                                    <ClipboardList className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                    <h3 className=\"text-xl font-semibold text-blue-900\">Registration Details</h3>\r\n                                </div>\r\n\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Patient ID<span className=\"text-red-500\">*</span>\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"PatientId\"\r\n                                            value={formData.patientId}\r\n                                            onChange={handleChange}\r\n                                            className={inputClasses('PatientId')}\r\n                                            placeholder=\"Auto-generated ID\"\r\n                                            readOnly\r\n                                            style={{ backgroundColor: '#f0f4f8', cursor: 'not-allowed' }}\r\n                                        />\r\n                                        {errors.PatientId && <p className=\"text-red-500 text-sm mt-1\">{errors.PatientId}</p>}\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Date <span className=\"text-red-500\">*</span>\r\n                                        </label>\r\n                                        <div className=\"relative\">\r\n                                            <Calendar className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                name=\"date\"\r\n                                                value={formData.date}\r\n                                                onChange={handleChange}\r\n                                                className={`${inputClasses('date')} pl-12`}\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            District <span className=\"text-red-500\">*</span>\r\n                                        </label>\r\n                                        <select\r\n                                            name=\"district\"\r\n                                            value={formData.district}\r\n                                            onChange={(e) => {\r\n                                                const selectedName = e.target.value;\r\n                                                const selectedDistrict = districts.find(d => d.name === selectedName);\r\n                                                setSelectedDistrictId(selectedDistrict?.id || null);\r\n                                                setFormData(prev => ({\r\n                                                    ...prev,\r\n                                                    district: selectedName,\r\n                                                    panchayath: '',\r\n                                                }));\r\n                                            }}\r\n                                            className={inputClasses('district')}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select District</option>\r\n                                            {districts.map(d => (\r\n                                                <option key={d.id} value={d.name}>\r\n                                                    {d.name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Panchayath <span className=\"text-red-500\">*</span>\r\n                                        </label>\r\n                                        <select\r\n                                            name=\"panchayath\"\r\n                                            value={formData.panchayath}\r\n                                            onChange={(e) => {\r\n                                                const selectedName = e.target.value;\r\n                                                const selectedP = panchayaths.find(p => p.panchayathName === selectedName);\r\n                                                setSelectedPanchayathId(selectedP?.panchayathId || null);\r\n                                                setFormData(prev => ({\r\n                                                    ...prev,\r\n                                                    panchayath: selectedName,\r\n                                                }));\r\n                                            }}\r\n                                            className={inputClasses('panchayath')}\r\n                                            disabled={!selectedDistrictId}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">\r\n                                                {selectedDistrictId ? \"Select Panchayath\" : \"Select District First\"}\r\n                                            </option>\r\n                                            {panchayaths\r\n                                                .filter(p => p.dstId === selectedDistrictId)\r\n                                                .map(p => (\r\n                                                    <option key={p.panchayathId} value={p.panchayathName}>\r\n                                                        {p.panchayathName}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Ward Number <span className=\"text-red-500\">*</span>\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"tel\"\r\n                                            name=\"ward\"\r\n                                            value={formData.ward}\r\n                                            onChange={handleChange}\r\n                                            className={inputClasses('ward')}\r\n                                            placeholder=\"Enter Ward No.\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Area / Route <span className=\"text-red-500\">*</span>\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"area\"\r\n                                            value={formData.area}\r\n                                            onChange={handleChange}\r\n                                            className={inputClasses('area')}\r\n                                            placeholder=\"Enter area or route\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"md:col-span-2\">\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Diagnosis <span className=\"text-red-500\">*</span>\r\n                                        </label>\r\n                                        <textarea\r\n                                            name=\"diagnosis\"\r\n                                            value={formData.diagnosis}\r\n                                            onChange={handleChange}\r\n                                            rows={4}\r\n                                            maxLength={1000}\r\n                                            className={inputClasses('diagnosis')}\r\n                                            placeholder=\"Enter diagnosis details (max 1000 characters)\"\r\n\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Category <span className=\"text-red-500\">*</span>\r\n                                        </label>\r\n\r\n                                        <div className=\"flex gap-2 items-center\">\r\n                                            <select\r\n                                                name=\"category\"\r\n                                                value={formData.category}\r\n                                                onChange={handleChange}\r\n                                                className={`${inputClasses(\"category\")} flex-1`}\r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Select Category</option>\r\n                                                {categories\r\n                                                    .filter((category) => category && category.categoryName)\r\n                                                    .map((category) => (\r\n                                                        <option key={category.id} value={category.categoryName}>\r\n                                                            {category.categoryName}\r\n                                                        </option>\r\n                                                    ))}\r\n                                            </select>\r\n\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={() => setShowCategoryModal(true)}\r\n                                                className=\"bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700 transition flex items-center justify-center\"\r\n                                                title=\"Add new category\"\r\n                                            >\r\n                                                <Plus size={16} />\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                        {/* Category Modal */}\r\n                                        {showCategoryModal && (\r\n                                            <div\r\n                                                className=\"fixed inset-0 bg-black/30 flex justify-center items-center z-50\"\r\n                                                onKeyDown={(e) => {\r\n                                                    if (e.key === \"Escape\") handleCloseCategoryModal();\r\n                                                }}\r\n                                            >\r\n                                                <div className=\"bg-white rounded-lg w-full max-w-sm shadow-lg p-6 animate-fade-in\">\r\n                                                    <h3 className=\"text-lg font-semibold mb-4\">➕ Add Patient Category</h3>\r\n\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        value={newCategoryName}\r\n                                                        onChange={(e) => {\r\n                                                            setNewCategoryName(e.target.value);\r\n                                                            setCategoryError(\"\");\r\n                                                        }}\r\n                                                        onKeyDown={handleCategoryKeyPress}\r\n                                                        placeholder=\"Enter category name\"\r\n                                                        className=\"w-full border border-gray-300 px-3 py-2 mb-4 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                                        autoFocus\r\n                                                    />\r\n\r\n                                                    {categoryError && (\r\n                                                        <p className=\"text-red-500 text-sm mb-4\">{categoryError}</p>\r\n                                                    )}\r\n\r\n                                                    <div className=\"flex justify-end gap-2\">\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={handleCloseCategoryModal}\r\n                                                            className=\"border px-4 py-2 rounded hover:bg-gray-100\"\r\n                                                            disabled={isCategoryLoading}\r\n                                                        >\r\n                                                            Cancel\r\n                                                        </button>\r\n\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={handleAddCategory}\r\n                                                            disabled={isCategoryLoading || !newCategoryName.trim()}\r\n                                                            className=\"bg-blue-600 text-white px-4 py-2 rounded disabled:bg-blue-300\"\r\n                                                        >\r\n                                                            {isCategoryLoading ? \"Adding...\" : \"Save\"}\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Status <span className=\"text-red-500\">*</span>\r\n                                        </label>\r\n                                        <select\r\n                                            name=\"status\"\r\n                                            value={formData.status || 'Active'}\r\n                                            onChange={handleChange}\r\n                                            className={inputClasses('status')}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Status</option>\r\n                                            <option value=\"Active\">Active</option>\r\n                                            <option value=\"Expired\">Expired</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Personal Information Section */}\r\n                            <div className=\"bg-gray-50 p-6 rounded-2xl border-l-4 border-blue-600\">\r\n                                <div className=\"flex items-center mb-6\">\r\n                                    <User className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                    <h3 className=\"text-xl font-semibold text-blue-900\">Personal Information</h3>\r\n                                </div>\r\n\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Full Name <span className=\"text-red-500\">*</span>\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            value={formData.name}\r\n                                            onChange={handleChange}\r\n                                            className={inputClasses('name')}\r\n                                            placeholder=\"Enter full name\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Age <span className=\"text-red-500\">*</span>\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            name=\"age\"\r\n                                            value={formData.age}\r\n                                            onChange={handleChange}\r\n                                            min=\"1\"\r\n                                            className={inputClasses('age')}\r\n                                            placeholder=\"Enter age\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Gender <span className=\"text-red-500\">*</span>\r\n                                        </label>\r\n                                        <select\r\n                                            name=\"gender\"\r\n                                            value={formData.gender}\r\n                                            onChange={handleChange}\r\n                                            className={inputClasses('gender')}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Gender</option>\r\n                                            <option value=\"male\">Male</option>\r\n                                            <option value=\"female\">Female</option>\r\n                                            <option value=\"other\">Other</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Financial Status <span className=\"text-red-500\">*</span>\r\n                                        </label>\r\n                                        <select\r\n                                            name=\"financialStatus\"\r\n                                            value={formData.financialStatus}\r\n                                            onChange={handleChange}\r\n                                            className={inputClasses('financialStatus')}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Financial Status</option>\r\n                                            <option value=\"Wealthy\">Wealthy</option>\r\n                                            <option value=\"Upper Middle Class\">Upper Middle Class</option>\r\n                                            <option value=\"Lower Middle Class\">Lower Middle Class</option>\r\n                                            <option value=\"Poor\">Poor</option>\r\n                                            <option value=\"Very Poor\">Very Poor</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Aadhar Number\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"adhaarNumber\"\r\n                                            value={formData.adhaarNumber}\r\n                                            onChange={handleChange}\r\n                                            maxLength={14}\r\n                                            className={inputClasses('adhaarNumber')}\r\n                                            placeholder=\"0000 - 0000 - 0000\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Spouse Name\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"spouseName\"\r\n                                            value={formData.spouseName}\r\n                                            onChange={handleChange}\r\n                                            className={inputClasses('spouseName')}\r\n                                            placeholder=\"Enter spouse name\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Father Name\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"fatherName\"\r\n                                            value={formData.fatherName}\r\n                                            onChange={handleChange}\r\n                                            className={inputClasses('fatherName')}\r\n                                            placeholder=\"Enter father name\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Mother Name\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"motherName\"\r\n                                            value={formData.motherName}\r\n                                            onChange={handleChange}\r\n                                            className={inputClasses('motherName')}\r\n                                            placeholder=\"Enter mother name\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Phone Number 1 <span className=\"text-red-500\">*</span>\r\n                                        </label>\r\n                                        <div className=\"relative\">\r\n                                            <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                            <input\r\n                                                type=\"tel\"\r\n                                                name=\"phoneNumber1\"\r\n                                                value={formData.phoneNumber1}\r\n                                                onChange={handleChange}\r\n                                                className={`${inputClasses('phoneNumber1')} pl-12`}\r\n                                                placeholder=\"10-digit number\"\r\n                                                maxLength={10}\r\n                                                onInput={(e: React.FormEvent<HTMLInputElement>) => {\r\n                                                    const input = e.currentTarget;\r\n                                                    input.value = input.value.replace(/\\D/g, '').slice(0, 10);\r\n                                                }}\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Phone Number 2\r\n                                        </label>\r\n                                        <div className=\"relative\">\r\n                                            <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                            <input\r\n                                                type=\"tel\"\r\n                                                name=\"phoneNumber2\"\r\n                                                value={formData.phoneNumber2}\r\n                                                onChange={handleChange}\r\n                                                className={`${inputClasses('phoneNumber2')} pl-12`}\r\n                                                placeholder=\"10-digit number\"\r\n                                                maxLength={10}\r\n                                                onInput={(e: React.FormEvent<HTMLInputElement>) => {\r\n                                                    const input = e.currentTarget;\r\n                                                    input.value = input.value.replace(/\\D/g, '').slice(0, 10);\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"md:col-span-2\">\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Adhaar Address\r\n                                        </label>\r\n                                        <textarea\r\n                                            name=\"adhaarAddress\"\r\n                                            value={formData.adhaarAddress}\r\n                                            onChange={handleChange}\r\n                                            rows={3}\r\n                                            className={inputClasses('adhaarAddress')}\r\n                                            placeholder=\"Enter Adhaar address\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"md:col-span-2\">\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Current Address\r\n                                        </label>\r\n                                        <textarea\r\n                                            name=\"currentAddress\"\r\n                                            value={formData.currentAddress}\r\n                                            onChange={handleChange}\r\n                                            rows={3}\r\n                                            className={inputClasses('currentAddress')}\r\n                                            placeholder=\"Enter current address\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"md:col-span-2\">\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            House Route (In Detail)\r\n                                        </label>\r\n                                        <textarea\r\n                                            name=\"houseRoute\"\r\n                                            value={formData.houseRoute}\r\n                                            onChange={handleChange}\r\n                                            rows={4}\r\n                                            maxLength={1000}\r\n                                            className={inputClasses('houseRoute')}\r\n                                            placeholder=\"Describe your house route in detail (up to 1000 characters)\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Contact Person Section */}\r\n                            <div className=\"bg-gray-50 p-6 rounded-2xl border-l-4 border-blue-600\">\r\n                                <div className=\"flex items-center mb-6\">\r\n                                    <Users className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                    <h3 className=\"text-xl font-semibold text-blue-900\">Contact Person</h3>\r\n                                </div>\r\n\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Contact Person Name\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"contactPerson\"\r\n                                            value={formData.contactPerson}\r\n                                            onChange={handleChange}\r\n                                            className={inputClasses('contactPerson')}\r\n                                            placeholder=\"Enter name\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Relation\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"relation\"\r\n                                            value={formData.relation}\r\n                                            onChange={handleChange}\r\n                                            className={inputClasses('relation')}\r\n                                            placeholder=\"e.g. Brother, Sister\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Phone Number\r\n                                        </label>\r\n                                        <div className=\"relative\">\r\n                                            <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                            <input\r\n                                                type=\"tel\"\r\n                                                name=\"contactPhone\"\r\n                                                value={formData.contactPhone}\r\n                                                onChange={handleChange}\r\n                                                className={`${inputClasses('contactPhone')} pl-12`}\r\n                                                placeholder=\"10-digit number\"\r\n                                                maxLength={10}\r\n                                                onInput={(e: React.FormEvent<HTMLInputElement>) => {\r\n                                                    const input = e.currentTarget;\r\n                                                    input.value = input.value.replace(/\\D/g, '').slice(0, 10);\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Emergency Contacts Section */}\r\n                            <div className=\"bg-gray-50 p-6 rounded-2xl border-l-4 border-blue-600\">\r\n                                <div className=\"flex items-center mb-6\">\r\n                                    <AlertCircle className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                    <h3 className=\"text-xl font-semibold text-blue-900\">Emergency Contacts</h3>\r\n                                </div>\r\n\r\n                                <div className=\"space-y-6\">\r\n                                    {/* Neighbour Residence */}\r\n                                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                        <div>\r\n                                            <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                                Neighbour Residence\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"neighbourResidence\"\r\n                                                value={formData.neighbourResidence}\r\n                                                onChange={handleChange}\r\n                                                className={inputClasses('neighbourResidence')}\r\n                                                placeholder=\"Enter neighbour name\"\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                                Phone Number\r\n                                            </label>\r\n                                            <div className=\"relative\">\r\n                                                <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                                <input\r\n                                                    type=\"tel\"\r\n                                                    name=\"neighbourPhone\"\r\n                                                    value={formData.neighbourPhone}\r\n                                                    onChange={handleChange}\r\n                                                    className={`${inputClasses('neighbourPhone')} pl-12`}\r\n                                                    placeholder=\"10-digit number\"\r\n                                                    maxLength={10}\r\n                                                    onInput={(e: React.FormEvent<HTMLInputElement>) => {\r\n                                                        const input = e.currentTarget;\r\n                                                        input.value = input.value.replace(/\\D/g, '').slice(0, 10);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Community Volunteer */}\r\n                                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                        <div>\r\n                                            <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                                Community Volunteer\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"communityVolunteer\"\r\n                                                value={formData.communityVolunteer}\r\n                                                onChange={handleChange}\r\n                                                className={inputClasses('communityVolunteer')}\r\n                                                placeholder=\"Enter volunteer name\"\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                                Phone Number\r\n                                            </label>\r\n                                            <div className=\"relative\">\r\n                                                <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                                <input\r\n                                                    type=\"tel\"\r\n                                                    name=\"communityVolunteerPhone\"\r\n                                                    value={formData.communityVolunteerPhone}\r\n                                                    onChange={handleChange}\r\n                                                    className={`${inputClasses('communityVolunteerPhone')} pl-12`}\r\n                                                    placeholder=\"10-digit number\"\r\n                                                    maxLength={10}\r\n                                                    onInput={(e: React.FormEvent<HTMLInputElement>) => {\r\n                                                        const input = e.currentTarget;\r\n                                                        input.value = input.value.replace(/\\D/g, '').slice(0, 10);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Ward Member */}\r\n                                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                        <div>\r\n                                            <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                                Ward Member\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"wardMember\"\r\n                                                value={formData.wardMember}\r\n                                                onChange={handleChange}\r\n                                                className={inputClasses('wardMember')}\r\n                                                placeholder=\"Enter ward member name\"\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                                Phone Number\r\n                                            </label>\r\n                                            <div className=\"relative\">\r\n                                                <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                                <input\r\n                                                    type=\"tel\"\r\n                                                    name=\"wardMemberPhone\"\r\n                                                    value={formData.wardMemberPhone}\r\n                                                    onChange={handleChange}\r\n                                                    className={`${inputClasses('wardMemberPhone')} pl-12`}\r\n                                                    placeholder=\"10-digit number\"\r\n                                                    maxLength={10}\r\n                                                    onInput={(e: React.FormEvent<HTMLInputElement>) => {\r\n                                                        const input = e.currentTarget;\r\n                                                        input.value = input.value.replace(/\\D/g, '').slice(0, 10);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Aasha Volunteer */}\r\n                                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                        <div>\r\n                                            <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                                Aasha Volunteer\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"aashaVolunteer\"\r\n                                                value={formData.aashaVolunteer}\r\n                                                onChange={handleChange}\r\n                                                className={inputClasses('aashaVolunteer')}\r\n                                                placeholder=\"Enter aasha volunteer name\"\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                                Phone Number\r\n                                            </label>\r\n                                            <div className=\"relative\">\r\n                                                <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                                <input\r\n                                                    type=\"tel\"\r\n                                                    name=\"aashaVolunteerPhone\"\r\n                                                    value={formData.aashaVolunteerPhone}\r\n                                                    onChange={handleChange}\r\n                                                    className={`${inputClasses('aashaVolunteerPhone')} pl-12`}\r\n                                                    placeholder=\"10-digit number\"\r\n                                                    maxLength={10}\r\n                                                    onInput={(e: React.FormEvent<HTMLInputElement>) => {\r\n                                                        const input = e.currentTarget;\r\n                                                        input.value = input.value.replace(/\\D/g, '').slice(0, 10);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Other Person */}\r\n                                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                        <div>\r\n                                            <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                                Other Person\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"otherPerson\"\r\n                                                value={formData.otherPerson}\r\n                                                onChange={handleChange}\r\n                                                className={inputClasses('otherPerson')}\r\n                                                placeholder=\"Enter other person name\"\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                                Phone Number\r\n                                            </label>\r\n                                            <div className=\"relative\">\r\n                                                <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                                <input\r\n                                                    type=\"tel\"\r\n                                                    name=\"otherPersonPhone\"\r\n                                                    value={formData.otherPersonPhone}\r\n                                                    onChange={handleChange}\r\n                                                    className={`${inputClasses('otherPersonPhone')} pl-12`}\r\n                                                    placeholder=\"10-digit number\"\r\n                                                    maxLength={10}\r\n                                                    onInput={(e: React.FormEvent<HTMLInputElement>) => {\r\n                                                        const input = e.currentTarget;\r\n                                                        input.value = input.value.replace(/\\D/g, '').slice(0, 10);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* File Upload Section */}\r\n                            <div className=\"bg-gray-50 p-6 rounded-2xl border-l-4 border-blue-600\">\r\n                                <div className=\"flex items-center mb-6\">\r\n                                    <Camera className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                    <h3 className=\"text-xl font-semibold text-blue-900\">Documents</h3>\r\n                                </div>\r\n\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                    {/* Photograph Upload */}\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Patient Photograph\r\n                                        </label>\r\n                                        <div className=\"relative\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                name=\"photograph\"\r\n                                                accept=\"image/*\"\r\n                                                onChange={(e) => {\r\n                                                    const input = e.target;\r\n                                                    const file = input.files?.[0];\r\n                                                    if (file) {\r\n\r\n                                                        const imgElement = document.getElementById(\"photoPreview\") as HTMLImageElement;\r\n                                                        if (imgElement) {\r\n                                                            imgElement.src = URL.createObjectURL(file);\r\n                                                            imgElement.style.display = 'block';\r\n                                                        }\r\n                                                        setFormData(prev => ({ ...prev, photograph: file }));\r\n                                                    }\r\n                                                }}\r\n                                                className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer\"\r\n                                            />\r\n                                            <div className=\"flex items-center justify-center w-full h-32 border-2 border-dashed border-blue-300 rounded-lg bg-blue-50 hover:bg-blue-100 transition-colors\">\r\n                                                <div className=\"text-center\">\r\n                                                    <Camera className=\"w-8 h-8 text-blue-400 mx-auto mb-2\" />\r\n                                                    <p className=\"text-sm text-blue-600 font-medium\">Click to upload photo</p>\r\n                                                    <p className=\"text-xs text-blue-400\">JPG, PNG files only</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <img\r\n                                            id=\"photoPreview\"\r\n                                            alt=\"Photo Preview\"\r\n                                            className=\"mt-4 w-24 h-24 object-cover rounded-lg border-2 border-blue-200 hidden\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {/* Aadhar Document Upload */}\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                            Aadhar Document (PDF)\r\n                                        </label>\r\n                                        <div className=\"relative\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                name=\"aadharDoc\"\r\n                                                accept=\"application/pdf\"\r\n                                                onChange={(e) => {\r\n                                                    const input = e.target;\r\n                                                    const file = input.files?.[0];\r\n                                                    const label = document.getElementById(\"pdfPreview\");\r\n                                                    if (label) {\r\n                                                        label.textContent = file ? file.name : \"No file chosen\";\r\n                                                    }\r\n                                                    if (file) {\r\n                                                        setFormData(prev => ({ ...prev, aadharDoc: file }));\r\n                                                    }\r\n                                                }}\r\n                                                className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer\"\r\n                                            />\r\n                                            <div className=\"flex items-center justify-center w-full h-32 border-2 border-dashed border-blue-300 rounded-lg bg-blue-50 hover:bg-blue-100 transition-colors\">\r\n                                                <div className=\"text-center\">\r\n                                                    <FileText className=\"w-8 h-8 text-blue-400 mx-auto mb-2\" />\r\n                                                    <p className=\"text-sm text-blue-600 font-medium\">Click to upload PDF</p>\r\n                                                    <p className=\"text-xs text-blue-400\">PDF files only</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <p id=\"pdfPreview\" className=\"mt-2 text-sm text-gray-600 truncate\">No file chosen</p>\r\n                                    </div>\r\n                                    {showAdditionalDetailsCheckbox && (\r\n                                        <div className=\"bg-yellow-50 border-l-4 border-yellow-400 text-yellow-800 px-4 py-3 rounded-md mt-6 shadow-sm\">\r\n                                            <div className=\"flex items-start gap-3\">\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    id=\"additionalDetails\"\r\n                                                    checked={collectAdditionalDetails}\r\n                                                    onChange={(e) => setCollectAdditionalDetails(e.target.checked)}\r\n                                                    className=\"mt-1 w-5 h-5 text-yellow-600 focus:ring-yellow-500 border-gray-300 rounded\"\r\n                                                />\r\n                                                <label htmlFor=\"additionalDetails\" className=\"text-sm sm:text-base font-medium leading-6\">\r\n                                                    <span className=\"font-semibold text-yellow-900\">Additional Patient Details:</span> Please tick this box if you're registering as a <span className=\"font-bold\">Personal Care</span> patient. This will redirect you to collect further required information.\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Action Buttons */}\r\n                            <div className=\"flex flex-col sm:flex-row gap-4 pt-8\">\r\n                                <div className=\"w-full flex justify-center items-center gap-4 mt-8 flex-wrap\">\r\n                                    {/* Submit Button */}\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        disabled={isSubmitting}\r\n                                        className={`px-12 py-4 rounded-xl font-bold text-lg text-white shadow-lg transform transition-all duration-300 ${isSubmitting\r\n                                            ? 'bg-gray-400 cursor-not-allowed'\r\n                                            : 'bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 hover:shadow-xl hover:-translate-y-1 active:translate-y-0'\r\n                                            }`}\r\n                                    >\r\n                                        {isSubmitting ? (\r\n                                            <div className=\"flex items-center justify-center\">\r\n                                                <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-white mr-3\"></div>\r\n                                                {isEditMode ? 'Updating...' : 'Submitting...'}\r\n                                            </div>\r\n                                        ) : (\r\n                                            isEditMode ? 'Update Patient' : 'Register Patient'\r\n                                        )}\r\n                                    </button>\r\n\r\n                                    {/* Reset Button */}\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={() => {\r\n                                            if (confirm('Are you sure you want to reset the form? All data will be lost.')) {\r\n                                                // Reset logic\r\n                                                setFormData({\r\n                                                    patientId: '', date: '', district: '', panchayath: '', ward: '', area: '', diagnosis: '', category: '', status: '',\r\n                                                    name: '', age: '', gender: '', financialStatus: '', adhaarNumber: '', spouseName: '', fatherName: '', motherName: '',\r\n                                                    phoneNumber1: '', phoneNumber2: '', adhaarAddress: '', currentAddress: '', houseRoute: '', contactPerson: '',\r\n                                                    relation: '', contactPhone: '', neighbourResidence: '', neighbourPhone: '', communityVolunteer: '',\r\n                                                    communityVolunteerPhone: '', wardMember: '', wardMemberPhone: '', aashaVolunteer: '', aashaVolunteerPhone: '',\r\n                                                    otherPerson: '', otherPersonPhone: '', photograph: null, aadharDoc: null\r\n                                                });\r\n                                                setSelectedDistrictId(null);\r\n                                                setSelectedPanchayathId(null);\r\n                                                const photoPreview = document.getElementById(\"pdfPreview\") as HTMLImageElement;\r\n                                                const pdfPreview = document.getElementById(\"pdfPreview\");\r\n                                                if (photoPreview) {\r\n                                                    photoPreview.style.display = 'none';\r\n                                                    photoPreview.src = '';\r\n                                                }\r\n                                                if (pdfPreview) {\r\n                                                    pdfPreview.textContent = 'No file chosen';\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                        className=\"bg-gradient-to-r from-gray-500 to-gray-600 hover:from-gray-600 hover:to-gray-700 text-white font-semibold py-4 px-8 rounded-2xl transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl flex items-center justify-center\"\r\n                                    >\r\n                                        <RotateCcw className=\"w-6 h-6 mr-3\" />\r\n                                        Reset Form\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                {/* Footer */}\r\n                <div className=\"mt-8 text-center\">\r\n                    <div className=\"bg-white rounded-2xl shadow-lg p-6\">\r\n                        <div className=\"flex items-center justify-center mb-4\">\r\n                            <Shield className=\"w-8 h-8 text-blue-600 mr-3\" />\r\n                            <span className=\"text-lg font-semibold text-blue-900\">Secure Registration System</span>\r\n                        </div>\r\n                        <p className=\"text-gray-600\">\r\n                            Your information is securely processed and stored in compliance with healthcare data protection standards.\r\n                        </p>\r\n                        <div className=\"flex justify-center items-center mt-4 space-x-6 text-sm text-gray-500\">\r\n                            <div className=\"flex items-center\">\r\n                                <Lock className=\"w-4 h-4 mr-1\" />\r\n                                Encrypted\r\n                            </div>\r\n                            <div className=\"flex items-center\">\r\n                                <Shield className=\"w-4 h-4 mr-1\" />\r\n                                HIPAA Compliant\r\n                            </div>\r\n                            <div className=\"flex items-center\">\r\n                                <CheckCircle className=\"w-4 h-4 mr-1\" />\r\n                                Verified\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}