{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/app/volunteer/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState, useCallback, useEffect } from 'react';\r\nimport { Camera, User, MapPin, Briefcase, Calendar, Phone, Mail,Shield,Lock,CheckCircle } from 'lucide-react';\r\n\r\ninterface District {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\ninterface Panchayath {\r\n    panchayathId: number;\r\n    panchayathName: string;\r\n    dstId: number;\r\n    dstName: string;\r\n}\r\ninterface ApiResponse {\r\n    success: boolean;\r\n    message: string;\r\n    data?: any;\r\n}\r\n\r\ninterface VolunteerData {\r\n    Vol_Id: string;\r\n    district: string;\r\n    panchayath: string;\r\n    ward_no: string;\r\n    VolName: string;\r\n    address: string;\r\n    gender: string;\r\n    dob: string;\r\n    age: string;\r\n    BloodGroop: string;\r\n    phone: string;\r\n    email: string;\r\n    type: string;\r\n    job: string;\r\n    Photo: File | null;\r\n    status: string;\r\n    description: string;\r\n}\r\n\r\nconst VolunteerRegistrationForm: React.FC = () => {\r\n    const [formData, setFormData] = useState<VolunteerData>({\r\n        Vol_Id: '',\r\n        district: '',\r\n        panchayath: '',\r\n        ward_no: '',\r\n        VolName: '',\r\n        address: '',\r\n        gender: '',\r\n        dob: '',\r\n        age: '',\r\n        BloodGroop: '',\r\n        phone: '',\r\n        email: '',\r\n        type: '',\r\n        job: '',\r\n        Photo: null,\r\n        status: '',\r\n        description: ''\r\n    });\r\n\r\n    const [errors, setErrors] = useState<Record<string, string>>({});\r\n    const [photoFileName, setPhotoFileName] = useState<string>('');\r\n    const [districts, setDistricts] = useState<District[]>([]);\r\n    const [panchayaths, setPanchayaths] = useState<Panchayath[]>([]);\r\n    const [selectedDistrictId, setSelectedDistrictId] = useState<number | null>(null);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [submitMessage, setSubmitMessage] = useState<string>('');\r\n    const [submitStatus, setSubmitStatus] = useState<'success' | 'error' | ''>('');\r\n\r\n    // Fetch Vol_Id from API\r\n    useEffect(() => {\r\n        const fetchVolId = async () => {\r\n            try {\r\n                const response = await fetch('https://localhost:7112/api/Volunteers/get-id');\r\n                if (response.ok) {\r\n                    const volId = await response.text();\r\n                    setFormData(prev => ({ ...prev, Vol_Id: volId }));\r\n                } else {\r\n                    console.error('Failed to fetch Vol_Id - API response not OK');\r\n                }\r\n            } catch (err) {\r\n                console.error('Failed to fetch Vol_Id', err);\r\n            }\r\n        };\r\n\r\n        fetchVolId();\r\n    }, []);\r\n\r\n    // Fetch districts and panchayaths from API\r\n    useEffect(() => {\r\n        const fetchLocations = async () => {\r\n            try {\r\n                const [dRes, pRes] = await Promise.all([\r\n                    fetch('https://localhost:7112/api/Districts'),\r\n                    fetch('https://localhost:7112/api/Panchayaths'),\r\n                ]);\r\n\r\n                if (dRes.ok && pRes.ok) {\r\n                    const dData = await dRes.json();\r\n                    const pData = await pRes.json();\r\n                    setDistricts(dData);\r\n                    setPanchayaths(pData);\r\n                } else {\r\n                    console.error('Failed to fetch districts/panchayaths - API response not OK');\r\n                }\r\n            } catch (err) {\r\n                console.error('Failed to fetch districts/panchayaths', err);\r\n                // You might want to show a user-friendly error message here\r\n            }\r\n        };\r\n\r\n        fetchLocations();\r\n    }, []);\r\n\r\n    const calculateAge = useCallback((dateOfBirth: string): string => {\r\n        if (!dateOfBirth) return '';\r\n\r\n        const dob = new Date(dateOfBirth);\r\n        const today = new Date();\r\n\r\n        let age = today.getFullYear() - dob.getFullYear();\r\n        const monthDiff = today.getMonth() - dob.getMonth();\r\n\r\n        if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < dob.getDate())) {\r\n            age--;\r\n        }\r\n\r\n        return age >= 0 ? `${age} years old` : 'Invalid date';\r\n    }, []);\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n        const { name, value } = e.target;\r\n\r\n        setFormData(prev => {\r\n            const updated = { ...prev, [name]: value };\r\n\r\n            // Auto-calculate age when DOB changes\r\n            if (name === 'dob') {\r\n                updated.age = calculateAge(value);\r\n            }\r\n\r\n            return updated;\r\n        });\r\n\r\n        // Clear error when user starts typing\r\n        if (errors[name]) {\r\n            setErrors(prev => ({ ...prev, [name]: '' }));\r\n        }\r\n    };\r\n\r\n    const handleDistrictChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const selectedName = e.target.value;\r\n        const selectedDistrict = districts.find(d => d.name === selectedName);\r\n        setSelectedDistrictId(selectedDistrict?.id || null);\r\n\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            district: selectedName,\r\n            panchayath: '', // Clear Panchayath when District changes\r\n        }));\r\n\r\n        // Clear district error if it exists\r\n        if (errors.district) {\r\n            setErrors(prev => ({ ...prev, district: '' }));\r\n        }\r\n    };\r\n\r\n    const handlePanchayathChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const selectedName = e.target.value;\r\n\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            panchayath: selectedName,\r\n        }));\r\n\r\n        // Clear panchayath error if it exists\r\n        if (errors.panchayath) {\r\n            setErrors(prev => ({ ...prev, panchayath: '' }));\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const file = e.target.files?.[0] || null;\r\n        setFormData(prev => ({ ...prev, Photo: file }));\r\n        setPhotoFileName(file ? file.name : '');\r\n    };\r\n\r\n    const validateForm = (): boolean => {\r\n        const newErrors: Record<string, string> = {};\r\n        const requiredFields = ['Vol_Id', 'VolName', 'address', 'district', 'panchayath', 'ward_no', 'gender', 'dob', 'phone', 'email', 'type'];\r\n\r\n        requiredFields.forEach(field => {\r\n            if (!formData[field as keyof VolunteerData]) {\r\n                newErrors[field] = 'This field is required';\r\n            }\r\n        });\r\n\r\n        // Email validation\r\n        if (formData.email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\r\n            newErrors.email = 'Please enter a valid email address';\r\n        }\r\n\r\n        // Phone validation\r\n        if (formData.phone && !/^\\d{10}$/.test(formData.phone.replace(/\\D/g, ''))) {\r\n            newErrors.phone = 'Please enter a valid 10-digit phone number';\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const handleSubmit = async (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n\r\n        if (validateForm()) {\r\n            console.log('Form Data:', formData);\r\n            alert('Volunteer registration submitted successfully!');\r\n            // Handle form submission here - you can implement API call similar to hospital form\r\n        }\r\n        setIsSubmitting(true);\r\n        setSubmitMessage('');\r\n        setSubmitStatus('');\r\n\r\n        try {\r\n            // Create FormData for file upload\r\n            const formDataToSend = new FormData();\r\n\r\n            // Append all form fields\r\n            formDataToSend.append('Vol_Id', formData.Vol_Id);\r\n            formDataToSend.append('district', formData.district);\r\n            formDataToSend.append('panchayath', formData.panchayath);\r\n            formDataToSend.append('ward_no', formData.ward_no);\r\n            formDataToSend.append('VolName', formData.VolName);\r\n            formDataToSend.append('address', formData.address);\r\n            formDataToSend.append('gender', formData.gender);\r\n\r\n            // Convert date string to proper format if needed\r\n            const dobDate = new Date(formData.dob);\r\n            formDataToSend.append('dob', dobDate.toISOString());\r\n\r\n            formDataToSend.append('age', formData.age.toString());\r\n            formDataToSend.append('bloodGroup', formData.BloodGroop);\r\n            formDataToSend.append('phone', formData.phone);\r\n            formDataToSend.append('email', formData.email);\r\n            formDataToSend.append('type', formData.type);\r\n            formDataToSend.append('job', formData.job);\r\n            formDataToSend.append('status', formData.status || 'Active');\r\n            formDataToSend.append('description', formData.description);\r\n\r\n            // Append photo file if exists\r\n            if (formData.Photo) {\r\n                formDataToSend.append('Photo', formData.Photo);\r\n            }\r\n\r\n            // API call\r\n            const response = await fetch('https://localhost:7112/api/Volunteers', {\r\n                method: 'POST',\r\n                body: formDataToSend,\r\n                // Don't set Content-Type header - let the browser set it for FormData\r\n            });\r\n\r\n            if (response.ok) {\r\n                const result: ApiResponse = await response.json();\r\n                setSubmitStatus('success');\r\n                setSubmitMessage('Volunteer registration submitted successfully!');\r\n\r\n                // Reset form after successful submission\r\n                setFormData({\r\n                    Vol_Id: '',\r\n                    district: '',\r\n                    panchayath: '',\r\n                    ward_no: '',\r\n                    VolName: '',\r\n                    address: '',\r\n                    gender: '',\r\n                    dob: '',\r\n                    age: '',\r\n                    BloodGroop: '',\r\n                    phone: '',\r\n                    email: '',\r\n                    type: '',\r\n                    job: '',\r\n                    Photo: null,\r\n                    status: 'Active',\r\n                    description: ''\r\n                });\r\n\r\n                // Fetch new Vol_Id after successful submission\r\n                try {\r\n                    const volIdResponse = await fetch('https://localhost:7112/api/Volunteers/get-id');\r\n                    if (volIdResponse.ok) {\r\n                        const newVolId = await volIdResponse.text();\r\n                        setFormData(prev => ({ ...prev, Vol_Id: newVolId }));\r\n                    }\r\n                } catch (err) {\r\n                    console.error('Failed to fetch new Vol_Id after reset', err);\r\n                }\r\n\r\n                console.log('Success:', result);\r\n            } else {\r\n                // Handle HTTP error responses\r\n                const errorResult = await response.text();\r\n                setSubmitStatus('error');\r\n                setSubmitMessage(`Failed to submit registration: ${response.status} ${response.statusText}`);\r\n                console.error('HTTP Error:', response.status, errorResult);\r\n            }\r\n\r\n        } catch (error) {\r\n            // Handle network or other errors\r\n            setSubmitStatus('error');\r\n            setSubmitMessage('Network error occurred. Please check your connection and try again.');\r\n            console.error('Network Error:', error);\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const inputClasses = (fieldName: string) => `\r\n    w-full px-4 py-3 border-2 rounded-xl text-base transition-all duration-300 bg-gray-50\r\n    focus:outline-none focus:border-blue-600 focus:bg-white focus:shadow-lg focus:-translate-y-0.5\r\n    ${errors[fieldName] ? 'border-red-500' : 'border-gray-200'}\r\n  `;\r\n\r\n    return (\r\n        <div className=\"min-h-screen w-full bg-gradient-to-br from-red-50 to-red-100 px-10 py-8\">\r\n            <div>\r\n                {/* Header */}\r\n                <div className=\"bg-gradient-to-r from-red-900 to-red-700 text-white p-8 text-center\">\r\n                    <div className=\"flex justify-center mb-4\">\r\n                        <User className=\"w-16 h-16 text-red-200\" />\r\n                    </div>\r\n                    <h1 className=\"text-4xl font-light mb-3\">Volunteer Registration</h1>\r\n                    <p className=\"text-xl text-red-200\">Join our community of dedicated volunteers</p>\r\n                </div>\r\n\r\n                {/* Form */}\r\n                <div className=\"p-8\">\r\n                    <div className=\"space-y-8\">\r\n                        {/* Personal Information Section */}\r\n                        <div className=\"bg-gray-50 p-6 rounded-2xl border-l-4 border-red-600\">\r\n                            <div className=\"flex items-center mb-6\">\r\n                                <User className=\"w-6 h-6 text-red-600 mr-3\" />\r\n                                <h3 className=\"text-xl font-semibold text-red-900\">Personal Information</h3>\r\n                            </div>\r\n\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Volunteer ID <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"Vol_Id\"\r\n                                        value={formData.Vol_Id}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('Vol_Id')}\r\n                                        placeholder=\"Auto-generated ID\"\r\n                                        readOnly\r\n                                        style={{ backgroundColor: '#f0f4f8', cursor: 'not-allowed' }}\r\n                                    />\r\n                                    {errors.Vol_Id && <p className=\"text-red-500 text-sm mt-1\">{errors.Vol_Id}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Volunteer Name <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"VolName\"\r\n                                        value={formData.VolName}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('VolName')}\r\n                                        placeholder=\"Enter full name\"\r\n                                    />\r\n                                    {errors.VolName && <p className=\"text-red-500 text-sm mt-1\">{errors.VolName}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Gender <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <select\r\n                                        name=\"gender\"\r\n                                        value={formData.gender}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('gender')}\r\n                                    >\r\n                                        <option value=\"\">Select Gender</option>\r\n                                        <option value=\"male\">Male</option>\r\n                                        <option value=\"female\">Female</option>\r\n                                        <option value=\"others\">Others</option>\r\n                                    </select>\r\n                                    {errors.gender && <p className=\"text-red-500 text-sm mt-1\">{errors.gender}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Date of Birth <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <div className=\"relative\">\r\n                                        <Calendar className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            name=\"dob\"\r\n                                            value={formData.dob}\r\n                                            onChange={handleInputChange}\r\n                                            className={`${inputClasses('dob')} pl-12`}\r\n                                        />\r\n                                    </div>\r\n                                    {errors.dob && <p className=\"text-red-500 text-sm mt-1\">{errors.dob}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Age\r\n                                    </label>\r\n                                    <div className={`\r\n                    bg-gradient-to-r from-red-50 to-red-100 text-red-900 p-4 rounded-xl \r\n                    font-semibold text-center border-2 border-red-300\r\n                    ${formData.age ? 'from-green-50 to-green-100 text-green-900 border-green-300' : ''}\r\n                    ${formData.age && formData.age.includes('Invalid') ? 'from-red-50 to-red-100 text-red-900 border-red-300' : ''}\r\n                  `}>\r\n                                        {formData.age || 'Age will be calculated automatically'}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Blood Group\r\n                                    </label>\r\n                                    <select\r\n                                        name=\"BloodGroop\"\r\n                                        value={formData.BloodGroop}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('BloodGroop')}\r\n                                    >\r\n                                        <option value=\"\">Select Blood Group</option>\r\n                                        <option value=\"A+\">A+</option>\r\n                                        <option value=\"A-\">A-</option>\r\n                                        <option value=\"B+\">B+</option>\r\n                                        <option value=\"B-\">B-</option>\r\n                                        <option value=\"AB+\">AB+</option>\r\n                                        <option value=\"AB-\">AB-</option>\r\n                                        <option value=\"O+\">O+</option>\r\n                                        <option value=\"O-\">O-</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Contact Information Section */}\r\n                        <div className=\"bg-gray-50 p-6 rounded-2xl border-l-4 border-red-600\">\r\n                            <div className=\"flex items-center mb-6\">\r\n                                <MapPin className=\"w-6 h-6 text-red-600 mr-3\" />\r\n                                <h3 className=\"text-xl font-semibold text-red-900\">Contact Information</h3>\r\n                            </div>\r\n\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                <div className=\"md:col-span-2\">\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Address <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <textarea\r\n                                        name=\"address\"\r\n                                        value={formData.address}\r\n                                        onChange={handleInputChange}\r\n                                        rows={4}\r\n                                        className={inputClasses('address')}\r\n                                        placeholder=\"Enter your complete address\"\r\n                                    />\r\n                                    {errors.address && <p className=\"text-red-500 text-sm mt-1\">{errors.address}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        District <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <select\r\n                                        name=\"district\"\r\n                                        value={formData.district}\r\n                                        onChange={handleDistrictChange}\r\n                                        className={inputClasses('district')}\r\n                                    >\r\n                                        <option value=\"\">Select District</option>\r\n                                        {districts.map(d => (\r\n                                            <option key={d.id} value={d.name}>\r\n                                                {d.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.district && <p className=\"text-red-500 text-sm mt-1\">{errors.district}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Panchayath <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <select\r\n                                        name=\"panchayath\"\r\n                                        value={formData.panchayath}\r\n                                        onChange={handlePanchayathChange}\r\n                                        className={inputClasses('panchayath')}\r\n                                        disabled={!selectedDistrictId}\r\n                                    >\r\n                                        <option value=\"\">\r\n                                            {selectedDistrictId ? \"Select Panchayath\" : \"Select District First\"}\r\n                                        </option>\r\n                                        {panchayaths\r\n                                            .filter(p => p.dstId === selectedDistrictId)\r\n                                            .map(p => (\r\n                                                <option key={p.panchayathId} value={p.panchayathName}>\r\n                                                    {p.panchayathName}\r\n                                                </option>\r\n                                            ))}\r\n                                    </select>\r\n                                    {errors.panchayath && <p className=\"text-red-500 text-sm mt-1\">{errors.panchayath}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Ward Number <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"ward_no\"\r\n                                        value={formData.ward_no}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('ward_no')}\r\n                                        placeholder=\"Enter ward number\"\r\n                                    />\r\n                                    {errors.ward_no && <p className=\"text-red-500 text-sm mt-1\">{errors.ward_no}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Phone Number <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <div className=\"relative\">\r\n                                        <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                        <input\r\n                                            type=\"tel\"\r\n                                            name=\"phone\"\r\n                                            value={formData.phone}\r\n                                            onChange={handleInputChange}\r\n                                            className={`${inputClasses('phone')} pl-12`}\r\n                                            placeholder=\"Enter phone number\"\r\n                                            maxLength={10}\r\n                                            onInput={(e) => {\r\n                                                const input = e.target as HTMLInputElement;\r\n                                                input.value = input.value.replace(/\\D/g, '').slice(0, 10);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    {errors.phone && <p className=\"text-red-500 text-sm mt-1\">{errors.phone}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Email Address <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <div className=\"relative\">\r\n                                        <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            value={formData.email}\r\n                                            onChange={handleInputChange}\r\n                                            className={`${inputClasses('email')} pl-12`}\r\n                                            placeholder=\"Enter email address\"\r\n                                        />\r\n                                    </div>\r\n                                    {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Professional Information Section */}\r\n                        <div className=\"bg-gray-50 p-6 rounded-2xl border-l-4 border-red-600\">\r\n                            <div className=\"flex items-center mb-6\">\r\n                                <Briefcase className=\"w-6 h-6 text-red-600 mr-3\" />\r\n                                <h3 className=\"text-xl font-semibold text-red-900\">Professional Information</h3>\r\n                            </div>\r\n\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Volunteer Type <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <select\r\n                                        name=\"type\"\r\n                                        value={formData.type}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('type')}\r\n                                    >\r\n                                        <option value=\"\">Select Type</option>\r\n                                        <option value=\"community\">Community Service</option>\r\n                                        <option value=\"education\">Education</option>\r\n                                        <option value=\"healthcare\">Healthcare</option>\r\n                                        <option value=\"environment\">Environment</option>\r\n                                        <option value=\"emergency\">Emergency Response</option>\r\n                                        <option value=\"youth\">Youth Development</option>\r\n                                        <option value=\"elderly\">Elderly Care</option>\r\n                                        <option value=\"other\">Other</option>\r\n                                    </select>\r\n                                    {errors.type && <p className=\"text-red-500 text-sm mt-1\">{errors.type}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Current Job/Occupation\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"job\"\r\n                                        value={formData.job}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('job')}\r\n                                        placeholder=\"Enter your occupation\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Status\r\n                                    </label>\r\n                                    <select\r\n                                        name=\"status\"\r\n                                        value={formData.status}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('status')}\r\n                                    >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"active\">Active</option>\r\n                                        <option value=\"inactive\">Inactive</option>\r\n                                        <option value=\"pending\">Pending</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Profile Photo\r\n                                    </label>\r\n                                    <div className=\"relative\">\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"Photo\"\r\n                                            onChange={handleFileChange}\r\n                                            accept=\"image/*\"\r\n                                            className=\"hidden\"\r\n                                            id=\"photo-upload\"\r\n                                        />\r\n                                        <label\r\n                                            htmlFor=\"photo-upload\"\r\n                                            className={`\r\n                        flex items-center justify-center w-full p-4 rounded-xl cursor-pointer\r\n                        transition-all duration-300 font-semibold\r\n                        ${photoFileName\r\n                                                    ? 'bg-gradient-to-r from-green-600 to-green-500 text-white'\r\n                                                    : 'bg-gradient-to-r from-red-600 to-red-500 text-white hover:-translate-y-1 hover:shadow-lg'\r\n                                                }\r\n                      `}\r\n                                        >\r\n                                            <Camera className=\"w-5 h-5 mr-2\" />\r\n                                            {photoFileName || 'Choose Photo'}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"md:col-span-2\">\r\n                                    <label className=\"block text-sm font-semibold text-red-900 mb-2 uppercase tracking-wide\">\r\n                                        Description/Additional Information\r\n                                    </label>\r\n                                    <textarea\r\n                                        name=\"description\"\r\n                                        value={formData.description}\r\n                                        onChange={handleInputChange}\r\n                                        rows={4}\r\n                                        className={inputClasses('description')}\r\n                                        placeholder=\"Tell us about your interests, skills, and why you want to volunteer...\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Submit Button */}\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleSubmit}\r\n                            className=\"\r\n                w-full bg-gradient-to-r from-red-600 to-red-500 text-white \r\n                py-4 px-8 rounded-xl text-lg font-semibold uppercase tracking-wide\r\n                transition-all duration-300 hover:-translate-y-1 hover:shadow-xl\r\n                focus:outline-none focus:ring-4 focus:ring-red-300\r\n                active:translate-y-0\r\n              \"\r\n                        >\r\n                            Register as Volunteer\r\n                        </button>\r\n                        {/* Footer */}\r\n                <div className=\"mt-8 text-center\">\r\n                    <div className=\"bg-white rounded-2xl shadow-lg p-6\">\r\n                        <div className=\"flex items-center justify-center mb-4\">\r\n                            <Shield className=\"w-8 h-8 text-blue-600 mr-3\" />\r\n                            <span className=\"text-lg font-semibold text-blue-900\">Secure Registration System</span>\r\n                        </div>\r\n                        <p className=\"text-gray-600\">\r\n                            Your information is securely processed and stored in compliance with healthcare data protection standards.\r\n                        </p>\r\n                        <div className=\"flex justify-center items-center mt-4 space-x-6 text-sm text-gray-500\">\r\n                            <div className=\"flex items-center\">\r\n                                <Lock className=\"w-4 h-4 mr-1\" />\r\n                                Encrypted\r\n                            </div>\r\n                            <div className=\"flex items-center\">\r\n                                <Shield className=\"w-4 h-4 mr-1\" />\r\n                                HIPAA Compliant\r\n                            </div>\r\n                            <div className=\"flex items-center\">\r\n                                <CheckCircle className=\"w-4 h-4 mr-1\" />\r\n                                Verified\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VolunteerRegistrationForm;"],"names":[],"mappings":"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","debugId":null}}]
}