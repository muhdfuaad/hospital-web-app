{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/components/SearchableSelect.tsx"],"sourcesContent":["import React, { useMemo, useEffect, useRef } from 'react';\r\nimport { Search, ExternalLink } from 'lucide-react';\r\n\r\nexport interface SearchableSelectProps<T> {\r\n  label: string;\r\n  value: string;\r\n  searchValue: string;\r\n  setSearchValue: (value: string) => void;\r\n  showDropdown: boolean;\r\n  setShowDropdown: (show: boolean) => void;\r\n  items: T[];\r\n  onSelect: (id: string) => void;\r\n  renderItem: (item: T) => React.ReactNode;\r\n  editUrl?: string;\r\n  error?: string;\r\n}\r\n\r\nexport function SearchableSelect<T extends { id: string; name: string }>(\r\n  props: SearchableSelectProps<T>\r\n) {\r\n  const {\r\n    label,\r\n    value,\r\n    searchValue,\r\n    setSearchValue,\r\n    showDropdown,\r\n    setShowDropdown,\r\n    items,\r\n    onSelect,\r\n    renderItem,\r\n    editUrl,\r\n    error\r\n  } = props;\r\n\r\n  const dropdownRef = useRef<HTMLDivElement>(null);\r\n  const selectedItem = useMemo(() => {\r\n    return items.find((i) => i.id === value) || null;\r\n  }, [items, value]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (\r\n        dropdownRef.current &&\r\n        !dropdownRef.current.contains(event.target as Node)\r\n      ) {\r\n        // Close dropdown and clear text\r\n        setShowDropdown(false);\r\n        setSearchValue('');\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [dropdownRef, setShowDropdown, setSearchValue]);\r\n\r\n\r\n  return (\r\n    <div ref={dropdownRef} className=\"relative searchable-select w-full\">\r\n      <label className=\"block text-sm font-semibold text-blue-900 mb-1\">\r\n        {label}\r\n      </label>\r\n\r\n      <div className=\"relative\">\r\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-blue-400\" />\r\n        <input\r\n          type=\"text\"\r\n          value={searchValue !== '' ? searchValue : selectedItem?.name || ''}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n          onFocus={() => setShowDropdown(true)}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter') {\r\n              e.preventDefault();\r\n              if (items.length > 0) {\r\n                const selected = items[0];\r\n                onSelect(selected.id);\r\n                setSearchValue(''); // ✅ Clear search input\r\n                setShowDropdown(false);\r\n              }\r\n            }\r\n          }}\r\n          className={`w-full pl-8 pr-2 py-1.5 text-sm border border-blue-300 rounded-md bg-blue-50 text-blue-900 font-medium focus:outline-none\r\n            ${error\r\n              ? 'border-red-400 bg-red-50 focus:border-red-500 focus:ring-red-200'\r\n              : 'border-blue-300 bg-white focus:border-blue-500 focus:ring-2 focus:ring-blue-200'\r\n            }\r\n            text-blue-900 font-medium focus:outline-none transition-all`}\r\n          placeholder={`Search ${label.toLowerCase()}...`}\r\n        />\r\n\r\n        {value && editUrl && (\r\n          <a\r\n            href={editUrl}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-blue-400 hover:text-blue-600\"\r\n          >\r\n            <ExternalLink className=\"w-4 h-4\" />\r\n          </a>\r\n        )}\r\n      </div>\r\n\r\n      {showDropdown && (\r\n        <div\r\n          className=\"absolute z-[9999] w-full bottom-full mb-1 bg-white border border-blue-300 rounded-lg shadow-lg overflow-y-auto\"\r\n          style={{ maxHeight: '7.5rem' }}\r\n        >\r\n          {items.length > 0 ? (\r\n            items.map((item) => (\r\n              <div\r\n                key={item.id}\r\n                onMouseDown={(e) => {\r\n                  e.preventDefault();\r\n                  onSelect(item.id);\r\n                  setSearchValue(''); // ✅ Clear search input\r\n                  setShowDropdown(false);\r\n                }}\r\n                className=\"px-4 py-2 text-sm text-blue-900 hover:bg-blue-100 cursor-pointer border-b border-blue-100 last:border-b-0 transition-all\"\r\n              >\r\n                {renderItem(item)}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className=\"px-4 py-2 text-sm text-gray-500 text-center\">\r\n              {searchValue ? 'No results found' : 'No data available'}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {error && <p className=\"text-red-500 text-sm mt-1\">{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;;;AAgBO,SAAS,iBACd,KAA+B;;IAE/B,MAAM,EACJ,KAAK,EACL,KAAK,EACL,WAAW,EACX,cAAc,EACd,YAAY,EACZ,eAAe,EACf,KAAK,EACL,QAAQ,EACR,UAAU,EACV,OAAO,EACP,KAAK,EACN,GAAG;IAEJ,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAC3C,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;kDAAE;YAC3B,OAAO,MAAM,IAAI;0DAAC,CAAC,IAAM,EAAE,EAAE,KAAK;4DAAU;QAC9C;iDAAG;QAAC;QAAO;KAAM;IAEjB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,MAAM;iEAAqB,CAAC;oBAC1B,IACE,YAAY,OAAO,IACnB,CAAC,YAAY,OAAO,CAAC,QAAQ,CAAC,MAAM,MAAM,GAC1C;wBACA,gCAAgC;wBAChC,gBAAgB;wBAChB,eAAe;oBACjB;gBACF;;YAEA,SAAS,gBAAgB,CAAC,aAAa;YACvC;8CAAO;oBACL,SAAS,mBAAmB,CAAC,aAAa;gBAC5C;;QACF;qCAAG;QAAC;QAAa;QAAiB;KAAe;IAGjD,qBACE,6LAAC;QAAI,KAAK;QAAa,WAAU;;0BAC/B,6LAAC;gBAAM,WAAU;0BACd;;;;;;0BAGH,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,yMAAA,CAAA,SAAM;wBAAC,WAAU;;;;;;kCAClB,6LAAC;wBACC,MAAK;wBACL,OAAO,gBAAgB,KAAK,cAAc,cAAc,QAAQ;wBAChE,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wBAC9C,SAAS,IAAM,gBAAgB;wBAC/B,WAAW,CAAC;4BACV,IAAI,EAAE,GAAG,KAAK,SAAS;gCACrB,EAAE,cAAc;gCAChB,IAAI,MAAM,MAAM,GAAG,GAAG;oCACpB,MAAM,WAAW,KAAK,CAAC,EAAE;oCACzB,SAAS,SAAS,EAAE;oCACpB,eAAe,KAAK,uBAAuB;oCAC3C,gBAAgB;gCAClB;4BACF;wBACF;wBACA,WAAW,CAAC;YACV,EAAE,QACE,qEACA,kFACH;uEAC0D,CAAC;wBAC9D,aAAa,CAAC,OAAO,EAAE,MAAM,WAAW,GAAG,GAAG,CAAC;;;;;;oBAGhD,SAAS,yBACR,6LAAC;wBACC,MAAM;wBACN,QAAO;wBACP,KAAI;wBACJ,WAAU;kCAEV,cAAA,6LAAC,yNAAA,CAAA,eAAY;4BAAC,WAAU;;;;;;;;;;;;;;;;;YAK7B,8BACC,6LAAC;gBACC,WAAU;gBACV,OAAO;oBAAE,WAAW;gBAAS;0BAE5B,MAAM,MAAM,GAAG,IACd,MAAM,GAAG,CAAC,CAAC,qBACT,6LAAC;wBAEC,aAAa,CAAC;4BACZ,EAAE,cAAc;4BAChB,SAAS,KAAK,EAAE;4BAChB,eAAe,KAAK,uBAAuB;4BAC3C,gBAAgB;wBAClB;wBACA,WAAU;kCAET,WAAW;uBATP,KAAK,EAAE;;;;8CAahB,6LAAC;oBAAI,WAAU;8BACZ,cAAc,qBAAqB;;;;;;;;;;;YAM3C,uBAAS,6LAAC;gBAAE,WAAU;0BAA6B;;;;;;;;;;;;AAG1D;GArHgB;KAAA","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/lib/axios.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"https://localhost:7112\", // update to your .NET API URL\r\n});\r\n\r\n// // ✅ Automatically attach JWT token\r\n// API.interceptors.request.use((config) => {\r\n//   const token = localStorage.getItem(\"token\");\r\n\r\n//   if (token) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//   }\r\n\r\n//   return config;\r\n// });\r\n\r\nexport default API;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;uCAae","debugId":null}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/app/%28dashboard%29/Purchasebill/AddPurchasebill/page.tsx"],"sourcesContent":["'use client';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport { Trash2, Plus, Save, ChevronDown } from 'lucide-react';\r\nimport { SearchableSelect } from '@/components/SearchableSelect';\r\nimport API from '@/lib/axios';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst API_BASE = API.defaults.baseURL;\r\n\r\n// Types\r\n\r\n// Fetched from backend or used in dropdown\r\ninterface Medicine {\r\n    id: number;\r\n    itemCode: string;\r\n    medicineName: string;\r\n    type: string;\r\n    packItem: number;\r\n    purchaseRate: number;\r\n    salesRate: number;\r\n    gst: number;\r\n    hsnCode: string;\r\n    companyId: number;\r\n    company?: string; // for display\r\n}\r\n\r\n// Saved in purchase modal\r\ninterface ModalData {\r\n    id: number | null;\r\n    medicineId: number;\r\n    itemCode: string;\r\n    medicineName: string;\r\n    type: string;\r\n    packItem: number;\r\n    batchNo: string;\r\n    expiryDate: string;\r\n    qty: number;\r\n    freeQty: number;\r\n    purchaseRate: number;\r\n    salesRate: number;\r\n    gst: number;\r\n    hsnCode: string;\r\n    mrp: number;\r\n    rate: number;\r\n    itemMrp?: number; // ➕ Add this\r\n    pRate?: number;   // ➕ Add this\r\n    companyId: number;\r\n    company: string;\r\n    discountPercent: number;\r\n    stripMrp?: number;\r\n    stripRate?: number;\r\n\r\n    totalQty?: number;\r\n    totalFreeQty?: number;\r\n    currentStock?: number;\r\n}\r\n\r\ninterface CalculatedValues {\r\n    pRate: number;\r\n    sRate: number;\r\n    itemMrp: number;\r\n    totalQty: number;\r\n    totalFreeQty: number;\r\n    amount: number;\r\n    grossAmount: number;\r\n    taxAmount: number;\r\n    netAmount: number;\r\n}\r\n\r\ninterface Supplier {\r\n    id: number;\r\n    name: string;\r\n    address: string;\r\n    location: string;\r\n    gstNo: string;\r\n}\r\n\r\ninterface PurchaseItem {\r\n    id: number | null;\r\n    itemCode: string;\r\n    type: string;\r\n    packItem: number;\r\n    medicineId: number;\r\n    medicineName: string;\r\n    batchNo: string;\r\n    expiryDate: string;\r\n    qty: number;\r\n    freeQty: number;\r\n    purchaseRate: number;\r\n    salesRate: number;\r\n    gst: number;\r\n    totalAmount: number;\r\n    hsnCode: string;\r\n    tempId?: number;\r\n\r\n    baseAmount?: number;\r\n    gstAmount?: number;\r\n    cgstAmount?: number;\r\n    sgstAmount?: number;\r\n    igstAmount?: number;\r\n    mrp?: number;\r\n    discountPercent?: number;\r\n    discountAmount?: number;\r\n    stripMrp?: number;\r\n    stripRate?: number;\r\n    totalQty?: number;        // qty * packItem\r\n    totalFreeQty?: number;    // freeQty * packItem\r\n    currentStock?: number;    // totalQty + totalFreeQty\r\n\r\n    companyId?: number;   // ✅ For storing in DB/API\r\n    company?: string;     // ✅ For showing in UI only\r\n}\r\ninterface PurchaseBillResponse {\r\n    purchaseId: number;\r\n}\r\n\r\n\r\ninterface PurchaseBill {\r\n    purchaseId?: number | null;\r\n    date: string;\r\n    supplierId: number;\r\n    supplierName: string;\r\n    supplierAddress: string;\r\n    supplierLocation: string;\r\n    gst: string;\r\n    invoiceNo: string;\r\n    invoiceDate: string;\r\n    paymentType: string;\r\n    items: PurchaseItem[];\r\n    grossTotal: number;\r\n    gstTotal: number;\r\n    roundOff: number;\r\n    discount: number;\r\n    cgst: number;\r\n    sgst: number;\r\n    igst: number;\r\n    cessAmount: number;\r\n    finalTotal: number;\r\n    taxType?: 'intra' | 'inter';\r\n    isCancelled?: boolean;\r\n}\r\n\r\nconst PurchaseBillPage: React.FC = () => {\r\n    const [purchaseBill, setPurchaseBill] = useState<PurchaseBill>({\r\n        purchaseId: undefined, // ← important\r\n        date: new Date().toISOString().split('T')[0],\r\n        supplierId: 0,\r\n        supplierName: '',\r\n        supplierAddress: '',\r\n        supplierLocation: '',\r\n        gst: '',\r\n        invoiceNo: '',\r\n        invoiceDate: new Date().toISOString().split('T')[0],\r\n        paymentType: 'Credit',\r\n        items: [], // starts with no rows\r\n        grossTotal: 0,\r\n        gstTotal: 0,\r\n        roundOff: 0,\r\n        discount: 0,\r\n        cgst: 0,\r\n        sgst: 0,\r\n        igst: 0,\r\n        cessAmount: 0,\r\n        finalTotal: 0\r\n    });\r\n\r\n    const [showModal, setShowModal] = useState<boolean>(false);\r\n    const skipInitialCalc = useRef<boolean>(false);\r\n    const [editingItemData, setEditingItemData] = useState<PurchaseItem | null>(null);\r\n    const [modalData, setModalData] = useState<ModalData>({\r\n        id: null,\r\n        medicineId: 0,\r\n        itemCode: '',\r\n        medicineName: '',\r\n        type: '',\r\n        packItem: 0,\r\n        batchNo: '',\r\n        expiryDate: '',\r\n        qty: 1,\r\n        freeQty: 0,\r\n        purchaseRate: 0,\r\n        salesRate: 0,\r\n        gst: 0,\r\n        hsnCode: '',\r\n        mrp: 0,\r\n        rate: 0,\r\n        companyId: 0,        // ✅ ADD THIS\r\n        company: '',         // ✅ for display only\r\n        discountPercent: 0,\r\n        totalQty: 0,\r\n        totalFreeQty: 0,\r\n        currentStock: 0,\r\n        stripMrp: 0,\r\n        stripRate: 0\r\n    });\r\n    const [calculatedValues, setCalculatedValues] = useState<CalculatedValues>({\r\n        pRate: 0,\r\n        sRate: 0,\r\n        itemMrp: 0,\r\n        totalQty: 0,\r\n        totalFreeQty: 0,\r\n        amount: 0,\r\n        grossAmount: 0,\r\n        taxAmount: 0,\r\n        netAmount: 0\r\n    });\r\n\r\n    const closeModal = (): void => {\r\n        setShowModal(false);\r\n        setEditingItemData(null);\r\n        setModalData({\r\n            id: null,\r\n            medicineId: 0,\r\n            itemCode: '',\r\n            medicineName: '',\r\n            type: '',\r\n            packItem: 0,\r\n            batchNo: '',\r\n            expiryDate: '',\r\n            qty: 1,\r\n            freeQty: 0,\r\n            purchaseRate: 0,\r\n            salesRate: 0,\r\n            gst: 0,\r\n            hsnCode: '',\r\n            mrp: 0,\r\n            rate: 0,\r\n            companyId: 0,         // ✅ added this\r\n            company: '',          // ✅ display only\r\n            discountPercent: 0,\r\n            stripMrp: 0,\r\n            stripRate: 0\r\n        });\r\n\r\n\r\n        setCalculatedValues({\r\n            pRate: 0,\r\n            sRate: 0,\r\n            itemMrp: 0,\r\n            totalQty: 0,\r\n            totalFreeQty: 0,\r\n            amount: 0,\r\n            grossAmount: 0,\r\n            taxAmount: 0,\r\n            netAmount: 0\r\n        });\r\n        setMedicineSearches((prev: Record<string | number, string>) => {\r\n            const copy = { ...prev };\r\n            delete copy['modal'];\r\n            delete copy['modal-expiry'];\r\n            return copy;\r\n        });\r\n    };\r\n\r\n    const addItem = (): void => {\r\n        // Reset modal data for new item\r\n        setModalData({\r\n            id: null,\r\n            medicineId: 0,\r\n            itemCode: '',\r\n            medicineName: '',\r\n            type: '',\r\n            packItem: 0,\r\n            batchNo: '',\r\n            expiryDate: '',\r\n            qty: 1,\r\n            freeQty: 0,\r\n            purchaseRate: 0,\r\n            salesRate: 0,\r\n            gst: 0,\r\n            hsnCode: '',\r\n            mrp: 0,\r\n            rate: 0,\r\n            companyId: 0,         // ✅ Added this\r\n            company: '',          // ✅ Display only\r\n            discountPercent: 0,\r\n        });\r\n\r\n        setEditingItemData(null);\r\n        setShowModal(true);\r\n    };\r\n\r\n    const removeItem = async (item: { id: number }) => {\r\n        const confirmed = window.confirm(\"Are you sure you want to delete this item?\");\r\n        if (!confirmed) return;\r\n\r\n        try {\r\n            if (item.id > 0) {\r\n                // Soft-delete on backend\r\n                await API.delete(`/api/PurchaseItems/${item.id}`);\r\n            }\r\n\r\n            // Remove item locally by ID\r\n            setPurchaseBill(prev => ({\r\n                ...prev,\r\n                items: prev.items.filter(i => i.id !== item.id)\r\n            }));\r\n        } catch (error) {\r\n            console.error(\"Delete failed\", error);\r\n            alert(\"Failed to delete item.\");\r\n        }\r\n    };\r\n\r\n\r\n    const editItem = (item: PurchaseItem): void => {\r\n        skipInitialCalc.current = true; // 🛑 Prevent auto-calc once\r\n        setEditingItemData(item);\r\n\r\n        // Use actual stored values for MRP and Rate instead of calculated ones\r\n        const storedMrp = item.stripMrp !== undefined && item.stripMrp !== 0 ? item.stripMrp : (item.mrp || 0);\r\n        const storedRate = item.stripRate !== undefined && item.stripRate !== 0 ? item.stripRate : item.purchaseRate;\r\n\r\n        setModalData({\r\n            id: item.id,\r\n            medicineId: item.medicineId,\r\n            itemCode: item.itemCode,\r\n            medicineName: item.medicineName,\r\n            type: item.type,\r\n            packItem: item.packItem,\r\n            batchNo: item.batchNo,\r\n            expiryDate: item.expiryDate,\r\n            qty: item.qty,\r\n            freeQty: item.freeQty,\r\n            purchaseRate: item.purchaseRate,\r\n            salesRate: item.salesRate,\r\n            gst: item.gst,\r\n            hsnCode: item.hsnCode,\r\n            rate: storedRate,\r\n            mrp: storedMrp,\r\n            companyId: item.companyId || 0,\r\n            company: item.company || '',\r\n            discountPercent: item.discountPercent || 0\r\n        });\r\n\r\n        // ✅ Also prefill calculated values explicitly\r\n        setCalculatedValues({\r\n            pRate: item.purchaseRate || 0,\r\n            sRate: item.salesRate || 0,\r\n            itemMrp: item.mrp || 0,\r\n            totalQty: Number(item.qty) * Number(item.packItem),\r\n            totalFreeQty: Number(item.freeQty) * Number(item.packItem),\r\n            amount: item.totalAmount || 0,\r\n            grossAmount: item.baseAmount || 0,\r\n            taxAmount: item.gstAmount || 0,\r\n            netAmount: item.totalAmount || 0\r\n        });\r\n\r\n        setShowModal(true);\r\n    };\r\n\r\n    const calculateRates = (data: ModalData): void => {\r\n        const qty = Number(data.qty) || 0;\r\n        const freeQty = Number(data.freeQty) || 0;\r\n        const ratePerStrip = Number(data.rate) || 0;\r\n        const mrpPerStrip = Number(data.mrp) || 0;\r\n        const gst = Number(data.gst) || 0;\r\n        const packItem = Number(data.packItem) || 1;\r\n\r\n        const totalStrips = qty;\r\n        const totalFreeStrips = freeQty;\r\n\r\n        const totalQty = totalStrips * packItem;\r\n        const totalFreeQty = totalFreeStrips * packItem;\r\n\r\n        const totalMrp = totalStrips * mrpPerStrip;\r\n        const totalRate = totalStrips * ratePerStrip;\r\n\r\n        const grossAmount = totalRate;\r\n        const taxAmount = (grossAmount * gst) / 100;\r\n        const netAmount = grossAmount + taxAmount;\r\n\r\n        // MRP includes GST → Taxable = MRP * 100 / (100 + GST)\r\n        const taxablePrice = (totalMrp * 100) / (100 + gst);\r\n\r\n        const pRate = totalQty > 0 ? ratePerStrip / packItem : 0;        // Purchase rate per tablet\r\n        const sRate = totalQty > 0 ? taxablePrice / totalQty : 0;        // Selling rate per tablet\r\n        const itemMrp = totalQty > 0 ? mrpPerStrip / packItem : 0;       // MRP per tablet\r\n\r\n        setCalculatedValues({\r\n            pRate: +pRate.toFixed(2),\r\n            sRate: +sRate.toFixed(2),\r\n            itemMrp: +itemMrp.toFixed(2),\r\n            totalQty,\r\n            totalFreeQty,\r\n            amount: +netAmount.toFixed(2),\r\n            grossAmount: +grossAmount.toFixed(2),\r\n            taxAmount: +taxAmount.toFixed(2),\r\n            netAmount: +netAmount.toFixed(2),\r\n        });\r\n    };\r\n\r\n    const safeToFixed = (value: any, decimals: number = 2): string => {\r\n        const num = Number(value);\r\n        return !isNaN(num) ? num.toFixed(decimals) : (0).toFixed(decimals);\r\n    };\r\n\r\n    const handleModalExpiryChange = (input: string): void => {\r\n        const cleaned = input.replace(/[^\\d]/g, '');\r\n\r\n        let month = cleaned.slice(0, 2);\r\n        let year = cleaned.slice(2, 6);\r\n\r\n        if (month.length === 1 && parseInt(month) > 1) {\r\n            month = '0' + month;\r\n        }\r\n\r\n        const formattedInput = [month, year].filter(Boolean).join('-');\r\n\r\n        // Show formatted string in search box\r\n        setMedicineSearches((prev) => ({\r\n            ...prev,\r\n            'modal-expiry': formattedInput\r\n        }));\r\n\r\n        if (month.length === 2 && year.length === 4) {\r\n            const expiryDate = new Date(`${year}-${month}-01`);\r\n            const now = new Date();\r\n\r\n            // Set date to first of current month for comparison\r\n            const today = new Date(now.getFullYear(), now.getMonth(), 1);\r\n\r\n            if (expiryDate <= today) {\r\n                alert(\"Expiry date must be in the future (MM-YYYY).\");\r\n                return;\r\n            }\r\n\r\n            // Valid date — update modalData and clear search box\r\n            setModalData((prev) => ({\r\n                ...prev,\r\n                expiryDate: `${year}-${month}-01`\r\n            }));\r\n            setMedicineSearches((prev) => {\r\n                const copy = { ...prev };\r\n                delete copy['modal-expiry'];\r\n                return copy;\r\n            });\r\n        }\r\n    };\r\n\r\n    // const handleBatchBlur = async () => {\r\n    //     const batchNo = modalData.batchNo?.trim();\r\n    //     const medicineId = modalData.medicineId;\r\n\r\n    //     if (!batchNo || !medicineId) return;\r\n\r\n    //     try {\r\n    //         const res = await API.get<ModalData>(`/api/MedicineBatches/by-batch?medicineId=${medicineId}&batchNo=${batchNo}`);\r\n    //         const batch = res.data;\r\n\r\n    //         if (batch) {\r\n    //             setModalData(prev => ({\r\n    //                 ...prev,\r\n    //                 expiryDate: batch.expiryDate,\r\n    //                 mrp: batch.mrp,\r\n    //                 purchaseRate: batch.purchaseRate\r\n    //             }));\r\n\r\n    //             // Optional: Update input display for Expiry\r\n    //             const [year, month] = batch.expiryDate.split('-');\r\n    //             setMedicineSearches(prev => ({\r\n    //                 ...prev,\r\n    //                 'modal-expiry': `${month}-${year}`\r\n    //             }));\r\n    //         }\r\n    //     } catch (err) {\r\n    //         console.error(\"Batch not found or error fetching:\", err);\r\n    //         // Optional: Clear old values if batch not found\r\n    //     }\r\n    // };\r\n\r\n    useEffect(() => {\r\n        if (skipInitialCalc.current) {\r\n            skipInitialCalc.current = false; // 🧼 Skip *once* per edit\r\n            return;\r\n        }\r\n\r\n        if (modalData.medicineId) {\r\n            calculateRates(modalData);\r\n        }\r\n    }, [modalData.qty, modalData.freeQty, modalData.rate, modalData.mrp, modalData.gst]);\r\n\r\n    const [suppliers, setSuppliers] = useState<Supplier[]>([]);\r\n    const [medicines, setMedicines] = useState<Medicine[]>([]);\r\n    const [medicineSearches, setMedicineSearches] = useState<Record<string | number, string>>({});\r\n    const [editingItem, setEditingItem] = useState<number | null>(null);\r\n\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n\r\n    const searchParams = useSearchParams();\r\n    const editId = searchParams.get('edit');\r\n    const router = useRouter();\r\n\r\n    const isCancelled = purchaseBill.isCancelled === true;\r\n    const isFinalized = purchaseBill.finalTotal > 0; // Or use a separate status field like purchaseBill.status === 'finalized'\r\n    useEffect(() => {\r\n        const fetchPurchaseId = async () => {\r\n            try {\r\n                const res = await fetch(`${API_BASE}/api/PurchaseBills/purchase-id`);\r\n                if (!res.ok) throw new Error('Failed to fetch Purchase ID');\r\n\r\n                const newId = await res.json();\r\n                setPurchaseBill(prev => ({\r\n                    ...prev,\r\n                    purchaseId: newId\r\n                }));\r\n            } catch (error) {\r\n                console.error('Error fetching Purchase ID:', error);\r\n            }\r\n        };\r\n\r\n        if (!editId) {\r\n            fetchPurchaseId();\r\n        }\r\n    }, [editId]);\r\n\r\n    // Fetch suppliers from API\r\n    useEffect(() => {\r\n        const fetchSuppliers = async () => {\r\n            try {\r\n                const res = await fetch(`${API_BASE}/api/Suppliers`);\r\n                const data = await res.json();\r\n                setSuppliers(data);\r\n            } catch (error) {\r\n                console.error('Error fetching suppliers:', error);\r\n            }\r\n        };\r\n        fetchSuppliers();\r\n    }, []);\r\n\r\n    // Fetch medicines from API\r\n    useEffect(() => {\r\n        const fetchMedicines = async () => {\r\n            try {\r\n                const res = await fetch(`${API_BASE}/api/Medicines/dropdown`);\r\n                if (!res.ok) {\r\n                    throw new Error('Failed to fetch medicines');\r\n                }\r\n                const medicineData = await res.json();\r\n                setMedicines(medicineData);\r\n            } catch (error) {\r\n                console.error('Error fetching medicines:', error);\r\n            }\r\n        };\r\n        fetchMedicines();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const qty = Number(modalData.qty) || 0;\r\n        const freeQty = Number(modalData.freeQty) || 0;\r\n        const packItem = Number(modalData.packItem) || 0;\r\n\r\n        const totalQty = qty * packItem;\r\n        const totalFreeQty = freeQty * packItem;\r\n        const currentStock = (qty + freeQty) * packItem;\r\n\r\n        setModalData(prev => ({\r\n            ...prev,\r\n            totalQty,\r\n            totalFreeQty,\r\n            currentStock\r\n        }));\r\n    }, [modalData.qty, modalData.freeQty, modalData.packItem]);\r\n\r\n    useEffect(() => {\r\n        if (editingItemData && editingItemData.medicineName) {\r\n            setMedicineSearches((prev) => ({\r\n                ...prev,\r\n                modal: editingItemData.medicineName\r\n            }));\r\n        }\r\n    }, [editingItemData]);\r\n\r\n    //For fetching existing data\r\n    useEffect(() => {\r\n        async function fetchAndPrefillBill() {\r\n            try {\r\n                // Fetch dropdown data\r\n                const suppliersRes = await fetch(`${API_BASE}/api/Suppliers`);\r\n                const suppliersData = await suppliersRes.json();\r\n                setSuppliers(\r\n                    suppliersData.map((s: any) => ({\r\n                        id: s.id,\r\n                        name: s.name,\r\n                        address: s.address,\r\n                        location: s.location,\r\n                        gstNo: s.gstNo,\r\n                    }))\r\n                );\r\n\r\n                const medicinesRes = await fetch(`${API_BASE}/api/Medicines`);\r\n                const medicinesData = await medicinesRes.json();\r\n                setMedicines(\r\n                    medicinesData.map((m: any) => ({\r\n                        id: m.id,\r\n                        itemCode: m.itemCode,\r\n                        medicineName: m.medicineName,\r\n                        type: m.type,\r\n                        packItem: m.packItem,\r\n                        purchaseRate: m.purchaseRate,\r\n                        salesRate: m.salesRate,\r\n                        gst: m.gst,\r\n                        hsnCode: m.hsnCode,\r\n                        company: m.company || '',\r\n                    }))\r\n                );\r\n\r\n                if (editId) {\r\n                    setIsEditMode(true);\r\n                    const billRes = await fetch(`${API_BASE}/api/PurchaseBills/${editId}`);\r\n                    const data = await billRes.json();\r\n\r\n                    // ✅ Find supplier details\r\n                    const selectedSupplier = suppliersData.find(\r\n                        (s: any) => s.id === data.supplierId\r\n                    );\r\n\r\n                    // ✅ Enrich each item with medicine details\r\n                    const enrichedItems = data.items.map((item: any) => {\r\n                        const matchedMedicine = medicinesData.find(\r\n                            (m: any) => m.id === item.medicineId\r\n                        );\r\n                        return {\r\n                            ...item,\r\n                            itemCode: matchedMedicine?.itemCode ?? '',\r\n                            type: matchedMedicine?.type ?? '',\r\n                            packItem: matchedMedicine?.packItem ?? '',\r\n                            medicineName: matchedMedicine?.medicineName ?? '',\r\n                            company: matchedMedicine?.company ?? '', // Revert to companyName as before\r\n                            stripMrp: item.stripMrp ?? 0,\r\n                            stripRate: item.stripRate ?? 0,\r\n                        };\r\n                    });\r\n\r\n                    // ✅ Set complete bill with enriched data\r\n                    setPurchaseBill({\r\n                        purchaseId: data.purchaseId ?? 0,\r\n                        date: data.date?.split(\"T\")[0] ?? \"\",\r\n                        supplierId: data.supplierId ?? 0,\r\n                        supplierName: selectedSupplier?.name ?? \"\",\r\n                        supplierAddress: selectedSupplier?.address ?? \"\",\r\n                        supplierLocation: selectedSupplier?.location ?? \"\",\r\n                        gst: selectedSupplier?.gstNo ?? \"\",\r\n                        invoiceNo: data.invoiceNo ?? \"\",\r\n                        invoiceDate: data.invoiceDate?.split(\"T\")[0] ?? \"\",\r\n                        paymentType: data.paymentType ?? \"\",\r\n                        items: enrichedItems,\r\n                        grossTotal: data.grossTotal ?? 0,\r\n                        gstTotal: data.gstTotal ?? 0,\r\n                        roundOff: data.roundOff ?? 0,\r\n                        discount: data.discount ?? 0,\r\n                        cgst: data.cgst ?? 0,\r\n                        sgst: data.sgst ?? 0,\r\n                        igst: data.igst ?? 0,\r\n                        cessAmount: data.cessAmount ?? 0,\r\n                        finalTotal: data.finalTotal ?? 0,\r\n                        taxType: data.taxType ?? \"intra\",\r\n                        isCancelled: data.isCancelled ?? false,\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                console.error(\"Error while pre-filling:\", err);\r\n            }\r\n        }\r\n        fetchAndPrefillBill();\r\n    }, [editId]);\r\n\r\n    const isKeralaGST = (gstNo: string): boolean => gstNo?.slice(0, 2) === '32';\r\n\r\n    useEffect(() => {\r\n        const grossTotal = purchaseBill.items.reduce((sum, item) => sum + (item.baseAmount || 0), 0);\r\n        const gstTotal = purchaseBill.items.reduce((sum, item) => sum + (item.gstAmount || 0), 0);\r\n        const cgst = purchaseBill.items.reduce((sum, item) => sum + (item.cgstAmount || 0), 0);\r\n        const sgst = purchaseBill.items.reduce((sum, item) => sum + (item.sgstAmount || 0), 0);\r\n        const igst = purchaseBill.items.reduce((sum, item) => sum + (item.igstAmount || 0), 0);\r\n\r\n        const discount = purchaseBill.discount || 0;\r\n        const cessAmount = purchaseBill.cessAmount || 0;\r\n\r\n        const unroundedTotal = grossTotal + gstTotal - discount + cessAmount;\r\n        const roundedTotal = Math.round(unroundedTotal);\r\n        const roundOff = +(roundedTotal - unroundedTotal).toFixed(2);\r\n        const finalTotal = +(unroundedTotal + roundOff).toFixed(2);\r\n\r\n        setPurchaseBill(prev => ({\r\n            ...prev,\r\n            grossTotal: +grossTotal.toFixed(2),\r\n            gstTotal: +gstTotal.toFixed(2),\r\n            cgst: +cgst.toFixed(2),\r\n            sgst: +sgst.toFixed(2),\r\n            igst: +igst.toFixed(2),\r\n            roundOff,\r\n            finalTotal\r\n        }));\r\n    }, [purchaseBill.items, purchaseBill.discount, purchaseBill.cessAmount]);\r\n\r\n\r\n    const [nextTempId, setNextTempId] = useState(1);\r\n\r\n    const handleModalSave = (): void => {\r\n        if (!modalData.medicineId || !modalData.batchNo || !modalData.expiryDate) {\r\n            alert('Please fill all required fields');\r\n            return;\r\n        }\r\n\r\n        const isEditing = editingItemData !== null;\r\n\r\n        const itemData: PurchaseItem = {\r\n            id: isEditing ? editingItemData!.id : null, // null for new items\r\n            tempId: isEditing ? editingItemData!.tempId : nextTempId,\r\n            medicineId: modalData.medicineId,\r\n            itemCode: modalData.itemCode,\r\n            medicineName: modalData.medicineName,\r\n            type: modalData.type,\r\n            packItem: modalData.packItem,\r\n            batchNo: modalData.batchNo,\r\n            expiryDate: modalData.expiryDate,\r\n            qty: modalData.qty,\r\n            freeQty: modalData.freeQty,\r\n            purchaseRate: calculatedValues.pRate,\r\n            salesRate: calculatedValues.sRate,\r\n            gst: modalData.gst,\r\n            hsnCode: modalData.hsnCode,\r\n            mrp: calculatedValues.itemMrp,\r\n            stripMrp: modalData.mrp,\r\n            stripRate: modalData.rate,\r\n            discountPercent: modalData.discountPercent || 0,\r\n            baseAmount: calculatedValues.grossAmount,\r\n            gstAmount: calculatedValues.taxAmount,\r\n            cgstAmount: purchaseBill.taxType === 'intra' ? calculatedValues.taxAmount / 2 : 0,\r\n            sgstAmount: purchaseBill.taxType === 'intra' ? calculatedValues.taxAmount / 2 : 0,\r\n            igstAmount: purchaseBill.taxType === 'inter' ? calculatedValues.taxAmount : 0,\r\n            totalAmount: calculatedValues.netAmount,\r\n            company: modalData.company,\r\n            totalQty: modalData.qty * modalData.packItem,\r\n            totalFreeQty: modalData.freeQty * modalData.packItem,\r\n            currentStock: (modalData.qty + modalData.freeQty) * modalData.packItem,\r\n        };\r\n\r\n        setPurchaseBill(prev => {\r\n            const updatedItems = isEditing\r\n                ? prev.items.map(item => item.tempId === editingItemData!.tempId ? itemData : item)\r\n                : [...prev.items, itemData];\r\n\r\n            return { ...prev, items: updatedItems };\r\n        });\r\n\r\n        if (!isEditing) setNextTempId(prev => prev + 1);\r\n\r\n        closeModal();\r\n    };\r\n\r\n    const savePurchaseBill = async () => {\r\n        try {\r\n            // ---------------- CALCULATE TOTALS ----------------\r\n            const grossTotal = purchaseBill.items.reduce((sum, item) => sum + (item.baseAmount || 0), 0);\r\n            const gstTotal = purchaseBill.items.reduce((sum, item) => sum + (item.gstAmount || 0), 0);\r\n            const discount = purchaseBill.discount || 0;\r\n            const cessAmount = purchaseBill.cessAmount || 0;\r\n\r\n            const actualTotal = grossTotal + gstTotal - discount + cessAmount;\r\n            const roundedTotal = Math.round(actualTotal);\r\n            const roundOff = +(roundedTotal - actualTotal).toFixed(2);\r\n            const finalTotal = +(actualTotal + roundOff).toFixed(2);\r\n\r\n            // ---------------- BUILD UPDATED BILL ----------------\r\n            const updatedBill = {\r\n                ...purchaseBill,\r\n                grossTotal: +grossTotal.toFixed(2),\r\n                gstTotal: +gstTotal.toFixed(2),\r\n                discount,\r\n                cessAmount,\r\n                roundOff,\r\n                finalTotal\r\n            };\r\n\r\n            // ---------------- MAP STRINGS TO NUMBERS ----------------\r\n            const paymentTypeMap: Record<string, number> = { Cash: 0, Credit: 1, Online: 2 };\r\n            const taxTypeMap: Record<string, number> = { Intra: 0, Inter: 1 };\r\n            \r\n            // ---------------- BUILD PAYLOAD ----------------\r\n            const payload = {\r\n                ...updatedBill,\r\n\r\n                // ✅ Only include purchaseId if this is an existing bill (PUT)\r\n                purchaseId: updatedBill.purchaseId && updatedBill.purchaseId > 0 ? updatedBill.purchaseId : undefined,\r\n\r\n                // ✅ Map enums correctly\r\n                paymentType: paymentTypeMap[updatedBill.paymentType ?? 'Credit'] ?? 0,\r\n                taxType: taxTypeMap[updatedBill.taxType?.toLowerCase() ?? 'intra'] ?? 0, // ensure lower-case matches map keys\r\n\r\n                // ✅ Map items\r\n                items: updatedBill.items.map(item => ({\r\n                    // ❌ id should be undefined for new items so EF Core treats them as new\r\n                    id: item.id && item.id > 0 ? item.id : undefined,\r\n                    medicineId: item.medicineId,\r\n                    batchNo: item.batchNo,\r\n                    expiryDate: item.expiryDate,\r\n                    qty: item.qty,\r\n                    freeQty: item.freeQty,\r\n                    packItem: item.packItem ?? 0,        // Include missing fields\r\n                    stripMrp: item.stripMrp ?? 0,\r\n                    stripRate: item.stripRate ?? 0,\r\n                    purchaseRate: item.purchaseRate,\r\n                    salesRate: item.salesRate,\r\n                    gst: item.gst,\r\n                    hsnCode: item.hsnCode,\r\n                    baseAmount: item.baseAmount || 0,\r\n                    gstAmount: item.gstAmount || 0,\r\n                    cgstAmount: item.cgstAmount || 0,\r\n                    sgstAmount: item.sgstAmount || 0,\r\n                    igstAmount: item.igstAmount || 0,\r\n                    mrp: item.mrp || 0,\r\n                    discountPercent: item.discountPercent || 0,\r\n                    discountAmount: item.discountAmount || 0,\r\n                    totalAmount: item.totalAmount || 0\r\n                }))\r\n            };\r\n\r\n            console.log(\"Payload for saving:\", payload);\r\n\r\n            // ---------------- SEND REQUEST ----------------\r\n            let response: { data: { purchaseId: number } };\r\n\r\n            if (editId) {\r\n                // Existing bill → PUT\r\n                response = await API.put(`/api/PurchaseBills/${editId}`, payload);\r\n            } else {\r\n                // New bill → POST\r\n                response = await API.post(\"/api/PurchaseBills\", payload);\r\n                // Update state with backend-generated PurchaseId\r\n                setPurchaseBill(prev => ({\r\n                    ...prev,\r\n                    purchaseId: response.data.purchaseId\r\n                }));\r\n            }\r\n\r\n            toast.success(\"Purchase bill saved successfully!\");\r\n            setTimeout(() => setSuccessMessage(\"\"), 5000);\r\n            setTimeout(() => router.push(\"/Purchasebill\"), 600);\r\n\r\n        } catch (error: any) {\r\n            const detail = error?.response?.data ?? error.message;\r\n            console.error(\"❌ Failed to save purchase bill:\", detail);\r\n            toast.error(`Failed to save: ${detail}`);\r\n        }\r\n    };\r\n\r\n    const cancelPurchaseBill = async () => {\r\n        const confirmed = window.confirm('Are you sure you want to cancel this bill?');\r\n        if (!confirmed) return;\r\n\r\n        try {\r\n            const res = await fetch(`${API_BASE}/api/PurchaseBills/${purchaseBill.purchaseId}/cancel`, {\r\n                method: 'PUT'\r\n            });\r\n\r\n            if (!res.ok) throw new Error('Failed to cancel bill');\r\n\r\n            setPurchaseBill(prev => ({\r\n                ...prev,\r\n                isCancelled: true,\r\n                items: prev.items.map(item => ({\r\n                    ...item,\r\n                    medicineName: `[CANCELLED] ${item.medicineName}`\r\n                }))\r\n            }));\r\n\r\n            alert('Purchase bill marked as CANCELLED!');\r\n            setTimeout(() => router.push('/Purchasebill'), 600);\r\n        } catch (error) {\r\n            console.error('Error cancelling bill:', error);\r\n            alert('Failed to cancel purchase bill.');\r\n        }\r\n    };\r\n\r\n\r\n    const formatExpiry = (value: string) => {\r\n        if (!value) return '';\r\n        const [year, month] = value.split('-');\r\n        return `${month}-${year}`;\r\n    };\r\n\r\n    const medicineDropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event: MouseEvent) => {\r\n            if (medicineDropdownRef.current && !medicineDropdownRef.current.contains(event.target as Node)) {\r\n                setEditingItem(null);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    }, []);\r\n\r\n    const filteredMedicines = medicines.filter((m) => {\r\n        const query = medicineSearches.modal?.toLowerCase() || '';\r\n        return (\r\n            // m.itemCode.toLowerCase().startsWith(query) ||\r\n            m.medicineName.toLowerCase().startsWith(query)\r\n        );\r\n    });\r\n    const selectMedicine = (selected: Medicine) => {\r\n        setModalData((prev) => ({\r\n            ...prev,\r\n            medicineId: selected.id,\r\n            itemCode: selected.itemCode,\r\n            medicineName: selected.medicineName,\r\n            type: selected.type,\r\n            packItem: selected.packItem,\r\n            gst: selected.gst,\r\n            hsnCode: selected.hsnCode,\r\n            company: selected.company || '',\r\n            discountPercent: 0\r\n        }));\r\n        setMedicineSearches((prev) => ({ ...prev, modal: `${selected.itemCode} - ${selected.medicineName}` }));\r\n        setEditingItem(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-blue-100\">\r\n            {/* Header */}\r\n            <div className=\"bg-gradient-to-r from-blue-600 to-blue-800 text-white p-4 sm:p-6 shadow-lg\">\r\n                <h1 className=\"text-4xl font-light mb-3 text-center\">Purchase Bill</h1>\r\n            </div>\r\n\r\n            {/* Form Section */}\r\n            <div className=\"p-2 sm:p-3 lg:p-4 bg-white\">\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                    {/* Left Side */}\r\n                    <div className=\"space-y-3\">\r\n                        <div className=\"grid grid-cols-1 sm:grid-cols-12 gap-2 items-end\">\r\n                            {/* Purchase ID */}\r\n                            <div className=\"sm:col-span-2\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Pur ID</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"purchaseId\"\r\n                                    value={purchaseBill.purchaseId ?? \"\"}\r\n                                    readOnly\r\n                                    className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md bg-blue-50 text-blue-900 font-medium focus:outline-none\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Date */}\r\n                            <div className=\"sm:col-span-3\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Date</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    value={purchaseBill.date}\r\n                                    onChange={(e) =>\r\n                                        setPurchaseBill((prev) => ({ ...prev, date: e.target.value }))\r\n                                    }\r\n                                    className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Supplier - Takes the rest */}\r\n                            <div className=\"col-span-12 sm:col-span-7\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Supplier</label>\r\n                                <div className=\"flex items-center\">\r\n                                    <SearchableSelect\r\n                                        label=\"\"\r\n                                        value={purchaseBill.supplierId.toString()}\r\n                                        searchValue={medicineSearches['supplier'] || ''}\r\n                                        setSearchValue={(val) => setMedicineSearches(prev => ({ ...prev, supplier: val }))}\r\n                                        showDropdown={editingItem === -1}\r\n                                        setShowDropdown={(open) => setEditingItem(open ? -1 : null)}\r\n                                        items={suppliers\r\n                                            .filter((s) => {\r\n                                                const query = medicineSearches['supplier']?.toLowerCase() || '';\r\n                                                const firstName = s.name.split(' ')[0].toLowerCase();\r\n                                                return (\r\n                                                    s.id.toString().includes(query) ||\r\n                                                    firstName.startsWith(query)\r\n                                                );\r\n                                            })\r\n                                            .map((s) => ({\r\n                                                id: s.id.toString(),\r\n                                                name: `${s.id} - ${s.name}`\r\n                                            }))}\r\n                                        onSelect={(id) => {\r\n                                            const selectedSupplier = suppliers.find(s => s.id.toString() === id);\r\n                                            if (selectedSupplier) {\r\n                                                const isKerala = isKeralaGST(selectedSupplier.gstNo);\r\n                                                const updatedItems = purchaseBill.items.map(item => {\r\n                                                    const baseBeforeDiscount = item.qty * item.purchaseRate;\r\n                                                    const discountAmount = (baseBeforeDiscount * (item.discountPercent || 0)) / 100;\r\n                                                    const baseAmount = baseBeforeDiscount - discountAmount;\r\n                                                    const gstAmount = (baseAmount * item.gst) / 100;\r\n                                                    let cgstAmount = 0, sgstAmount = 0, igstAmount = 0;\r\n                                                    if (isKerala) {\r\n                                                        cgstAmount = gstAmount / 2;\r\n                                                        sgstAmount = gstAmount / 2;\r\n                                                    } else {\r\n                                                        igstAmount = gstAmount;\r\n                                                    }\r\n\r\n                                                    return {\r\n                                                        ...item,\r\n                                                        baseAmount,\r\n                                                        gstAmount,\r\n                                                        cgstAmount,\r\n                                                        sgstAmount,\r\n                                                        igstAmount,\r\n                                                        amount: baseAmount + gstAmount,\r\n                                                    };\r\n                                                });\r\n\r\n                                                const gstTotal = updatedItems.reduce((sum, i) => sum + (i.gstAmount || 0), 0);\r\n                                                const cgst = updatedItems.reduce((sum, i) => sum + (i.cgstAmount || 0), 0);\r\n                                                const sgst = updatedItems.reduce((sum, i) => sum + (i.sgstAmount || 0), 0);\r\n                                                const igst = updatedItems.reduce((sum, i) => sum + (i.igstAmount || 0), 0);\r\n\r\n                                                setPurchaseBill(prev => ({\r\n                                                    ...prev,\r\n                                                    supplierId: selectedSupplier.id,\r\n                                                    supplierName: selectedSupplier.name,\r\n                                                    supplierAddress: selectedSupplier.address,\r\n                                                    supplierLocation: selectedSupplier.location,\r\n                                                    gst: selectedSupplier.gstNo,\r\n                                                    taxType: isKerala ? 'intra' : 'inter',\r\n                                                    items: updatedItems,\r\n                                                    gstTotal,\r\n                                                    cgst,\r\n                                                    sgst,\r\n                                                    igst,\r\n                                                }));\r\n\r\n                                                setMedicineSearches(prev => ({ ...prev, supplier: '' }));\r\n                                            }\r\n                                        }}\r\n                                        renderItem={(item) => (\r\n                                            <div className=\"text-xs font-medium text-gray-700\">\r\n                                                {item.name}\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex flex-col sm:flex-row gap-2\">\r\n\r\n                            {/* Supplier Address */}\r\n                            <div className=\"w-full sm:w-1/2\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={purchaseBill.supplierAddress}\r\n                                    readOnly\r\n                                    className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md bg-blue-50 text-blue-900\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Supplier Location */}\r\n                            <div className=\"w-full sm:w-1/2\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Location</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={purchaseBill.supplierLocation || \"\"}\r\n                                    readOnly\r\n                                    className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md bg-blue-50 text-blue-900\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Right Side */}\r\n                    <div className=\"space-y-3\">\r\n\r\n                        <div className=\"flex flex-col sm:flex-row gap-2\">\r\n                            {/* Invoice No - 60% */}\r\n                            <div className=\"w-full sm:w-3/5\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Inv No</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={purchaseBill.invoiceNo}\r\n                                    onChange={(e) => setPurchaseBill(prev => ({ ...prev, invoiceNo: e.target.value }))}\r\n                                    required\r\n                                    className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Invoice Date - 40% */}\r\n                            <div className=\"w-full sm:w-2/5\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Inv Date</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    value={purchaseBill.invoiceDate}\r\n                                    onChange={(e) => setPurchaseBill(prev => ({ ...prev, invoiceDate: e.target.value }))}\r\n                                    required\r\n                                    className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex flex-col sm:flex-row gap-2\">\r\n                            {/* GST IN - 60% */}\r\n                            <div className=\"w-full sm:w-3/5\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">GST IN</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={purchaseBill.gst}\r\n                                    readOnly\r\n                                    className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md bg-blue-50 text-blue-900\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Payment Type - 40% */}\r\n                            <div className=\"w-full sm:w-2/5\">\r\n                                <label className=\"block text-xs font-semibold text-blue-900 mb-1\">Payment</label>\r\n                                <select\r\n                                    value={purchaseBill.paymentType}\r\n                                    onChange={(e) => setPurchaseBill(prev => ({ ...prev, paymentType: e.target.value }))}\r\n                                    className=\"w-full px-2 py-1.5 text-sm border border-blue-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                >\r\n                                    <option value=\"Credit\">Credit</option>\r\n                                    <option value=\"Cash\">Cash</option>\r\n                                    <option value=\"Other\">Other</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Items Section */}\r\n            <div className=\"p-3 sm:p-4 lg:p-6 bg-gradient-to-r from-blue-50 to-blue-100\">\r\n                <div className=\"flex flex-col sm:flex-row justify-between items-center mb-4\">\r\n                    <h2 className=\"text-xl sm:text-2xl font-bold text-blue-900 mb-2 sm:mb-0\">Items</h2>\r\n                    <button\r\n                        onClick={addItem}\r\n                        className=\"bg-gradient-to-r from-blue-600 to-blue-800 text-white px-4 py-2 rounded-lg hover:from-blue-700 hover:to-blue-900 flex items-center gap-2 font-medium shadow-lg transition-all duration-300\"\r\n                    >\r\n                        <Plus size={16} /> Add Item\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Items Table */}\r\n                <div className=\"bg-white rounded-lg shadow-lg relative z-10\">\r\n                    <div className=\"w-full overflow-x-auto\">\r\n                        <table className=\"min-w-[800px] w-full border border-blue-300 text-xs sm:text-sm\">\r\n                            <thead className=\"bg-gradient-to-r from-blue-600 to-blue-800 text-white\">\r\n                                <tr>\r\n                                    <th className=\"px-2 py-3 text-left text-xs sm:text-sm font-medium border-r border-blue-500\">Item Code</th>\r\n                                    <th className=\"w-90 px-2 py-3 text-left text-xs sm:text-sm font-medium border-r border-blue-500\">Medicine</th>\r\n                                    <th className=\"px-2 py-3 text-left text-xs sm:text-sm font-medium border-r border-blue-500\">Batch</th>\r\n                                    <th className=\"px-2 py-3 text-left text-xs sm:text-sm font-medium border-r border-blue-500\">Expiry</th>\r\n                                    <th className=\"px-2 py-3 text-center text-xs sm:text-sm font-medium border-r border-blue-500\">Qty</th>\r\n                                    <th className=\"px-2 py-3 text-center text-xs sm:text-sm font-medium border-r border-blue-500\">Free</th>\r\n                                    <th className=\"px-2 py-3 text-center text-xs sm:text-sm font-medium border-r border-blue-500\">P.Rate</th>\r\n                                    <th className=\"px-2 py-3 text-center text-xs sm:text-sm font-medium border-r border-blue-500\">S.Rate</th>\r\n                                    <th className=\"px-2 py-3 text-center text-xs sm:text-sm font-medium border-r border-blue-500\">GST%</th>\r\n                                    <th className=\"px-2 py-3 text-center text-xs sm:text-sm font-medium border-r border-blue-500\">Amount</th>\r\n                                    <th className=\"px-2 py-3 text-center text-xs sm:text-sm font-medium border-r border-blue-500\">HSN</th>\r\n                                    <th className=\"px-2 py-3 text-center text-xs sm:text-sm font-medium\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {purchaseBill.items.map((item, index) => (\r\n                                    <tr\r\n                                        key={item.tempId ?? item.id}   // ✅ this fixes NaN key error\r\n                                        className={`${index % 2 === 0 ? 'bg-blue-50' : 'bg-white'} hover:bg-blue-100 transition-colors duration-200`}\r\n                                    >\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 text-xs sm:text-sm font-medium\">\r\n                                            {item.itemCode}\r\n                                        </td>\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 text-xs sm:text-sm\">\r\n                                            {item.medicineName}\r\n                                        </td>\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 text-xs sm:text-sm\">\r\n                                            {item.batchNo}\r\n                                        </td>\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 text-xs sm:text-sm\">\r\n                                            {formatExpiry(item.expiryDate)}\r\n                                        </td>\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 text-xs sm:text-sm text-center\">\r\n                                            {item.qty}\r\n                                        </td>\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 text-xs sm:text-sm text-center\">\r\n                                            {item.freeQty}\r\n                                        </td>\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 text-xs sm:text-sm text-center\">\r\n                                            ₹{safeToFixed(item.purchaseRate)}\r\n                                        </td>\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 text-xs sm:text-sm text-center\">\r\n                                            ₹{Number(item.salesRate || 0).toFixed(2)}\r\n                                        </td>\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 text-xs sm:text-sm text-center\">\r\n                                            {item.gst}%\r\n                                        </td>\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 text-xs sm:text-sm text-center font-bold text-green-700\">\r\n                                            ₹{Number(item.totalAmount || 0).toFixed(2)}\r\n                                        </td>\r\n                                        <td className=\"px-2 py-2 border-r border-blue-200 text-xs sm:text-sm text-center\">\r\n                                            {item.hsnCode}\r\n                                        </td>\r\n                                        <td className=\"px-2 py-2 text-center\">\r\n                                            <div className=\"flex gap-1 justify-center\">\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    onClick={() => editItem(item)}\r\n                                                    className=\"text-blue-600 hover:text-blue-800 transition\"\r\n                                                    title=\"Edit item\"\r\n                                                >\r\n                                                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                                                    </svg>\r\n                                                </button>\r\n                                                {item.id !== null && (\r\n                                                    <button\r\n                                                        type=\"button\"\r\n                                                        onClick={() => removeItem({ id: item.id! })} // Safe here\r\n                                                        className=\"text-red-600 hover:text-red-800 transition\"\r\n                                                        title=\"Delete item\"\r\n                                                    >\r\n                                                        <Trash2 className=\"w-4 h-4\" />\r\n                                                    </button>\r\n                                                )}\r\n                                            </div>\r\n                                        </td>\r\n                                        {/* Hidden fields for backend calculations */}\r\n                                        <td className=\"hidden\">\r\n                                            <input\r\n                                                type=\"hidden\"\r\n                                                value={(item.qty * item.purchaseRate).toFixed(2)} // base amount\r\n                                                onChange={() => { }} // no-op\r\n                                                name={`item-${item.id}-baseAmount`}\r\n                                            />\r\n                                            <input\r\n                                                type=\"hidden\"\r\n                                                value={((item.qty * item.purchaseRate * item.gst) / 100).toFixed(2)} // gst amount\r\n                                                onChange={() => { }}\r\n                                                name={`item-${item.id}-gstAmount`}\r\n                                            />\r\n                                            <input\r\n                                                type=\"hidden\"\r\n                                                value={(((item.qty * item.purchaseRate * item.gst) / 2) / 100).toFixed(2)} // cgst\r\n                                                onChange={() => { }}\r\n                                                name={`item-${item.id}-cgstAmount`}\r\n                                            />\r\n                                            <input\r\n                                                type=\"hidden\"\r\n                                                value={(((item.qty * item.purchaseRate * item.gst) / 2) / 100).toFixed(2)} // sgst\r\n                                                onChange={() => { }}\r\n                                                name={`item-${item.id}-sgstAmount`}\r\n                                            />\r\n                                            <input\r\n                                                type=\"hidden\"\r\n                                                value={(0).toFixed(2)} // igst — modify logic if inter-state\r\n                                                onChange={() => { }}\r\n                                                name={`item-${item.id}-igstAmount`}\r\n                                            />\r\n                                            <input\r\n                                                type=\"hidden\"\r\n                                                value={item.totalQty || 0}\r\n                                                name={`item-${item.id}-totalQty`}\r\n                                                onChange={() => { }}\r\n                                            />\r\n                                            <input\r\n                                                type=\"hidden\"\r\n                                                value={item.totalFreeQty || 0}\r\n                                                name={`item-${item.id}-totalFreeQty`}\r\n                                                onChange={() => { }}\r\n                                            />\r\n                                            <input\r\n                                                type=\"hidden\"\r\n                                                value={item.currentStock || 0}\r\n                                                name={`item-${item.id}-currentStock`}\r\n                                                onChange={() => { }}\r\n                                            />\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                ))}\r\n                                {purchaseBill.items.length === 0 && (\r\n                                    <tr>\r\n                                        <td colSpan={16} className=\"text-center py-6 text-gray-500 italic\">\r\n                                            No items added yet. Click \"Add Item\" to begin.\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Modal */}\r\n            {showModal && (\r\n                <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n                    <div className=\"bg-white rounded-lg shadow-2xl w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n                        {/* Modal Header */}\r\n                        <div className=\"bg-gradient-to-r from-blue-600 to-blue-800 text-white p-3 rounded-t-lg\">\r\n                            <div className=\"flex justify-between items-center\">\r\n                                <h3 className=\"text-lg font-semibold\">\r\n                                    {editingItemData ? 'Edit Item' : 'Add New Item'}\r\n                                </h3>\r\n                                <button\r\n                                    onClick={closeModal}\r\n                                    className=\"text-white hover:text-gray-200 transition-colors\"\r\n                                >\r\n                                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                                    </svg>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Modal Body */}\r\n                        <div className=\"p-5\">\r\n                            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                                {/* Left Side - Input Fields */}\r\n                                <div className=\"flex justify-start\">\r\n                                    <div className=\"space-y-3 w-full max-w-xs\">\r\n\r\n                                        {/* Medicine Dropdown */}\r\n                                        <div className=\"space-y-2\">\r\n                                            <label className=\"block text-xs font-medium text-gray-700\">Item Code</label>\r\n                                            <div className=\"relative\" ref={medicineDropdownRef}>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Search medicine\"\r\n                                                    value={medicineSearches.modal || ''}\r\n                                                    onChange={(e) =>\r\n                                                        setMedicineSearches((prev) => ({ ...prev, modal: e.target.value }))\r\n                                                    }\r\n                                                    onFocus={() => setEditingItem(-999)}\r\n                                                    onKeyDown={(e) => {\r\n                                                        const top = filteredMedicines[0];\r\n                                                        if (e.key === 'Enter' && top) {\r\n                                                            selectMedicine(top);\r\n                                                            e.preventDefault();\r\n                                                        }\r\n                                                    }}\r\n                                                    className=\"w-full border border-gray-300 rounded px-3 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                                />\r\n\r\n                                                {editingItem === -999 && (\r\n                                                    <div className=\"absolute z-10 mt-1 w-full bg-white border border-gray-300 rounded shadow max-h-48 overflow-y-auto\">\r\n                                                        {filteredMedicines.length > 0 ? (\r\n                                                            filteredMedicines.map((m) => (\r\n                                                                <div\r\n                                                                    key={m.id}\r\n                                                                    className=\"px-3 py-2 hover:bg-blue-100 text-sm cursor-pointer\"\r\n                                                                    onMouseDown={() => selectMedicine(m)} // ✅ mouse down happens before blur\r\n                                                                >\r\n                                                                    {m.itemCode} - {m.medicineName}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : (\r\n                                                            <div className=\"px-3 py-2 text-sm text-gray-500\">No results found</div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* Company & HSN Code */}\r\n                                        <div className=\"grid grid-cols-2 gap-2\">\r\n                                            <div>\r\n                                                <label className=\"block text-xs font-medium text-gray-700 mb-1\">Company</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={modalData.company || ''}\r\n                                                    readOnly\r\n                                                    className=\"w-full px-2 py-1.5 text-xs border border-gray-300 rounded bg-gray-50 text-gray-700\"\r\n                                                />\r\n                                            </div>\r\n                                            <div>\r\n                                                <label className=\"block text-xs font-medium text-gray-700 mb-1\">HSN Code</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={modalData.hsnCode}\r\n                                                    readOnly\r\n                                                    className=\"w-full px-2 py-1.5 text-xs border border-gray-300 rounded bg-gray-50 text-gray-700\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* Batch & Exp Date */}\r\n                                        <div className=\"grid grid-cols-2 gap-2\">\r\n                                            <div>\r\n                                                <label className=\"block text-xs font-medium text-gray-700 mb-1\">Batch</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={modalData.batchNo}\r\n                                                    onChange={(e) => setModalData(prev => ({ ...prev, batchNo: e.target.value }))}\r\n                                                    // onBlur={handleBatchBlur}\r\n                                                    className=\"w-full px-2 py-1.5 text-xs border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\r\n                                                    placeholder=\"Batch No\"\r\n                                                // onKeyDown={(e) => {\r\n                                                //     if (e.key === 'Enter') {\r\n                                                //         handleBatchBlur();\r\n                                                //     }\r\n                                                // }}\r\n                                                />\r\n                                            </div>\r\n                                            <div>\r\n                                                <label className=\"block text-xs font-medium text-gray-700 mb-1\">Exp Date</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"MM-YYYY\"\r\n                                                    value={medicineSearches[`modal-expiry`] || formatExpiry(modalData.expiryDate)}\r\n                                                    onChange={(e) => handleModalExpiryChange(e.target.value)}\r\n                                                    className=\"w-full px-2 py-1.5 text-xs border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-center\"\r\n                                                    maxLength={7}\r\n                                                    inputMode=\"numeric\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* Pur Qty, Free, Pack Item */}\r\n                                        <div className=\"grid grid-cols-3 gap-2\">\r\n                                            <div>\r\n                                                <label className=\"block text-xs font-medium text-gray-700 mb-1\">Pur Qty</label>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    value={modalData.qty || ''}\r\n                                                    onChange={(e) => {\r\n                                                        const qty = parseFloat(e.target.value) || 0;\r\n                                                        setModalData(prev => ({ ...prev, qty }));\r\n                                                        calculateRates({ ...modalData, qty });\r\n                                                    }}\r\n                                                    className=\"w-20 px-2 py-1.5 text-xs border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-center\"\r\n                                                    placeholder=\"0\"\r\n                                                />\r\n                                            </div>\r\n                                            <div>\r\n                                                <label className=\"block text-xs font-medium text-gray-700 mb-1\">Free</label>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    value={modalData.freeQty || ''}\r\n                                                    onChange={(e) => {\r\n                                                        const freeQty = parseFloat(e.target.value) || 0;\r\n                                                        setModalData(prev => ({ ...prev, freeQty }));\r\n                                                        calculateRates({ ...modalData, freeQty });\r\n                                                    }}\r\n                                                    className=\"w-20 px-2 py-1.5 text-xs border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-center\"\r\n                                                    placeholder=\"0\"\r\n                                                />\r\n                                            </div>\r\n                                            <div>\r\n                                                <label className=\"block text-xs font-medium text-gray-700 mb-1\">Pack Item</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={modalData.packItem}\r\n                                                    readOnly\r\n                                                    className=\"w-20 px-2 py-1.5 text-xs border border-gray-300 rounded bg-gray-50 text-gray-700 text-center\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* MRP & Rate */}\r\n                                        <div className=\"grid grid-cols-2 gap-2\">\r\n                                            <div>\r\n                                                <label className=\"block text-xs font-medium text-gray-700 mb-1\">MRP</label>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    step=\"0.01\"\r\n                                                    value={modalData.mrp || ''}\r\n                                                    onChange={(e) => {\r\n                                                        const mrp = parseFloat(e.target.value) || 0;\r\n                                                        setModalData(prev => ({ ...prev, mrp }));\r\n                                                        calculateRates({ ...modalData, mrp });\r\n                                                    }}\r\n                                                    className=\"w-25 px-2 py-1.5 text-xs border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\r\n                                                    placeholder=\"0.00\"\r\n                                                />\r\n                                            </div>\r\n                                            <div>\r\n                                                <label className=\"block text-xs font-medium text-gray-700 mb-1\">Rate</label>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    step=\"0.01\"\r\n                                                    value={modalData.rate || ''}\r\n                                                    onChange={(e) => {\r\n                                                        const rate = parseFloat(e.target.value) || 0;\r\n                                                        setModalData(prev => ({ ...prev, rate }));\r\n                                                        calculateRates({ ...modalData, rate });\r\n                                                    }}\r\n                                                    className=\"w-25 px-2 py-1.5 text-xs border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\r\n                                                    placeholder=\"0.00\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Right Side - Calculated Values */}\r\n                                <div className=\"flex justify-end\">\r\n                                    <div className=\"space-y-3 w-full max-w-xs\">\r\n\r\n                                        {/* P.Rate & S.Rate */}\r\n                                        <div className=\"grid grid-cols-2 gap-2\">\r\n                                            <div>\r\n                                                <label className=\"block text-xs font-medium text-gray-700 mb-1\">P. Rate</label>\r\n                                                <div className=\"w-33 px-2 py-1.5 text-xs border border-gray-300 rounded bg-blue-50 text-blue-900 font-medium\">\r\n                                                    {Number(calculatedValues.pRate || 0).toFixed(2)}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <label className=\"block text-xs font-medium text-gray-700 mb-1\">S. Rate</label>\r\n                                                <div className=\"w-33 px-2 py-1.5 text-xs border border-gray-300 rounded bg-blue-50 text-blue-900 font-medium\">\r\n                                                    {Number(calculatedValues.sRate || 0).toFixed(2)}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* Item MRP & GST */}\r\n                                        <div className=\"grid grid-cols-2 gap-2\">\r\n                                            <div>\r\n                                                <label className=\"block text-xs font-medium text-gray-700 mb-1\">Item MRP</label>\r\n                                                <div className=\"w-33 px-2 py-1.5 text-xs border border-gray-300 rounded bg-blue-50 text-blue-900 font-medium\">\r\n                                                    {(calculatedValues.itemMrp || 0).toFixed(2)}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <label className=\"block text-xs font-medium text-gray-700 mb-1\">GST</label>\r\n                                                <div className=\"w-33 px-2 py-1.5 text-xs border border-gray-300 rounded bg-blue-50 text-blue-900 font-medium\">\r\n                                                    {modalData.gst}%\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* Qty & Free Qty */}\r\n                                        <div className=\"grid grid-cols-2 gap-2\">\r\n                                            <div>\r\n                                                <label className=\"block text-xs font-medium text-gray-700 mb-1\">Qty</label>\r\n                                                <div className=\"w-33 px-2 py-1.5 text-xs border border-gray-300 rounded bg-green-50 text-green-900 font-medium\">\r\n                                                    {calculatedValues.totalQty}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <label className=\"block text-xs font-medium text-gray-700 mb-1\">Free Qty</label>\r\n                                                <div className=\"w-33 px-2 py-1.5 text-xs border border-gray-300 rounded bg-green-50 text-green-900 font-medium\">\r\n                                                    {calculatedValues.totalFreeQty}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* Amount */}\r\n                                        <div>\r\n                                            <label className=\"block text-xs font-medium text-gray-700 mb-1\">Amount</label>\r\n                                            <div className=\"w-33 px-2 py-1.5 text-xs border border-gray-300 rounded bg-yellow-50 text-yellow-900 font-medium\">\r\n                                                ₹{(calculatedValues.amount || 0).toFixed(2)}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* Summary */}\r\n                                        <div className=\"mt-4 p-3 bg-gray-50 rounded-lg border\">\r\n                                            <h5 className=\"text-xs font-semibold text-gray-700 mb-2\">Summary</h5>\r\n                                            <div className=\"space-y-1 text-xs\">\r\n                                                <div className=\"flex justify-between\">\r\n                                                    <span>Gross Amount:</span>\r\n                                                    <span className=\"font-medium\">₹{(calculatedValues.grossAmount || 0).toFixed(2)}</span>\r\n                                                </div>\r\n                                                <div className=\"flex justify-between\">\r\n                                                    <span>Tax Amount:</span>\r\n                                                    <span className=\"font-medium\">₹{(calculatedValues.taxAmount || 0).toFixed(2)}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div className=\"flex justify-between border-t pt-1 font-semibold\">\r\n                                                    <span>Net Amount:</span>\r\n                                                    <span>₹{(calculatedValues.netAmount || 0).toFixed(2)}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Modal Footer */}\r\n                        <div className=\"bg-gray-50 px-4 py-3 rounded-b-lg\">\r\n                            <div className=\"flex justify-end gap-2\">\r\n                                <button\r\n                                    onClick={closeModal}\r\n                                    className=\"px-4 py-2 text-xs font-medium text-gray-600 bg-white border border-gray-300 rounded hover:bg-gray-50 transition-colors\"\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                                <button\r\n                                    onClick={handleModalSave}\r\n                                    className=\"px-4 py-2 text-xs font-medium text-white bg-gradient-to-r from-blue-600 to-blue-800 rounded hover:from-blue-700 hover:to-blue-900 transition-colors\"\r\n                                >\r\n                                    {editingItemData ? 'Update' : 'Add'}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Summary Section */}\r\n            <div className=\"p-3 sm:p-4 lg:p-6 bg-white\">\r\n                <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 p-4 sm:p-6 rounded-lg\">\r\n                    <h3 className=\"text-lg sm:text-xl font-bold text-blue-900 mb-4\">Summary</h3>\r\n\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 sm:gap-6\">\r\n                        {/* Column 1: Tax Details */}\r\n                        <div className=\"space-y-3\">\r\n                            <div className=\"border border-blue-300 rounded-lg overflow-hidden\">\r\n                                <div className=\"bg-blue-600 text-white p-2 text-center font-semibold text-sm\">Tax Details</div>\r\n                                <div className=\"divide-y divide-blue-200\">\r\n                                    <div className=\"flex justify-between items-center p-2 bg-white\">\r\n                                        <span className=\"text-sm font-medium text-blue-900\">GST Total:</span>\r\n                                        <span className=\"text-sm font-bold text-blue-900\">₹{Number(purchaseBill.gstTotal || 0).toFixed(2)}</span>\r\n                                    </div>\r\n                                    <div className=\"flex justify-between items-center p-2 bg-blue-50\">\r\n                                        <span className=\"text-sm font-medium text-blue-900\">CGST:</span>\r\n                                        <span className=\"text-sm font-bold text-blue-900\">₹{Number(purchaseBill.cgst || 0).toFixed(2)}</span>\r\n                                    </div>\r\n                                    <div className=\"flex justify-between items-center p-2 bg-white\">\r\n                                        <span className=\"text-sm font-medium text-blue-900\">SGST:</span>\r\n                                        <span className=\"text-sm font-bold text-blue-900\">₹{Number(purchaseBill.sgst || 0).toFixed(2)}</span>\r\n                                    </div>\r\n                                    <div className=\"flex justify-between items-center p-2 bg-white\">\r\n                                        <span className=\"text-sm font-medium text-blue-900\">IGST:</span>\r\n                                        <span className=\"text-sm font-bold text-blue-900\">₹{Number(purchaseBill.igst || 0).toFixed(2)}</span>\r\n                                    </div>\r\n                                    <div className=\"flex justify-between items-center p-2 bg-blue-50\">\r\n                                        <span className=\"text-sm font-medium text-blue-900\">Cess Amount:</span>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            step=\"0.01\"\r\n                                            value={purchaseBill.cessAmount}\r\n                                            onChange={(e) => setPurchaseBill(prev => ({ ...prev, cessAmount: Number(e.target.value) }))}\r\n                                            className=\"w-20 px-2 py-1 text-sm border border-blue-300 rounded text-right font-bold\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Column 2: Amount Details */}\r\n                        <div className=\"space-y-3\">\r\n                            <div className=\"border border-blue-300 rounded-lg overflow-hidden\">\r\n                                <div className=\"bg-blue-600 text-white p-2 text-center font-semibold text-sm\">Amount Details</div>\r\n                                <div className=\"divide-y divide-blue-200\">\r\n                                    <div className=\"flex justify-between items-center p-2 bg-green-50 font-bold\">\r\n                                        <span className=\"text-sm text-green-900\">Gross Total:</span>\r\n                                        <span className=\"text-sm text-green-900\">\r\n                                            ₹{Number(\r\n                                                purchaseBill.items.reduce((acc, item) => acc + (item.totalAmount || 0), 0) +\r\n                                                (purchaseBill.cessAmount || 0)\r\n                                            ).toFixed(2)}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"flex justify-between items-center p-2 bg-blue-50\">\r\n                                        <span className=\"text-sm font-medium text-blue-900\">Round Off:</span>\r\n                                        <span className=\"text-sm font-bold text-blue-900\">₹{Number(purchaseBill.roundOff || 0).toFixed(2)}</span>\r\n                                    </div>\r\n                                    <div className=\"flex justify-between items-center p-2 bg-white\">\r\n                                        <span className=\"text-sm font-medium text-blue-900\">Discount:</span>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            step=\"0.01\"\r\n                                            value={purchaseBill.discount}\r\n                                            onChange={(e) => setPurchaseBill(prev => ({ ...prev, discount: Number(e.target.value) }))}\r\n                                            className=\"w-20 px-2 py-1 text-sm border border-blue-300 rounded text-right font-bold\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Column 3: Final Total */}\r\n                        <div className=\"lg:flex lg:items-center lg:justify-center\">\r\n                            <div className=\"bg-gradient-to-r from-red-500 to-red-700 text-white p-4 rounded-lg text-center shadow-lg\">\r\n                                <div className=\"text-sm font-medium mb-1\">Total Amount</div>\r\n                                <div className=\"text-2xl font-bold\">₹{Number(\r\n                                    purchaseBill.items.reduce((acc, item) => acc + (item.totalAmount || 0), 0) +\r\n                                    (purchaseBill.cessAmount || 0)\r\n                                ).toFixed(2)}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-center\">\r\n                <div className=\"w-full max-w-md\">\r\n                    {errorMessage && (\r\n                        <div className=\"mb-4 text-sm text-red-600 font-semibold bg-red-100 border border-red-300 p-2 rounded text-center\">\r\n                            {errorMessage}\r\n                        </div>\r\n                    )}\r\n                    {successMessage && (\r\n                        <div className=\"bg-green-100 text-green-800 p-2 rounded mb-4 shadow text-sm font-medium text-center\">\r\n                            {successMessage}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            {/* Save + Cancel Buttons */}\r\n            <div className=\"p-3 sm:p-4 lg:p-6 bg-gradient-to-r from-blue-50 to-blue-100\">\r\n                <div className=\"flex justify-center gap-4\">\r\n                    <button\r\n                        onClick={savePurchaseBill}\r\n                        className=\"bg-gradient-to-r from-green-600 to-green-800 text-white px-8 py-3 rounded-lg hover:from-green-700 hover:to-green-900 flex items-center gap-2 font-bold text-lg shadow-lg transition-all duration-300\"\r\n                    >\r\n                        <Save size={20} /> Save Bill\r\n                    </button>\r\n\r\n                    <button\r\n                        onClick={cancelPurchaseBill} // 🔁 Replace this with your cancel function\r\n                        className=\"bg-gradient-to-r from-red-600 to-red-800 text-white px-8 py-3 rounded-lg hover:from-red-700 hover:to-red-900 flex items-center gap-2 font-bold text-lg shadow-lg transition-all duration-300\"\r\n                    >\r\n                        <Trash2 size={20} /> Cancel Bill\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PurchaseBillPage;"],"names":[],"mappings":"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","debugId":null}}]
}