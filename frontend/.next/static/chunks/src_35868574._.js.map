{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/lib/axios.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"https://localhost:7112\", // update to your .NET API URL\r\n});\r\n\r\n// // ‚úÖ Automatically attach JWT token\r\n// API.interceptors.request.use((config) => {\r\n//   const token = localStorage.getItem(\"token\");\r\n\r\n//   if (token) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//   }\r\n\r\n//   return config;\r\n// });\r\n\r\nexport default API;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;uCAae","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/app/%28dashboard%29/viewAssignments/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { NotebookPen, FilePen, Trash2 } from 'lucide-react';\r\nimport API from '@/lib/axios';\r\nimport Link from 'next/link';\r\nimport \"./viewAssign.css\";\r\n\r\n// const API_BASE = \"https://localhost:7112\";\r\nconst API_BASE = API.defaults.baseURL;\r\n\r\ninterface PatientAssignmentDataType {\r\n    id: number;\r\n    assignmentId: string;\r\n    date: string;\r\n    time: string;\r\n    patientId: string;\r\n    doctorId: string;\r\n    volunteerId: string;\r\n    nurseId: string;\r\n    description: string;\r\n}\r\n\r\ninterface PersonDetails {\r\n    id: string;\r\n    name: string;\r\n    phone: string;\r\n    email?: string;\r\n    photo?: string;\r\n    age?: number;\r\n    gender?: string;\r\n    address?: string;\r\n}\r\n\r\nexport default function PatientAssignmentsViewPage() {\r\n    const router = useRouter();\r\n    const [assignments, setAssignments] = useState<PatientAssignmentDataType[]>([]);\r\n    const [selectedAssignment, setSelectedAssignment] = useState<PatientAssignmentDataType | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [personDetails, setPersonDetails] = useState<{ [key: string]: PersonDetails }>({});\r\n    const recordsPerPage = 10;\r\n\r\n    const fetchAllPersonsData = async (): Promise<{ [key: string]: PersonDetails }> => {\r\n        const endpoints = [\r\n            { key: \"patient\", url: `${API_BASE}/api/Hpforms/all-patients` },\r\n            { key: \"doctor\", url: `${API_BASE}/api/Doctors/all-doctors` },\r\n            { key: \"volunteer\", url: `${API_BASE}/api/Volunteers/all-volunteers` },\r\n            { key: \"nurse\", url: `${API_BASE}/api/Nurses/all-nurses` },\r\n        ];\r\n\r\n        const allPersons: { [key: string]: PersonDetails } = {};\r\n\r\n        await Promise.all(\r\n            endpoints.map(async ({ key, url }) => {\r\n                try {\r\n                    const res = await fetch(url);\r\n                    if (!res.ok) return;\r\n\r\n                    const data = await res.json();\r\n                    data.forEach((item: any) => {\r\n                        const id = item.id || item[`${key}Id`] || item[`${key}_Id`];\r\n                        if (!id) return;\r\n\r\n                        allPersons[`${key}_${id}`] = {\r\n                            id: String(id),\r\n                            name: item.name || item.fullName || item[`${key}Name`] || item.firstName + \" \" + item.lastName || `${key} ${id}`,\r\n                            phone: item.phone || item.phoneNumber || \"\",\r\n                            email: item.email || item.emailAddress || \"\",\r\n                            photo: item.photo || item.profilePhoto || item.image || \"\",\r\n                            age: item.age,\r\n                            gender: item.gender || item.sex || \"\",\r\n                            address: item.address || item.homeAddress || item.clinicAddress || item.workAddress || \"\"\r\n                        };\r\n                    });\r\n                } catch {\r\n                    // Silent fail, continue other fetches\r\n                }\r\n            })\r\n        );\r\n\r\n        return allPersons;\r\n    };\r\n\r\n    const showAssignmentDetails = (assignment: PatientAssignmentDataType) => {\r\n        setSelectedAssignment(assignment);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAssignments = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const res = await fetch(`${API_BASE}/api/PatientAssignments`);\r\n                if (!res.ok) throw new Error(\"Failed to fetch assignment data\");\r\n\r\n                const data = await res.json();\r\n                const allPersons = await fetchAllPersonsData();\r\n\r\n                setAssignments(data);\r\n                setPersonDetails(allPersons);\r\n            } catch (err: any) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchAssignments();\r\n    }, []);\r\n\r\n    const handleDelete = async (id: number, assignmentId: string) => {\r\n        if (!confirm(`Delete assignment ${assignmentId}?`)) return;\r\n        try {\r\n            const res = await fetch(`${API_BASE}/api/PatientAssignments/${id}`, { method: \"DELETE\" });\r\n            if (!res.ok) throw new Error(\"Delete failed\");\r\n\r\n            setAssignments(prev => prev.filter(a => a.id !== id));\r\n            alert(\"Assignment deleted.\");\r\n        } catch {\r\n            alert(\"Failed to delete assignment.\");\r\n        }\r\n    };\r\n\r\n    const handleEdit = (assignment: PatientAssignmentDataType) => {\r\n        router.push(`/viewAssignments/assignpatient?edit=true&id=${assignment.assignmentId}`);\r\n    };\r\n\r\n    const formatDate = (dateString: string) => new Date(dateString).toLocaleDateString('en-GB');\r\n    const formatTime = (timeString: string) =>\r\n        new Date(`1970-01-01T${timeString}`).toLocaleTimeString('en-US', {\r\n            hour: 'numeric', minute: '2-digit', hour12: true,\r\n        });\r\n\r\n    const getPersonName = useCallback((id: string, type: string) => {\r\n        return personDetails[`${type}_${id}`]?.name?.trim() || \"Not Found\";\r\n    }, [personDetails]);\r\n\r\n    const getPersonDetails = useCallback((id: string, type: string) => {\r\n        return personDetails[`${type}_${id}`] || null;\r\n    }, [personDetails]);\r\n\r\n    const filteredAssignments = assignments.filter((assignment) => {\r\n        const query = searchTerm.toLowerCase();\r\n        const fields = [\r\n            assignment.assignmentId,\r\n            assignment.patientId,\r\n            assignment.doctorId,\r\n            assignment.volunteerId,\r\n            assignment.nurseId,\r\n            assignment.description,\r\n            getPersonName(assignment.patientId, \"patient\"),\r\n            getPersonName(assignment.doctorId, \"doctor\"),\r\n            getPersonName(assignment.volunteerId, \"volunteer\"),\r\n            getPersonName(assignment.nurseId, \"nurse\"),\r\n        ];\r\n        return fields.some(field => (field || \"\").toLowerCase().includes(query));\r\n    });\r\n\r\n    const totalPages = Math.ceil(filteredAssignments.length / recordsPerPage);\r\n    const currentRecords = filteredAssignments.slice(\r\n        (currentPage - 1) * recordsPerPage,\r\n        currentPage * recordsPerPage\r\n    );\r\n\r\n    return (\r\n        <div className=\"min-h-screen w-full max-w-screen bg-gradient-to-br from-blue-50 to-blue-100 px-0 sm:px-0 py-0 grid-background\">\r\n            {/* Header Section */}\r\n            <div className=\"bg-gradient-to-r from-blue-700 to-blue-500 text-white py-3 px-4 text-center shadow-md\">\r\n                <h1 className=\"text-3xl font-light mb-1\">Patient Assignments</h1>\r\n                <p className=\"text-sm text-blue-100 font-normal\">Manage and view patient registry</p>\r\n            </div>\r\n\r\n            <div className=\"p-5\">\r\n                {/* Header Actions Row */}\r\n                <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-4\">\r\n                    {/* Left: New Registration Button */}\r\n                    <button\r\n                        onClick={() => router.push(\"/viewAssignments/assignpatient\")}\r\n                        className=\"group relative w-fit px-4 py-2 bg-gradient-to-r from-blue-400 to-blue-600 text-white text-sm font-medium rounded-md shadow-md hover:shadow-lg transform hover:scale-105 transition-all duration-300 overflow-hidden mx-auto sm:mx-0\"\r\n                    >\r\n                        <span className=\"absolute inset-0 bg-gradient-to-r from-blue-900 to-blue-700 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300 origin-left z-0 rounded-md\"></span>\r\n\r\n                        <span className=\"relative flex items-center z-10\">\r\n                            <span className=\"text-base mr-1\">‚ûï</span>\r\n                            New Registration\r\n                        </span>\r\n                    </button>\r\n\r\n                    {/* Right Side: Search and Info */}\r\n                    <div className=\"flex flex-col items-center sm:items-end w-full sm:w-auto gap-2\">\r\n                        {/* Search Input */}\r\n                        <div className=\"flex items-center gap-2 w-full sm:w-auto\">\r\n                            <span className=\"text-xl\">üîç</span>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Search by assignment ID, patient, doctor, volunteer, or nurse...\"\r\n                                value={searchTerm}\r\n                                onChange={(e) => {\r\n                                    setSearchTerm(e.target.value);\r\n                                    setCurrentPage(1);\r\n                                }}\r\n                                className=\"py-2 px-3 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 w-full max-w-md\"\r\n                            />\r\n                        </div>\r\n\r\n                        {/* Records Info */}\r\n                        <div className=\"text-sm text-gray-600 mt-1 text-center sm:text-right py-4\">\r\n                            Showing {currentRecords.length} of {filteredAssignments.length} patients\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Table Section */}\r\n                <div className=\"bg-white rounded-lg shadow overflow-x-auto\">\r\n                    <table className=\"min-w-full border border-gray-300 border-collapse\">\r\n                        <thead className=\"bg-gradient-to-r from-blue-600 to-blue-600 text-white\">\r\n                            <tr>\r\n                                <th className=\"w-32 px-4 py-3 text-left text-sm font-semibold text-white-700 border border-gray-300\">Assignment ID</th>\r\n                                <th className=\"w-35 px-4 py-3 text-left text-sm font-semibold text-white-700 border border-gray-300\">Date & Time</th>\r\n                                <th className=\"px-4 py-3 text-left text-sm font-semibold text-white-700 border border-gray-300\">Patient</th>\r\n                                <th className=\"px-4 py-3 text-left text-sm font-semibold text-white-700 border border-gray-300\">Doctor</th>\r\n                                <th className=\"px-4 py-3 text-left text-sm font-semibold text-white-700 border border-gray-300\">Volunteer</th>\r\n                                <th className=\"px-4 py-3 text-left text-sm font-semibold text-white-700 border border-gray-300\">Nurse</th>\r\n                                <th className=\"w-60 px-4 py-3 text-left text-sm font-semibold text-white-700 border border-gray-300\">Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {currentRecords.length === 0 ? (\r\n                                <tr>\r\n                                    <td colSpan={7} className=\"no-records\">\r\n                                        {searchTerm ? \"No assignments found matching your search\" : \"No assignment records available\"}\r\n                                    </td>\r\n                                </tr>\r\n                            ) : (\r\n                                currentRecords.map((assignment) => (\r\n                                    <tr key={assignment.id} className=\"table-row\">\r\n                                        <td className=\"px-4 py-2 text-sm border border-gray-300\">\r\n                                            {assignment.assignmentId}\r\n                                        </td>\r\n                                        <td className=\"px-4 py-2 text-sm border border-gray-300\">\r\n                                            <div>{formatDate(assignment.date)}</div>\r\n                                            <div className=\"text-sm text-gray-600\">{formatTime(assignment.time)}</div>\r\n                                        </td>\r\n                                        <td className=\"px-4 py-2 text-sm border border-gray-300\">\r\n                                            <button\r\n                                                className=\"patient-name-btn\"\r\n                                                onClick={() => showAssignmentDetails(assignment)}\r\n                                                style={{\r\n                                                    background: 'none',\r\n                                                    border: 'none',\r\n                                                    color: '#007bff',\r\n                                                    cursor: 'pointer',\r\n                                                    textDecoration: 'underline',\r\n                                                    padding: 0,\r\n                                                    fontSize: 'inherit'\r\n                                                }}\r\n                                            >\r\n                                                {getPersonName(String(assignment.patientId || ''), 'patient')}\r\n                                            </button>\r\n                                            <div className=\"text-sm text-gray-600\">ID: {assignment.patientId}</div>\r\n                                        </td>\r\n                                        <td className=\"px-4 py-2 text-sm border border-gray-300\">\r\n                                            <div>{getPersonName(String(assignment.doctorId || ''), 'doctor')}</div>\r\n                                            <div className=\"text-sm text-gray-600\">ID: {assignment.doctorId}</div>\r\n                                        </td>\r\n                                        <td className=\"px-4 py-2 text-sm border border-gray-300\">\r\n                                            <div>{getPersonName(String(assignment.volunteerId || ''), 'volunteer')}</div>\r\n                                            <div className=\"text-sm text-gray-600\">ID: {assignment.volunteerId}</div>\r\n                                        </td>\r\n                                        <td className=\"px-4 py-2 text-sm border border-gray-300\">\r\n                                            <div>{getPersonName(String(assignment.nurseId || ''), 'nurse')}</div>\r\n                                            <div className=\"text-sm text-gray-600\">ID: {assignment.nurseId}</div>\r\n                                        </td>\r\n                                        <td className=\"px-4 py-2 text-sm border border-gray-300\">\r\n                                            <div className=\"flex items-center flex-wrap gap-1 sm:gap-2\">\r\n                                                {/* Doctor's Note button\r\n                                                <Link\r\n                                                    href={`/doctorsnote?assignmentId=${assignment.assignmentId}`}\r\n                                                    title=\"Add Doctor's Note\"\r\n                                                    className=\"text-green-600 hover:text-green-800 p-1.5 rounded hover:bg-green-100 transition-all\"\r\n                                                >\r\n                                                    <NotebookPen className=\"w-4 h-4\" />\r\n                                                </Link>\r\n\r\n                                                Nurse's Note button\r\n                                                <Link\r\n                                                    href={`/nursesnote?assignmentId=${assignment.assignmentId}`}\r\n                                                    title=\"Add Nurse's Note\"\r\n                                                    className=\"text-blue-600 hover:text-blue-800 p-1.5 rounded hover:bg-blue-100 transition-all\"\r\n                                                >\r\n                                                    <NotebookPen className=\"w-4 h-4\" />\r\n                                                </Link>\r\n                                                Nurse's Review button\r\n                                                <Link\r\n                                                    href={`/nursesreview?assignmentId=${assignment.assignmentId}`}\r\n                                                    title=\"Add Nurse's Review\"\r\n                                                    className=\"text-red-600 hover:text-red-800 p-1.5 rounded hover:bg-red-100 transition-all\"\r\n                                                >\r\n                                                    <NotebookPen className=\"w-4 h-4\" />\r\n                                                </Link> */}\r\n\r\n                                                {/* Divider */}\r\n                                                <div className=\"h-4 w-px bg-gray-300 mx-1\" />\r\n\r\n                                                {/* Edit button */}\r\n                                                <button\r\n                                                    onClick={() => handleEdit(assignment)}\r\n                                                    title=\"Edit assignment record\"\r\n                                                    className=\"text-blue-600 hover:text-blue-800 p-1.5 rounded hover:bg-blue-100 transition-all\"\r\n                                                >\r\n                                                    <FilePen className=\"w-4 h-4\" />\r\n                                                </button>\r\n\r\n                                                {/* Delete button */}\r\n                                                <button\r\n                                                    onClick={() => handleDelete(assignment.id, assignment.assignmentId)}\r\n                                                    title=\"Delete assignment record\"\r\n                                                    className=\"text-red-600 hover:text-red-800 p-1.5 rounded hover:bg-red-100 transition-all\"\r\n                                                >\r\n                                                    <Trash2 className=\"w-4 h-4\" />\r\n                                                </button>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            {/* Pagination */}\r\n            {totalPages > 1 && (\r\n                <div className=\"pagination\">\r\n                    <button\r\n                        className=\"pagination-btn\"\r\n                        onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\r\n                        disabled={currentPage === 1}\r\n                    >\r\n                        Previous\r\n                    </button>\r\n                    <span className=\"pagination-info\">\r\n                        Page {currentPage} of {totalPages}\r\n                    </span>\r\n                    <button\r\n                        className=\"pagination-btn\"\r\n                        onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\r\n                        disabled={currentPage === totalPages}\r\n                    >\r\n                        Next\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            {/* Assignment Details Modal */}\r\n            {selectedAssignment && (\r\n                <div className=\"modal-overlay\" onClick={() => setSelectedAssignment(null)}>\r\n                    <div className=\"patient-details-modal\" onClick={(e) => e.stopPropagation()}>\r\n                        <div className=\"modal-header\">\r\n                            <h2>Assignment Details</h2>\r\n                            <button\r\n                                className=\"modal-close-btn\"\r\n                                onClick={() => setSelectedAssignment(null)}\r\n                            >\r\n                                √ó\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"patient-info-grid\">\r\n                                <div className=\"info-section border-4 border-black rounded-2xl p-6 shadow-lg bg-white mb-8\">\r\n                                    <h3>Assignment Information</h3>\r\n                                    <div className=\"info-row\">\r\n                                        <span className=\"label\">Assignment ID:</span>\r\n                                        <span className=\"value\">{selectedAssignment.assignmentId}</span>\r\n                                    </div>\r\n                                    <div className=\"info-row\">\r\n                                        <span className=\"label\">Date:</span>\r\n                                        <span className=\"value\">{formatDate(selectedAssignment.date)}</span>\r\n                                    </div>\r\n                                    <div className=\"info-row\">\r\n                                        <span className=\"label\">Time:</span>\r\n                                        <span className=\"value\">{formatTime(selectedAssignment.time)}</span>\r\n                                    </div>\r\n                                    <div className=\"info-row\">\r\n                                        <span className=\"label\">Description:</span>\r\n                                        <span className=\"value\">{selectedAssignment.description}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                {/* Patient Details */}\r\n                                <div className=\"info-section border-4 border-black rounded-2xl p-6 shadow-lg bg-white mb-8\">\r\n                                    <h3>Patient Details</h3>\r\n                                    {(() => {\r\n                                        const patientDetails = getPersonDetails(String(selectedAssignment.patientId), 'patient');\r\n                                        return patientDetails ? (\r\n                                            <>\r\n                                                <div className=\"info-row\">\r\n                                                    <span className=\"label\">Name:</span>\r\n                                                    <span className=\"value\">{patientDetails.name}</span>\r\n                                                </div>\r\n                                                <div className=\"info-row\">\r\n                                                    <span className=\"label\">Patient ID:</span>\r\n                                                    <span className=\"value\">{selectedAssignment.patientId}</span>\r\n                                                </div>\r\n\r\n                                                {patientDetails.age && (\r\n                                                    <div className=\"info-row\">\r\n                                                        <span className=\"label\">Age:</span>\r\n                                                        <span className=\"value\">{patientDetails.age}</span>\r\n                                                    </div>\r\n                                                )}\r\n                                                {patientDetails.gender && (\r\n                                                    <div className=\"info-row\">\r\n                                                        <span className=\"label\">Gender:</span>\r\n                                                        <span className=\"value\">{patientDetails.gender}</span>\r\n                                                    </div>\r\n                                                )}\r\n                                                <div className=\"info-row\">\r\n                                                    <span className=\"label\">Phone:</span>\r\n                                                    <span className=\"value\">{patientDetails.phone || 'Not provided'}</span>\r\n                                                </div>\r\n                                            </>\r\n                                        ) : (\r\n                                            <div className=\"info-row\">\r\n                                                <span className=\"value\">Patient details not available</span>\r\n                                            </div>\r\n                                        );\r\n                                    })()}\r\n                                </div>\r\n\r\n                                {/* Doctor Details */}\r\n                                <div className=\"info-section border-4 border-black rounded-2xl p-6 shadow-lg bg-white mb-8\">\r\n                                    <h3>Doctor Details</h3>\r\n                                    {(() => {\r\n                                        const doctorDetails = getPersonDetails(String(selectedAssignment.doctorId), 'doctor');\r\n                                        return doctorDetails ? (\r\n                                            <>\r\n                                                <div className=\"info-row\">\r\n                                                    <span className=\"label\">Name:</span>\r\n                                                    <span className=\"value\">{doctorDetails.name}</span>\r\n                                                </div>\r\n                                                <div className=\"info-row\">\r\n                                                    <span className=\"label\">Doctor ID:</span>\r\n                                                    <span className=\"value\">{selectedAssignment.doctorId}</span>\r\n                                                </div>\r\n                                                <div className=\"info-row\">\r\n                                                    <span className=\"label\">Phone:</span>\r\n                                                    <span className=\"value\">{doctorDetails.phone || 'Not provided'}</span>\r\n                                                </div>\r\n                                            </>\r\n                                        ) : (\r\n                                            <div className=\"info-row\">\r\n                                                <span className=\"value\">Doctor details not available</span>\r\n                                            </div>\r\n                                        );\r\n                                    })()}\r\n                                </div>\r\n\r\n                                {/* Volunteer Details */}\r\n                                <div className=\"info-section border-4 border-black rounded-2xl p-6 shadow-lg bg-white mb-8\">\r\n                                    <h3>Volunteer Details</h3>\r\n                                    {(() => {\r\n                                        const volunteerDetails = getPersonDetails(String(selectedAssignment.volunteerId), 'volunteer');\r\n                                        return volunteerDetails ? (\r\n                                            <>\r\n                                                <div className=\"info-row\">\r\n                                                    <span className=\"label\">Name:</span>\r\n                                                    <span className=\"value\">{volunteerDetails.name}</span>\r\n                                                </div>\r\n                                                <div className=\"info-row\">\r\n                                                    <span className=\"label\">Volunteer ID:</span>\r\n                                                    <span className=\"value\">{selectedAssignment.volunteerId}</span>\r\n                                                </div>\r\n                                                <div className=\"info-row\">\r\n                                                    <span className=\"label\">Phone:</span>\r\n                                                    <span className=\"value\">{volunteerDetails.phone || 'Not provided'}</span>\r\n                                                </div>\r\n                                            </>\r\n                                        ) : (\r\n                                            <div className=\"info-row\">\r\n                                                <span className=\"value\">Volunteer details not available</span>\r\n                                            </div>\r\n                                        );\r\n                                    })()}\r\n                                </div>\r\n\r\n                                {/* Nurse Details */}\r\n                                <div className=\"info-section border-4 border-black rounded-2xl p-6 shadow-lg bg-white mb-8\">\r\n\r\n\r\n                                    <h3>Nurse Details</h3>\r\n                                    {(() => {\r\n                                        const nurseDetails = getPersonDetails(String(selectedAssignment.nurseId), 'nurse');\r\n                                        return nurseDetails ? (\r\n                                            <>\r\n                                                <div className=\"info-row\">\r\n                                                    <span className=\"label\">Name:</span>\r\n\r\n                                                    <span className=\"value\">{nurseDetails.name}</span>\r\n                                                </div>\r\n                                                <div className=\"info-row\">\r\n                                                    <span className=\"label\">Nurse ID:</span>\r\n                                                    <span className=\"value\">{selectedAssignment.nurseId}</span>\r\n                                                </div>\r\n                                                <div className=\"info-row\">\r\n                                                    <span className=\"label\">Phone:</span>\r\n                                                    <span className=\"value\">{nurseDetails.phone || 'Not provided'}</span>\r\n                                                </div>\r\n                                            </>\r\n                                        ) : (\r\n                                            <div className=\"info-row\">\r\n                                                <span className=\"value\">Nurse details not available</span>\r\n                                            </div>\r\n                                        );\r\n                                    })()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}