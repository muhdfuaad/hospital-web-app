{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/lib/axios.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"https://localhost:7112\", // update to your .NET API URL\r\n});\r\n\r\n// // ✅ Automatically attach JWT token\r\n// API.interceptors.request.use((config) => {\r\n//   const token = localStorage.getItem(\"token\");\r\n\r\n//   if (token) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//   }\r\n\r\n//   return config;\r\n// });\r\n\r\nexport default API;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;uCAae","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/app/%28dashboard%29/medicines/AddMedicine/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport API from '@/lib/axios';\r\nimport { SearchableSelect } from '@/components/SearchableSelect';\r\n\r\nconst API_BASE = API.defaults.baseURL;\r\n\r\ninterface CompanyOption {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\ninterface TypeOption {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\ninterface MedicineItem {\r\n  itemCode: string;\r\n  medicineName: string;\r\n  companyId: number;  // Change from 'company' to 'companyId'\r\n  company: string;    // Keep this for display\r\n  genericName: string;\r\n  gst: string;\r\n  billCode: string;\r\n  itemShort: string;\r\n  rack: string;\r\n  shelf: string;\r\n  typeId: number;     // Change from 'type' to 'typeId'\r\n  type: string;       // Keep this for display\r\n  ingredients: string;\r\n  cess: string;\r\n  discount: string;\r\n  rol: string;\r\n  packItem: string;\r\n  hsnCode: string;\r\n  purchaseRate: string;\r\n  salesRate: string;\r\n  lastBill: string;\r\n  lastPurchase: string;\r\n  quantity: string;\r\n}\r\n\r\nexport default function MedicineFormPage() {\r\n  const [activeTab, setActiveTab] = useState('BASIC DETAILS');\r\n\r\n  const [formData, setFormData] = useState<MedicineItem>({\r\n    itemCode: '',\r\n    medicineName: '',\r\n    genericName: '',\r\n    gst: '',\r\n    billCode: '',\r\n    itemShort: '',\r\n    rack: '',\r\n    shelf: '',\r\n    companyId: 0,\r\n    company: '',\r\n    typeId: 0,\r\n    type: '',\r\n    ingredients: '',\r\n    cess: '',\r\n    discount: '',\r\n    rol: '',\r\n    packItem: '',\r\n    hsnCode: '',\r\n    purchaseRate: '',\r\n    salesRate: '',\r\n    lastBill: '',\r\n    lastPurchase: '',\r\n    quantity: ''\r\n  });\r\n\r\n  const [companies, setCompanies] = useState<CompanyOption[]>([]);\r\n  const [types, setTypes] = useState<TypeOption[]>([]);\r\n  const [showCompanyModal, setShowCompanyModal] = useState(false);\r\n  const [showTypeModal, setShowTypeModal] = useState(false);\r\n  const [newCompany, setNewCompany] = useState('');\r\n  const [newType, setNewType] = useState('');\r\n\r\n  const [medicineSearches, setMedicineSearches] = useState<Record<string, string>>({\r\n    company: '',\r\n  });\r\n  const [showCompanyDropdown, setShowCompanyDropdown] = useState(false);\r\n  const filteredCompanies = companies.filter((company) =>\r\n    company.name.toLowerCase().startsWith(medicineSearches.company.toLowerCase())\r\n  );\r\n  const searchParams = useSearchParams();\r\n  const editId = searchParams.get('edit');\r\n  const router = useRouter();\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchDropdownsAndMedicine() {\r\n      try {\r\n        // Fetch dropdowns first\r\n        const [companiesRes, typesRes] = await Promise.all([\r\n          fetch(`${API_BASE}/api/MedicineCompanies`),\r\n          fetch(`${API_BASE}/api/MedicineTypes`)\r\n        ]);\r\n\r\n        if (!companiesRes.ok || !typesRes.ok) {\r\n          throw new Error('Failed to fetch dropdowns');\r\n        }\r\n\r\n        const companiesData = await companiesRes.json();\r\n        const typesData = await typesRes.json();\r\n\r\n        setCompanies(companiesData.map((c: any) => ({ id: c.companyId, name: c.companyName })));\r\n        setTypes(typesData.map((t: any) => ({ id: t.typeId, name: t.typeName })));\r\n\r\n        // If editing, fetch medicine\r\n        if (editId) {\r\n          setIsEditMode(true);\r\n          const res = await fetch(`${API_BASE}/api/Medicines/${editId}`);\r\n          if (!res.ok) {\r\n            console.error('Failed to fetch medicine data for edit');\r\n            return;\r\n          }\r\n\r\n          const data = await res.json();\r\n\r\n          setFormData({\r\n            itemCode: data.itemCode ?? '',\r\n            medicineName: data.medicineName ?? '',\r\n            companyId: Number(data.companyId ?? 0),  // ✅ Ensure this is a number\r\n            typeId: Number(data.typeId ?? 0),        // ✅ Ensure this is a number\r\n            company: data.company ?? '',\r\n            genericName: data.genericName ?? '',\r\n            gst: data.gst ?? '',\r\n            billCode: data.billCode ?? '',\r\n            itemShort: data.itemShort ?? '',\r\n            rack: data.rack ?? '',\r\n            shelf: data.shelf ?? '',\r\n            type: data.type ?? '',\r\n            ingredients: data.ingredients ?? '',\r\n            cess: data.cess ?? '',\r\n            discount: data.discount ?? '',\r\n            rol: data.rol ?? '',\r\n            packItem: data.packItem ?? '',\r\n            hsnCode: data.hsnCode ?? '',\r\n            purchaseRate: data.purchaseRate ?? '',\r\n            salesRate: data.salesRate ?? '',\r\n            lastBill: data.lastBill ? data.lastBill.split('T')[0] : '',\r\n            lastPurchase: data.lastPurchase ? data.lastPurchase.split('T')[0] : '',\r\n            quantity: data.quantity ?? '',\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Dropdown/Medicine fetch error:', error);\r\n      }\r\n    }\r\n\r\n    fetchDropdownsAndMedicine();\r\n  }, [editId]);\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchDropdowns() {\r\n      try {\r\n        const [companiesRes, typesRes] = await Promise.all([\r\n          fetch(`${API_BASE}/api/MedicineCompanies`),\r\n          fetch(`${API_BASE}/api/MedicineTypes`)\r\n        ]);\r\n\r\n        if (!companiesRes.ok || !typesRes.ok) {\r\n          throw new Error('Failed to fetch companies or types');\r\n        }\r\n\r\n        const companiesRaw = await companiesRes.json();\r\n        const typesRaw = await typesRes.json();\r\n\r\n        const mappedCompanies = companiesRaw.map((c: any) => ({\r\n          id: c.companyId,\r\n          name: c.companyName\r\n        }));\r\n\r\n        const mappedTypes = typesRaw.map((t: any) => ({\r\n          id: t.typeId,\r\n          name: t.typeName\r\n        }));\r\n\r\n        setCompanies(mappedCompanies);\r\n        setTypes(mappedTypes);\r\n      } catch (error) {\r\n        console.error('Dropdown fetch error:', error);\r\n      }\r\n    }\r\n\r\n    fetchDropdowns();\r\n  }, []);\r\n\r\n\r\n\r\n  const handleInputChange = (field: keyof MedicineItem, value: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const safeDateToISOString = (dateStr: string | null | undefined): string | null => {\r\n        if (!dateStr) return null;\r\n        const parsed = Date.parse(dateStr);\r\n        return !isNaN(parsed) ? new Date(parsed).toISOString() : null;\r\n      };\r\n\r\n      const payload = {\r\n        itemCode: formData.itemCode,\r\n        medicineName: formData.medicineName,\r\n        companyId: Number(formData.companyId),\r\n        genericName: formData.genericName,\r\n        gst: formData.gst,\r\n        billCode: formData.billCode,\r\n        itemShort: formData.itemShort,\r\n        rack: formData.rack,\r\n        shelf: formData.shelf,\r\n        typeId: Number(formData.typeId),\r\n        ingredients: formData.ingredients,\r\n        cess: formData.cess,\r\n        discount: formData.discount,\r\n        rol: formData.rol,\r\n        packItem: formData.packItem,\r\n        hsnCode: formData.hsnCode,\r\n        purchaseRate: formData.purchaseRate ? parseFloat(formData.purchaseRate) : null,\r\n        salesRate: formData.salesRate ? parseFloat(formData.salesRate) : null,\r\n        lastBill: safeDateToISOString(formData.lastBill),\r\n        lastPurchase: safeDateToISOString(formData.lastPurchase),\r\n        quantity: formData.quantity ? parseInt(formData.quantity) : 0,\r\n      };\r\n\r\n      const url = editId\r\n        ? `${API_BASE}/api/Medicines/${editId}`\r\n        : `${API_BASE}/api/Medicines`;\r\n\r\n      const method = editId ? 'PUT' : 'POST';\r\n\r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        // ❌ Log but do NOT display error to user\r\n        const errorText = await response.text();\r\n        console.error('❌ API Save Error:', errorText);\r\n        return;\r\n      }\r\n\r\n      // ✅ Success: show only success message\r\n      setSuccessMessage(editId ? '✅ Medicine updated successfully!' : '✅ Medicine added successfully!');\r\n      setTimeout(() => setSuccessMessage(''), 5000);\r\n\r\n      handleReset();\r\n      setTimeout(() => router.push('/medicines'), 600);\r\n\r\n    } catch (error: any) {\r\n      // ❌ Log unexpected error (e.g. network/server) silently\r\n      console.error('❌ handleSave exception:', error);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFormData({\r\n      itemCode: '',\r\n      medicineName: '',\r\n      genericName: '',\r\n      gst: '',\r\n      billCode: '',\r\n      itemShort: '',\r\n      rack: '',\r\n      shelf: '',\r\n      companyId: 0,\r\n      company: '',\r\n      typeId: 0,\r\n      type: '',\r\n      ingredients: '',\r\n      cess: '',\r\n      discount: '',\r\n      rol: '',\r\n      packItem: '',\r\n      hsnCode: '',\r\n      purchaseRate: '',\r\n      salesRate: '',\r\n      lastBill: '',\r\n      lastPurchase: '',\r\n      quantity: ''\r\n    });\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (confirm('Are you sure you want to delete this medicine?')) {\r\n      handleReset();\r\n      setSuccessMessage('Medicine deleted successfully!');\r\n      setTimeout(() => {\r\n        router.push('/medicines');\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  // Add these functions to handle API calls\r\n  const fetchCompanies = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/api/MedicineCompanies`);\r\n      const data: { companyId: number; companyName: string }[] = await response.json();\r\n\r\n      setCompanies(data.map(c => ({\r\n        id: c.companyId,\r\n        name: c.companyName\r\n      })));\r\n    } catch (error) {\r\n      console.error('Error fetching companies:', error);\r\n    }\r\n  };\r\n\r\n  const fetchTypes = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/api/MedicineTypes`);\r\n      const data: { typeId: number; typeName: string }[] = await response.json();\r\n\r\n      setTypes(data.map(t => ({\r\n        id: t.typeId,\r\n        name: t.typeName\r\n      })));\r\n    } catch (error) {\r\n      console.error('Error fetching types:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleAddCompany = async () => {\r\n    if (newCompany.trim()) {\r\n      try {\r\n        const response = await fetch(`${API_BASE}/api/MedicineCompanies`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ companyName: newCompany.trim() })\r\n        });\r\n\r\n        if (response.ok) {\r\n          const newCompanyData = await response.json();\r\n\r\n          const newEntry = {\r\n            id: newCompanyData.companyId,\r\n            name: newCompanyData.companyName\r\n          };\r\n\r\n          await fetchCompanies(); // ✅ Refresh company list\r\n\r\n          setFormData(prev => ({\r\n            ...prev,\r\n            companyId: newEntry.id,\r\n            company: newEntry.name\r\n          }));\r\n\r\n          setNewCompany('');\r\n          setShowCompanyModal(false);\r\n        } else {\r\n          const errText = await response.text();\r\n          console.error('Failed to add company:', errText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error adding company:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddType = async () => {\r\n    if (newType.trim()) {\r\n      try {\r\n        const response = await fetch(`${API_BASE}/api/MedicineTypes`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ typeName: newType.trim() })\r\n        });\r\n\r\n        if (response.ok) {\r\n          const newTypeData = await response.json();\r\n\r\n          const newEntry = {\r\n            id: newTypeData.typeId,\r\n            name: newTypeData.typeName\r\n          };\r\n\r\n          await fetchTypes(); // ✅ Refresh type list\r\n\r\n          setFormData(prev => ({\r\n            ...prev,\r\n            typeId: newEntry.id,\r\n            type: newEntry.name\r\n          }));\r\n\r\n          setNewType('');\r\n          setShowTypeModal(false);\r\n        } else {\r\n          const errText = await response.text();\r\n          console.error('Failed to add type:', errText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error adding type:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen w-full max-w-screen bg-gradient-to-br from-blue-50 to-blue-100 px-0 sm:px-0 py-0\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Page Header */}\r\n        <div className=\"bg-white rounded-lg shadow-sm mb-6\">\r\n          <div className=\"bg-gradient-to-r from-blue-800 to-blue-700 text-white p-4 text-center sm:p-6 shadow-lgrounded-t-lg\">\r\n            <h1 className=\"text-xl font-medium\">Medicine Details</h1>\r\n          </div>\r\n\r\n          {/* Tabs */}\r\n          <div className=\"flex border-b border-gray-200\">\r\n            <button\r\n              onClick={() => setActiveTab('BASIC DETAILS')}\r\n              className={`px-6 py-3 text-sm font-medium ${activeTab === 'BASIC DETAILS'\r\n                ? 'bg-gray-200 text-gray-700 border-b-2 border-gray-400'\r\n                : 'text-gray-500 hover:text-gray-700'\r\n                }`}\r\n            >\r\n              BASIC DETAILS\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('BATCH')}\r\n              className={`px-6 py-3 text-sm font-medium ${activeTab === 'BATCH'\r\n                ? 'bg-gray-200 text-gray-700 border-b-2 border-gray-400'\r\n                : 'text-gray-500 hover:text-gray-700'\r\n                }`}\r\n            >\r\n              BATCH\r\n            </button>\r\n          </div>\r\n\r\n          {errorMessage && (\r\n            <div className=\"mb-4 text-sm text-red-600 font-semibold bg-red-100 border border-red-300 p-2 rounded\">\r\n              {errorMessage}\r\n            </div>\r\n          )}\r\n          {successMessage && (\r\n            <div className=\"bg-green-100 text-green-800 p-2 rounded mb-4 shadow text-sm font-medium\">\r\n              {successMessage}\r\n            </div>\r\n          )}\r\n\r\n          {/* Form Content */}\r\n          {activeTab === 'BASIC DETAILS' && (\r\n            <div className=\"p-6\">\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n                {/* Left Column */}\r\n                <div className=\"space-y-4\">\r\n                  {/* Code */}\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <label className=\"text-sm font-medium text-gray-700 w-24 text-left\">Code</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData.itemCode}\r\n                      onChange={(e) => handleInputChange('itemCode', e.target.value)}\r\n                      className=\"flex-1 border border-gray-300 rounded px-3 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Bill Code */}\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <label className=\"text-sm font-medium text-gray-700 w-24 text-left\">Bill Code</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData.billCode}\r\n                      onChange={(e) => handleInputChange('billCode', e.target.value)}\r\n                      className=\"flex-1 border border-gray-300 rounded px-3 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Item Short */}\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <label className=\"text-sm font-medium text-gray-700 w-24 text-left\">Item Short</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData.itemShort}\r\n                      onChange={(e) => handleInputChange('itemShort', e.target.value)}\r\n                      className=\"flex-1 border border-gray-300 rounded px-3 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Name */}\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <label className=\"text-sm font-medium text-gray-700 w-24 text-left\">Name</label>\r\n                    <input\r\n                      required\r\n                      type=\"text\"\r\n                      value={formData.medicineName}\r\n                      onChange={(e) => handleInputChange('medicineName', e.target.value)}\r\n                      className=\"flex-1 border border-gray-300 rounded px-3 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Company */}\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <label className=\"text-sm font-medium text-gray-700 w-24 text-left\">Company</label>\r\n                    <div className=\"flex-1 relative\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search Company\"\r\n                        value={medicineSearches.company}\r\n                        onChange={(e) =>\r\n                          setMedicineSearches((prev) => ({ ...prev, company: e.target.value }))\r\n                        }\r\n                        onFocus={() => setShowCompanyDropdown(true)}\r\n                        onKeyDown={(e) => {\r\n                          if (e.key === 'Enter' && filteredCompanies.length > 0) {\r\n                            const topCompany = filteredCompanies[0];\r\n                            setFormData((prev) => ({\r\n                              ...prev,\r\n                              companyId: topCompany.id,\r\n                              company: topCompany.name,\r\n                            }));\r\n                            setMedicineSearches((prev) => ({\r\n                              ...prev,\r\n                              company: `${topCompany.id} - ${topCompany.name}`,\r\n                            }));\r\n                            setShowCompanyDropdown(false);\r\n                            e.preventDefault(); // Prevent form submission if inside a form\r\n                          }\r\n                        }}\r\n                        className=\"w-full border border-gray-300 rounded px-3 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      />\r\n                      {showCompanyDropdown && (\r\n                        <div className=\"absolute z-10 mt-1 w-full bg-white border border-gray-300 rounded shadow max-h-48 overflow-y-auto\">\r\n                          {filteredCompanies.length > 0 ? (\r\n                            filteredCompanies.map((company) => (\r\n                              <div\r\n                                key={company.id}\r\n                                className=\"px-3 py-2 hover:bg-blue-100 text-sm cursor-pointer\"\r\n                                onClick={() => {\r\n                                  setFormData((prev) => ({\r\n                                    ...prev,\r\n                                    companyId: company.id,\r\n                                    company: company.name,\r\n                                  }));\r\n                                  setMedicineSearches((prev) => ({\r\n                                    ...prev,\r\n                                    company: `${company.id} - ${company.name}`,\r\n                                  }));\r\n                                  setShowCompanyDropdown(false);\r\n                                }}\r\n                              >\r\n                                {company.id} - {company.name}\r\n                              </div>\r\n                            ))\r\n                          ) : (\r\n                            <div className=\"px-3 py-2 text-sm text-gray-500\">No results found</div>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <button\r\n                      onClick={() => setShowCompanyModal(true)}\r\n                      className=\"bg-blue-600 hover:bg-blue-500 text-white px-3 py-2 rounded-md font-medium transition-colors\"\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n\r\n\r\n\r\n                  {/* Generic Name */}\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <label className=\"text-sm font-medium text-gray-700 w-24 text-left\">Generic Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formData.genericName}\r\n                      onChange={(e) => handleInputChange('genericName', e.target.value)}\r\n                      className=\"flex-1 border border-gray-300 rounded px-3 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* R.O.L, Pack Item, HSN Code in one row */}\r\n                  <div className=\"flex items-center gap-4\">\r\n                    {/* R.O.L */}\r\n                    <div className=\"flex flex-col w-1/4\">\r\n                      <label className=\"text-sm font-medium text-gray-700 mb-1\">R.O.L</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={formData.rol}\r\n                        onChange={(e) => handleInputChange('rol', e.target.value)}\r\n                        className=\"border border-gray-300 rounded px-3 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      />\r\n                    </div>\r\n\r\n                    {/* Pack Item */}\r\n                    <div className=\"flex flex-col w-1/4\">\r\n                      <label className=\"text-sm font-medium text-gray-700 mb-1\">Pack Item</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={formData.packItem}\r\n                        onChange={(e) => handleInputChange('packItem', e.target.value)}\r\n                        className=\"border border-gray-300 rounded px-3 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      />\r\n                    </div>\r\n\r\n                    {/* HSN Code (wider) */}\r\n                    <div className=\"flex flex-col w-1/2\">\r\n                      <label className=\"text-sm font-medium text-gray-700 mb-1\">HSN Code</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={formData.hsnCode}\r\n                        onChange={(e) => handleInputChange('hsnCode', e.target.value)}\r\n                        className=\"border border-gray-300 rounded px-3 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-wrap md:flex-nowrap items-center gap-4 w-full\">\r\n                    {/* Purchase Rate */}\r\n                    <div className=\"flex items-center flex-1\">\r\n                      <label className=\"text-sm font-medium text-gray-700 w-28\">Purchase Rate</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={formData.purchaseRate}\r\n                        onChange={(e) => handleInputChange('purchaseRate', e.target.value)}\r\n                        className=\"w-28 border border-gray-300 rounded px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-sky-500\"\r\n                      />\r\n                    </div>\r\n\r\n                    {/* Sales Rate */}\r\n                    <div className=\"flex items-center flex-1\">\r\n                      <label className=\"text-sm font-medium text-gray-700 w-28\">Sales Rate</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={formData.salesRate}\r\n                        onChange={(e) => handleInputChange('salesRate', e.target.value)}\r\n                        className=\"w-28 border border-gray-300 rounded px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-sky-500\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                {/* Right Column */}\r\n                <div className=\"space-y-4\">\r\n                  {/* Rack & Shelf */}\r\n                  <div>\r\n                    <p className=\"text-xs font-semibold text-gray-500 mb-3\">Storage Location</p>\r\n                    <div className=\"flex flex-wrap md:flex-nowrap items-center gap-4 w-full\">\r\n                      {/* Rack */}\r\n                      <div className=\"flex flex-col w-1/4\">\r\n                        <label className=\"text-sm font-medium text-gray-700 w-20\">Rack</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={formData.rack}\r\n                          onChange={(e) => handleInputChange('rack', e.target.value)}\r\n                          className=\"border border-gray-300 rounded px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-sky-500\"\r\n                        />\r\n                      </div>\r\n\r\n                      {/* Shelf */}\r\n                      <div className=\"flex flex-col w-1/4\">\r\n                        <label className=\"text-sm font-medium text-gray-700 w-20\">Shelf</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={formData.shelf}\r\n                          onChange={(e) => handleInputChange('shelf', e.target.value)}\r\n                          className=\"border border-gray-300 rounded px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-sky-500\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Type */}\r\n                  <div>\r\n                    <p className=\"text-xs font-semibold text-gray-500 mb-3\">Medicine Information</p>\r\n                    <div className=\"flex items-center gap-4\">\r\n                      <label className=\"text-sm font-medium text-gray-700 w-16 text-left\">Type</label>\r\n                      <select\r\n                        value={formData.typeId}\r\n                        onChange={(e) => {\r\n                          const selectedId = parseInt(e.target.value);\r\n                          const selectedType = types.find(t => t.id === selectedId);\r\n                          setFormData(prev => ({\r\n                            ...prev,\r\n                            typeId: selectedId,\r\n                            type: selectedType ? selectedType.name : ''\r\n                          }));\r\n                        }}\r\n                        className=\"flex-1 border border-gray-300 rounded px-3 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      >\r\n                        <option value={0}>Select Type</option>\r\n                        {types\r\n                          .filter(type => type?.id != null && type?.name)\r\n                          .map(type => (\r\n                            <option key={type.id} value={type.id}>\r\n                              {type.name}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                      <button\r\n                        onClick={() => setShowTypeModal(true)}\r\n                        className=\"bg-blue-600 hover:bg-blue-500 text-white px-3 py-2 rounded-md font-medium transition-colors\"\r\n                      >\r\n                        +\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  {/* Ingredients */}\r\n                  <div>\r\n                    <div className=\"flex items-center gap-4\">\r\n                      <label className=\"text-sm font-medium text-gray-700 w-16 text-left\">Ingredients</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={formData.ingredients}\r\n                        onChange={(e) => handleInputChange('ingredients', e.target.value)}\r\n                        className=\"flex-1 border border-gray-300 rounded px-3 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Tax Information */}\r\n                  <div className=\"mb-4\">\r\n                    <p className=\"text-xs font-semibold text-gray-500 mb-3\">Tax Information</p>\r\n                    <div className=\"flex flex-wrap md:flex-nowrap items-center gap-4 w-full\">\r\n                      {/* GST % */}\r\n                      <div className=\"flex flex-col \">\r\n                        <label className=\"text-sm font-medium text-gray-700 mb-1\">GST %</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          value={formData.gst}\r\n                          onChange={(e) => handleInputChange('gst', e.target.value)}\r\n                          className=\"w-24 border border-gray-300 rounded px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-sky-500\"\r\n                        />\r\n                      </div>\r\n\r\n                      {/* Cess */}\r\n                      <div className=\"flex flex-col w-1/4\">\r\n                        <label className=\"text-sm font-medium text-gray-700 mb-1\">Cess</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={formData.cess}\r\n                          onChange={(e) => handleInputChange('cess', e.target.value)}\r\n                          className=\"border border-gray-300 rounded px-3 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        />\r\n                      </div>\r\n\r\n                      {/* Discount % */}\r\n                      <div className=\"flex flex-col w-1/4\">\r\n                        <label className=\"text-sm font-medium text-gray-700 mb-1\">Disc %</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={formData.discount}\r\n                          onChange={(e) => handleInputChange('discount', e.target.value)}\r\n                          className=\"w-24 border border-gray-300 rounded px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-sky-500\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Separated section for Last Bill, Last Purchase, and Quantity */}\r\n                  <div>\r\n                    <p className=\"text-xs font-semibold text-gray-500 mb-3\">Stock Info</p>\r\n\r\n                    {/* Last Bill & Last Purchase */}\r\n                    <div className=\"flex items-center gap-4 mb-4\">\r\n                      <label className=\"text-sm font-medium text-gray-700 w-24 text-left\">Last Bill</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={formData.lastBill}\r\n                        onChange={(e) => handleInputChange('lastBill', e.target.value)}\r\n                        className=\"w-28 border border-gray-300 rounded px-2 py-1.5 text-sm mr-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      />\r\n                      <label className=\"text-sm font-medium text-gray-700 w-24 text-left\">Last Purchase</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={formData.lastPurchase}\r\n                        onChange={(e) => handleInputChange('lastPurchase', e.target.value)}\r\n                        className=\"w-28 border border-gray-300 rounded px-2 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      />\r\n                    </div>\r\n\r\n                    {/* Quantity */}\r\n                    <div className=\"flex items-center gap-4\">\r\n                      <label className=\"text-sm font-medium text-gray-700 w-24 text-left\">Quantity</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={formData.quantity}\r\n                        onChange={(e) => handleInputChange('quantity', e.target.value)}\r\n                        className=\"w-24 border border-gray-300 rounded px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-sky-500\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'BATCH' && (\r\n            <div className=\"p-6\">\r\n              <div className=\"text-gray-500 text-center py-8\">\r\n                Batch details will be implemented here\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Action Buttons */}\r\n          <div className=\"border-t border-gray-200 px-6 py-4 flex justify-end gap-3\">\r\n            <button\r\n              onClick={handleSave}\r\n              className=\"bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded text-sm font-medium transition-colors\"\r\n            >\r\n              {isEditMode ? 'Update' : 'Save'}\r\n            </button>\r\n            <button\r\n              onClick={handleReset}\r\n              className=\"bg-gray-500 hover:bg-gray-600 text-white px-6 py-2 rounded text-sm font-medium transition-colors\"\r\n            >\r\n              Reset\r\n            </button>\r\n            <button\r\n              onClick={handleDelete}\r\n              className=\"bg-red-500 hover:bg-red-600 text-white px-6 py-2 rounded text-sm font-medium transition-colors\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      {/* Company Modal */}\r\n      {showCompanyModal && (\r\n        <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md mx-4\">\r\n            <div className=\"bg-gray-600 text-white px-6 py-4 rounded-t-lg flex justify-between items-center\">\r\n              <h2 className=\"text-lg font-medium\">Add New Company</h2>\r\n              <button\r\n                onClick={() => setShowCompanyModal(false)}\r\n                className=\"text-white hover:text-gray-300 text-xl font-bold\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Company Name</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newCompany}\r\n                onChange={(e) => setNewCompany(e.target.value)}\r\n                placeholder=\"Enter company name\"\r\n                className=\"w-full border border-gray-300 rounded px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                onKeyPress={(e) => e.key === 'Enter' && handleAddCompany()}\r\n              />\r\n            </div>\r\n            <div className=\"border-t border-gray-200 px-6 py-4 flex justify-end gap-3\">\r\n              <button\r\n                onClick={() => setShowCompanyModal(false)}\r\n                className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded text-sm font-medium transition-colors\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleAddCompany}\r\n                className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded text-sm font-medium transition-colors\"\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Type Modal */}\r\n      {showTypeModal && (\r\n        <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md mx-4\">\r\n            <div className=\"bg-gray-600 text-white px-6 py-4 rounded-t-lg flex justify-between items-center\">\r\n              <h2 className=\"text-lg font-medium\">Add New Type</h2>\r\n              <button\r\n                onClick={() => setShowTypeModal(false)}\r\n                className=\"text-white hover:text-gray-300 text-xl font-bold\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Type Name</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newType}\r\n                onChange={(e) => setNewType(e.target.value)}\r\n                placeholder=\"Enter type name\"\r\n                className=\"w-full border border-gray-300 rounded px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                onKeyPress={(e) => e.key === 'Enter' && handleAddType()}\r\n              />\r\n            </div>\r\n            <div className=\"border-t border-gray-200 px-6 py-4 flex justify-end gap-3\">\r\n              <button\r\n                onClick={() => setShowTypeModal(false)}\r\n                className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded text-sm font-medium transition-colors\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleAddType}\r\n                className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded text-sm font-medium transition-colors\"\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAOA,MAAM,WAAW,sHAAA,CAAA,UAAG,CAAC,QAAQ,CAAC,OAAO;AAsCtB,SAAS;;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB;QACrD,UAAU;QACV,cAAc;QACd,aAAa;QACb,KAAK;QACL,UAAU;QACV,WAAW;QACX,MAAM;QACN,OAAO;QACP,WAAW;QACX,SAAS;QACT,QAAQ;QACR,MAAM;QACN,aAAa;QACb,MAAM;QACN,UAAU;QACV,KAAK;QACL,UAAU;QACV,SAAS;QACT,cAAc;QACd,WAAW;QACX,UAAU;QACV,cAAc;QACd,UAAU;IACZ;IAEA,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmB,EAAE;IAC9D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IACnD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA0B;QAC/E,SAAS;IACX;IACA,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/D,MAAM,oBAAoB,UAAU,MAAM,CAAC,CAAC,UAC1C,QAAQ,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,iBAAiB,OAAO,CAAC,WAAW;IAE5E,MAAM,eAAe,CAAA,GAAA,qIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,SAAS,aAAa,GAAG,CAAC;IAChC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,eAAe;gBACb,IAAI;oBACF,wBAAwB;oBACxB,MAAM,CAAC,cAAc,SAAS,GAAG,MAAM,QAAQ,GAAG,CAAC;wBACjD,MAAM,GAAG,SAAS,sBAAsB,CAAC;wBACzC,MAAM,GAAG,SAAS,kBAAkB,CAAC;qBACtC;oBAED,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE;wBACpC,MAAM,IAAI,MAAM;oBAClB;oBAEA,MAAM,gBAAgB,MAAM,aAAa,IAAI;oBAC7C,MAAM,YAAY,MAAM,SAAS,IAAI;oBAErC,aAAa,cAAc,GAAG;gFAAC,CAAC,IAAW,CAAC;gCAAE,IAAI,EAAE,SAAS;gCAAE,MAAM,EAAE,WAAW;4BAAC,CAAC;;oBACpF,SAAS,UAAU,GAAG;gFAAC,CAAC,IAAW,CAAC;gCAAE,IAAI,EAAE,MAAM;gCAAE,MAAM,EAAE,QAAQ;4BAAC,CAAC;;oBAEtE,6BAA6B;oBAC7B,IAAI,QAAQ;wBACV,cAAc;wBACd,MAAM,MAAM,MAAM,MAAM,GAAG,SAAS,eAAe,EAAE,QAAQ;wBAC7D,IAAI,CAAC,IAAI,EAAE,EAAE;4BACX,QAAQ,KAAK,CAAC;4BACd;wBACF;wBAEA,MAAM,OAAO,MAAM,IAAI,IAAI;wBAE3B,YAAY;4BACV,UAAU,KAAK,QAAQ,IAAI;4BAC3B,cAAc,KAAK,YAAY,IAAI;4BACnC,WAAW,OAAO,KAAK,SAAS,IAAI;4BACpC,QAAQ,OAAO,KAAK,MAAM,IAAI;4BAC9B,SAAS,KAAK,OAAO,IAAI;4BACzB,aAAa,KAAK,WAAW,IAAI;4BACjC,KAAK,KAAK,GAAG,IAAI;4BACjB,UAAU,KAAK,QAAQ,IAAI;4BAC3B,WAAW,KAAK,SAAS,IAAI;4BAC7B,MAAM,KAAK,IAAI,IAAI;4BACnB,OAAO,KAAK,KAAK,IAAI;4BACrB,MAAM,KAAK,IAAI,IAAI;4BACnB,aAAa,KAAK,WAAW,IAAI;4BACjC,MAAM,KAAK,IAAI,IAAI;4BACnB,UAAU,KAAK,QAAQ,IAAI;4BAC3B,KAAK,KAAK,GAAG,IAAI;4BACjB,UAAU,KAAK,QAAQ,IAAI;4BAC3B,SAAS,KAAK,OAAO,IAAI;4BACzB,cAAc,KAAK,YAAY,IAAI;4BACnC,WAAW,KAAK,SAAS,IAAI;4BAC7B,UAAU,KAAK,QAAQ,GAAG,KAAK,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG;4BACxD,cAAc,KAAK,YAAY,GAAG,KAAK,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG;4BACpE,UAAU,KAAK,QAAQ,IAAI;wBAC7B;oBACF;gBACF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,kCAAkC;gBAClD;YACF;YAEA;QACF;qCAAG;QAAC;KAAO;IAGX,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,eAAe;gBACb,IAAI;oBACF,MAAM,CAAC,cAAc,SAAS,GAAG,MAAM,QAAQ,GAAG,CAAC;wBACjD,MAAM,GAAG,SAAS,sBAAsB,CAAC;wBACzC,MAAM,GAAG,SAAS,kBAAkB,CAAC;qBACtC;oBAED,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE;wBACpC,MAAM,IAAI,MAAM;oBAClB;oBAEA,MAAM,eAAe,MAAM,aAAa,IAAI;oBAC5C,MAAM,WAAW,MAAM,SAAS,IAAI;oBAEpC,MAAM,kBAAkB,aAAa,GAAG;qFAAC,CAAC,IAAW,CAAC;gCACpD,IAAI,EAAE,SAAS;gCACf,MAAM,EAAE,WAAW;4BACrB,CAAC;;oBAED,MAAM,cAAc,SAAS,GAAG;iFAAC,CAAC,IAAW,CAAC;gCAC5C,IAAI,EAAE,MAAM;gCACZ,MAAM,EAAE,QAAQ;4BAClB,CAAC;;oBAED,aAAa;oBACb,SAAS;gBACX,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,yBAAyB;gBACzC;YACF;YAEA;QACF;qCAAG,EAAE;IAIL,MAAM,oBAAoB,CAAC,OAA2B;QACpD,YAAY,CAAA,OAAQ,CAAC;gBACnB,GAAG,IAAI;gBACP,CAAC,MAAM,EAAE;YACX,CAAC;IACH;IAEA,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,aAAa;QACjB,IAAI;YACF,MAAM,sBAAsB,CAAC;gBAC3B,IAAI,CAAC,SAAS,OAAO;gBACrB,MAAM,SAAS,KAAK,KAAK,CAAC;gBAC1B,OAAO,CAAC,MAAM,UAAU,IAAI,KAAK,QAAQ,WAAW,KAAK;YAC3D;YAEA,MAAM,UAAU;gBACd,UAAU,SAAS,QAAQ;gBAC3B,cAAc,SAAS,YAAY;gBACnC,WAAW,OAAO,SAAS,SAAS;gBACpC,aAAa,SAAS,WAAW;gBACjC,KAAK,SAAS,GAAG;gBACjB,UAAU,SAAS,QAAQ;gBAC3B,WAAW,SAAS,SAAS;gBAC7B,MAAM,SAAS,IAAI;gBACnB,OAAO,SAAS,KAAK;gBACrB,QAAQ,OAAO,SAAS,MAAM;gBAC9B,aAAa,SAAS,WAAW;gBACjC,MAAM,SAAS,IAAI;gBACnB,UAAU,SAAS,QAAQ;gBAC3B,KAAK,SAAS,GAAG;gBACjB,UAAU,SAAS,QAAQ;gBAC3B,SAAS,SAAS,OAAO;gBACzB,cAAc,SAAS,YAAY,GAAG,WAAW,SAAS,YAAY,IAAI;gBAC1E,WAAW,SAAS,SAAS,GAAG,WAAW,SAAS,SAAS,IAAI;gBACjE,UAAU,oBAAoB,SAAS,QAAQ;gBAC/C,cAAc,oBAAoB,SAAS,YAAY;gBACvD,UAAU,SAAS,QAAQ,GAAG,SAAS,SAAS,QAAQ,IAAI;YAC9D;YAEA,MAAM,MAAM,SACR,GAAG,SAAS,eAAe,EAAE,QAAQ,GACrC,GAAG,SAAS,cAAc,CAAC;YAE/B,MAAM,SAAS,SAAS,QAAQ;YAEhC,MAAM,WAAW,MAAM,MAAM,KAAK;gBAChC;gBACA,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,yCAAyC;gBACzC,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,QAAQ,KAAK,CAAC,qBAAqB;gBACnC;YACF;YAEA,uCAAuC;YACvC,kBAAkB,SAAS,qCAAqC;YAChE,WAAW,IAAM,kBAAkB,KAAK;YAExC;YACA,WAAW,IAAM,OAAO,IAAI,CAAC,eAAe;QAE9C,EAAE,OAAO,OAAY;YACnB,wDAAwD;YACxD,QAAQ,KAAK,CAAC,2BAA2B;QAC3C;IACF;IAEA,MAAM,cAAc;QAClB,YAAY;YACV,UAAU;YACV,cAAc;YACd,aAAa;YACb,KAAK;YACL,UAAU;YACV,WAAW;YACX,MAAM;YACN,OAAO;YACP,WAAW;YACX,SAAS;YACT,QAAQ;YACR,MAAM;YACN,aAAa;YACb,MAAM;YACN,UAAU;YACV,KAAK;YACL,UAAU;YACV,SAAS;YACT,cAAc;YACd,WAAW;YACX,UAAU;YACV,cAAc;YACd,UAAU;QACZ;IACF;IAEA,MAAM,eAAe;QACnB,IAAI,QAAQ,mDAAmD;YAC7D;YACA,kBAAkB;YAClB,WAAW;gBACT,OAAO,IAAI,CAAC;YACd,GAAG;QACL;IACF;IAEA,0CAA0C;IAC1C,MAAM,iBAAiB;QACrB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,SAAS,sBAAsB,CAAC;YAChE,MAAM,OAAqD,MAAM,SAAS,IAAI;YAE9E,aAAa,KAAK,GAAG,CAAC,CAAA,IAAK,CAAC;oBAC1B,IAAI,EAAE,SAAS;oBACf,MAAM,EAAE,WAAW;gBACrB,CAAC;QACH,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,MAAM,aAAa;QACjB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,SAAS,kBAAkB,CAAC;YAC5D,MAAM,OAA+C,MAAM,SAAS,IAAI;YAExE,SAAS,KAAK,GAAG,CAAC,CAAA,IAAK,CAAC;oBACtB,IAAI,EAAE,MAAM;oBACZ,MAAM,EAAE,QAAQ;gBAClB,CAAC;QACH,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;QACzC;IACF;IAGA,MAAM,mBAAmB;QACvB,IAAI,WAAW,IAAI,IAAI;YACrB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,GAAG,SAAS,sBAAsB,CAAC,EAAE;oBAChE,QAAQ;oBACR,SAAS;wBAAE,gBAAgB;oBAAmB;oBAC9C,MAAM,KAAK,SAAS,CAAC;wBAAE,aAAa,WAAW,IAAI;oBAAG;gBACxD;gBAEA,IAAI,SAAS,EAAE,EAAE;oBACf,MAAM,iBAAiB,MAAM,SAAS,IAAI;oBAE1C,MAAM,WAAW;wBACf,IAAI,eAAe,SAAS;wBAC5B,MAAM,eAAe,WAAW;oBAClC;oBAEA,MAAM,kBAAkB,yBAAyB;oBAEjD,YAAY,CAAA,OAAQ,CAAC;4BACnB,GAAG,IAAI;4BACP,WAAW,SAAS,EAAE;4BACtB,SAAS,SAAS,IAAI;wBACxB,CAAC;oBAED,cAAc;oBACd,oBAAoB;gBACtB,OAAO;oBACL,MAAM,UAAU,MAAM,SAAS,IAAI;oBACnC,QAAQ,KAAK,CAAC,0BAA0B;gBAC1C;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,yBAAyB;YACzC;QACF;IACF;IAEA,MAAM,gBAAgB;QACpB,IAAI,QAAQ,IAAI,IAAI;YAClB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,GAAG,SAAS,kBAAkB,CAAC,EAAE;oBAC5D,QAAQ;oBACR,SAAS;wBAAE,gBAAgB;oBAAmB;oBAC9C,MAAM,KAAK,SAAS,CAAC;wBAAE,UAAU,QAAQ,IAAI;oBAAG;gBAClD;gBAEA,IAAI,SAAS,EAAE,EAAE;oBACf,MAAM,cAAc,MAAM,SAAS,IAAI;oBAEvC,MAAM,WAAW;wBACf,IAAI,YAAY,MAAM;wBACtB,MAAM,YAAY,QAAQ;oBAC5B;oBAEA,MAAM,cAAc,sBAAsB;oBAE1C,YAAY,CAAA,OAAQ,CAAC;4BACnB,GAAG,IAAI;4BACP,QAAQ,SAAS,EAAE;4BACnB,MAAM,SAAS,IAAI;wBACrB,CAAC;oBAED,WAAW;oBACX,iBAAiB;gBACnB,OAAO;oBACL,MAAM,UAAU,MAAM,SAAS,IAAI;oBACnC,QAAQ,KAAK,CAAC,uBAAuB;gBACvC;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,sBAAsB;YACtC;QACF;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BAEb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAG,WAAU;0CAAsB;;;;;;;;;;;sCAItC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,SAAS,IAAM,aAAa;oCAC5B,WAAW,CAAC,8BAA8B,EAAE,cAAc,kBACtD,yDACA,qCACA;8CACL;;;;;;8CAGD,6LAAC;oCACC,SAAS,IAAM,aAAa;oCAC5B,WAAW,CAAC,8BAA8B,EAAE,cAAc,UACtD,yDACA,qCACA;8CACL;;;;;;;;;;;;wBAKF,8BACC,6LAAC;4BAAI,WAAU;sCACZ;;;;;;wBAGJ,gCACC,6LAAC;4BAAI,WAAU;sCACZ;;;;;;wBAKJ,cAAc,iCACb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;kDAEb,6LAAC;wCAAI,WAAU;;0DAEb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAM,WAAU;kEAAmD;;;;;;kEACpE,6LAAC;wDACC,MAAK;wDACL,OAAO,SAAS,QAAQ;wDACxB,UAAU,CAAC,IAAM,kBAAkB,YAAY,EAAE,MAAM,CAAC,KAAK;wDAC7D,WAAU;;;;;;;;;;;;0DAKd,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAM,WAAU;kEAAmD;;;;;;kEACpE,6LAAC;wDACC,MAAK;wDACL,OAAO,SAAS,QAAQ;wDACxB,UAAU,CAAC,IAAM,kBAAkB,YAAY,EAAE,MAAM,CAAC,KAAK;wDAC7D,WAAU;;;;;;;;;;;;0DAKd,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAM,WAAU;kEAAmD;;;;;;kEACpE,6LAAC;wDACC,MAAK;wDACL,OAAO,SAAS,SAAS;wDACzB,UAAU,CAAC,IAAM,kBAAkB,aAAa,EAAE,MAAM,CAAC,KAAK;wDAC9D,WAAU;;;;;;;;;;;;0DAKd,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAM,WAAU;kEAAmD;;;;;;kEACpE,6LAAC;wDACC,QAAQ;wDACR,MAAK;wDACL,OAAO,SAAS,YAAY;wDAC5B,UAAU,CAAC,IAAM,kBAAkB,gBAAgB,EAAE,MAAM,CAAC,KAAK;wDACjE,WAAU;;;;;;;;;;;;0DAKd,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAM,WAAU;kEAAmD;;;;;;kEACpE,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEACC,MAAK;gEACL,aAAY;gEACZ,OAAO,iBAAiB,OAAO;gEAC/B,UAAU,CAAC,IACT,oBAAoB,CAAC,OAAS,CAAC;4EAAE,GAAG,IAAI;4EAAE,SAAS,EAAE,MAAM,CAAC,KAAK;wEAAC,CAAC;gEAErE,SAAS,IAAM,uBAAuB;gEACtC,WAAW,CAAC;oEACV,IAAI,EAAE,GAAG,KAAK,WAAW,kBAAkB,MAAM,GAAG,GAAG;wEACrD,MAAM,aAAa,iBAAiB,CAAC,EAAE;wEACvC,YAAY,CAAC,OAAS,CAAC;gFACrB,GAAG,IAAI;gFACP,WAAW,WAAW,EAAE;gFACxB,SAAS,WAAW,IAAI;4EAC1B,CAAC;wEACD,oBAAoB,CAAC,OAAS,CAAC;gFAC7B,GAAG,IAAI;gFACP,SAAS,GAAG,WAAW,EAAE,CAAC,GAAG,EAAE,WAAW,IAAI,EAAE;4EAClD,CAAC;wEACD,uBAAuB;wEACvB,EAAE,cAAc,IAAI,2CAA2C;oEACjE;gEACF;gEACA,WAAU;;;;;;4DAEX,qCACC,6LAAC;gEAAI,WAAU;0EACZ,kBAAkB,MAAM,GAAG,IAC1B,kBAAkB,GAAG,CAAC,CAAC,wBACrB,6LAAC;wEAEC,WAAU;wEACV,SAAS;4EACP,YAAY,CAAC,OAAS,CAAC;oFACrB,GAAG,IAAI;oFACP,WAAW,QAAQ,EAAE;oFACrB,SAAS,QAAQ,IAAI;gFACvB,CAAC;4EACD,oBAAoB,CAAC,OAAS,CAAC;oFAC7B,GAAG,IAAI;oFACP,SAAS,GAAG,QAAQ,EAAE,CAAC,GAAG,EAAE,QAAQ,IAAI,EAAE;gFAC5C,CAAC;4EACD,uBAAuB;wEACzB;;4EAEC,QAAQ,EAAE;4EAAC;4EAAI,QAAQ,IAAI;;uEAfvB,QAAQ,EAAE;;;;8FAmBnB,6LAAC;oEAAI,WAAU;8EAAkC;;;;;;;;;;;;;;;;;kEAKzD,6LAAC;wDACC,SAAS,IAAM,oBAAoB;wDACnC,WAAU;kEACX;;;;;;;;;;;;0DAQH,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAM,WAAU;kEAAmD;;;;;;kEACpE,6LAAC;wDACC,MAAK;wDACL,OAAO,SAAS,WAAW;wDAC3B,UAAU,CAAC,IAAM,kBAAkB,eAAe,EAAE,MAAM,CAAC,KAAK;wDAChE,WAAU;;;;;;;;;;;;0DAKd,6LAAC;gDAAI,WAAU;;kEAEb,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAM,WAAU;0EAAyC;;;;;;0EAC1D,6LAAC;gEACC,MAAK;gEACL,OAAO,SAAS,GAAG;gEACnB,UAAU,CAAC,IAAM,kBAAkB,OAAO,EAAE,MAAM,CAAC,KAAK;gEACxD,WAAU;;;;;;;;;;;;kEAKd,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAM,WAAU;0EAAyC;;;;;;0EAC1D,6LAAC;gEACC,MAAK;gEACL,OAAO,SAAS,QAAQ;gEACxB,UAAU,CAAC,IAAM,kBAAkB,YAAY,EAAE,MAAM,CAAC,KAAK;gEAC7D,WAAU;;;;;;;;;;;;kEAKd,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAM,WAAU;0EAAyC;;;;;;0EAC1D,6LAAC;gEACC,MAAK;gEACL,OAAO,SAAS,OAAO;gEACvB,UAAU,CAAC,IAAM,kBAAkB,WAAW,EAAE,MAAM,CAAC,KAAK;gEAC5D,WAAU;;;;;;;;;;;;;;;;;;0DAKhB,6LAAC;gDAAI,WAAU;;kEAEb,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAM,WAAU;0EAAyC;;;;;;0EAC1D,6LAAC;gEACC,MAAK;gEACL,OAAO,SAAS,YAAY;gEAC5B,UAAU,CAAC,IAAM,kBAAkB,gBAAgB,EAAE,MAAM,CAAC,KAAK;gEACjE,WAAU;;;;;;;;;;;;kEAKd,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAM,WAAU;0EAAyC;;;;;;0EAC1D,6LAAC;gEACC,MAAK;gEACL,OAAO,SAAS,SAAS;gEACzB,UAAU,CAAC,IAAM,kBAAkB,aAAa,EAAE,MAAM,CAAC,KAAK;gEAC9D,WAAU;;;;;;;;;;;;;;;;;;;;;;;;kDAQlB,6LAAC;wCAAI,WAAU;;0DAEb,6LAAC;;kEACC,6LAAC;wDAAE,WAAU;kEAA2C;;;;;;kEACxD,6LAAC;wDAAI,WAAU;;0EAEb,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAM,WAAU;kFAAyC;;;;;;kFAC1D,6LAAC;wEACC,MAAK;wEACL,OAAO,SAAS,IAAI;wEACpB,UAAU,CAAC,IAAM,kBAAkB,QAAQ,EAAE,MAAM,CAAC,KAAK;wEACzD,WAAU;;;;;;;;;;;;0EAKd,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAM,WAAU;kFAAyC;;;;;;kFAC1D,6LAAC;wEACC,MAAK;wEACL,OAAO,SAAS,KAAK;wEACrB,UAAU,CAAC,IAAM,kBAAkB,SAAS,EAAE,MAAM,CAAC,KAAK;wEAC1D,WAAU;;;;;;;;;;;;;;;;;;;;;;;;0DAOlB,6LAAC;;kEACC,6LAAC;wDAAE,WAAU;kEAA2C;;;;;;kEACxD,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAM,WAAU;0EAAmD;;;;;;0EACpE,6LAAC;gEACC,OAAO,SAAS,MAAM;gEACtB,UAAU,CAAC;oEACT,MAAM,aAAa,SAAS,EAAE,MAAM,CAAC,KAAK;oEAC1C,MAAM,eAAe,MAAM,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;oEAC9C,YAAY,CAAA,OAAQ,CAAC;4EACnB,GAAG,IAAI;4EACP,QAAQ;4EACR,MAAM,eAAe,aAAa,IAAI,GAAG;wEAC3C,CAAC;gEACH;gEACA,WAAU;;kFAEV,6LAAC;wEAAO,OAAO;kFAAG;;;;;;oEACjB,MACE,MAAM,CAAC,CAAA,OAAQ,MAAM,MAAM,QAAQ,MAAM,MACzC,GAAG,CAAC,CAAA,qBACH,6LAAC;4EAAqB,OAAO,KAAK,EAAE;sFACjC,KAAK,IAAI;2EADC,KAAK,EAAE;;;;;;;;;;;0EAK1B,6LAAC;gEACC,SAAS,IAAM,iBAAiB;gEAChC,WAAU;0EACX;;;;;;;;;;;;;;;;;;0DAQL,6LAAC;0DACC,cAAA,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAM,WAAU;sEAAmD;;;;;;sEACpE,6LAAC;4DACC,MAAK;4DACL,OAAO,SAAS,WAAW;4DAC3B,UAAU,CAAC,IAAM,kBAAkB,eAAe,EAAE,MAAM,CAAC,KAAK;4DAChE,WAAU;;;;;;;;;;;;;;;;;0DAMhB,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAE,WAAU;kEAA2C;;;;;;kEACxD,6LAAC;wDAAI,WAAU;;0EAEb,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAM,WAAU;kFAAyC;;;;;;kFAC1D,6LAAC;wEACC,MAAK;wEACL,KAAI;wEACJ,OAAO,SAAS,GAAG;wEACnB,UAAU,CAAC,IAAM,kBAAkB,OAAO,EAAE,MAAM,CAAC,KAAK;wEACxD,WAAU;;;;;;;;;;;;0EAKd,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAM,WAAU;kFAAyC;;;;;;kFAC1D,6LAAC;wEACC,MAAK;wEACL,OAAO,SAAS,IAAI;wEACpB,UAAU,CAAC,IAAM,kBAAkB,QAAQ,EAAE,MAAM,CAAC,KAAK;wEACzD,WAAU;;;;;;;;;;;;0EAKd,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAM,WAAU;kFAAyC;;;;;;kFAC1D,6LAAC;wEACC,MAAK;wEACL,OAAO,SAAS,QAAQ;wEACxB,UAAU,CAAC,IAAM,kBAAkB,YAAY,EAAE,MAAM,CAAC,KAAK;wEAC7D,WAAU;;;;;;;;;;;;;;;;;;;;;;;;0DAOlB,6LAAC;;kEACC,6LAAC;wDAAE,WAAU;kEAA2C;;;;;;kEAGxD,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAM,WAAU;0EAAmD;;;;;;0EACpE,6LAAC;gEACC,MAAK;gEACL,OAAO,SAAS,QAAQ;gEACxB,UAAU,CAAC,IAAM,kBAAkB,YAAY,EAAE,MAAM,CAAC,KAAK;gEAC7D,WAAU;;;;;;0EAEZ,6LAAC;gEAAM,WAAU;0EAAmD;;;;;;0EACpE,6LAAC;gEACC,MAAK;gEACL,OAAO,SAAS,YAAY;gEAC5B,UAAU,CAAC,IAAM,kBAAkB,gBAAgB,EAAE,MAAM,CAAC,KAAK;gEACjE,WAAU;;;;;;;;;;;;kEAKd,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAM,WAAU;0EAAmD;;;;;;0EACpE,6LAAC;gEACC,MAAK;gEACL,OAAO,SAAS,QAAQ;gEACxB,UAAU,CAAC,IAAM,kBAAkB,YAAY,EAAE,MAAM,CAAC,KAAK;gEAC7D,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBAUvB,cAAc,yBACb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;0CAAiC;;;;;;;;;;;sCAOpD,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,SAAS;oCACT,WAAU;8CAET,aAAa,WAAW;;;;;;8CAE3B,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;8CAGD,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;YASN,kCACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAsB;;;;;;8CACpC,6LAAC;oCACC,SAAS,IAAM,oBAAoB;oCACnC,WAAU;8CACX;;;;;;;;;;;;sCAIH,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,WAAU;8CAA+C;;;;;;8CAChE,6LAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;oCAC7C,aAAY;oCACZ,WAAU;oCACV,YAAY,CAAC,IAAM,EAAE,GAAG,KAAK,WAAW;;;;;;;;;;;;sCAG5C,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,SAAS,IAAM,oBAAoB;oCACnC,WAAU;8CACX;;;;;;8CAGD,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;YASR,+BACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAsB;;;;;;8CACpC,6LAAC;oCACC,SAAS,IAAM,iBAAiB;oCAChC,WAAU;8CACX;;;;;;;;;;;;sCAIH,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAM,WAAU;8CAA+C;;;;;;8CAChE,6LAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;oCAC1C,aAAY;oCACZ,WAAU;oCACV,YAAY,CAAC,IAAM,EAAE,GAAG,KAAK,WAAW;;;;;;;;;;;;sCAG5C,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,SAAS,IAAM,iBAAiB;oCAChC,WAAU;8CACX;;;;;;8CAGD,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASf;GA92BwB;;QA2CD,qIAAA,CAAA,kBAAe;QAErB,qIAAA,CAAA,YAAS;;;KA7CF","debugId":null}}]
}