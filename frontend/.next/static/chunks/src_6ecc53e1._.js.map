{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/lib/axios.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"https://localhost:7112\", // update to your .NET API URL\r\n});\r\n\r\n// // âœ… Automatically attach JWT token\r\n// API.interceptors.request.use((config) => {\r\n//   const token = localStorage.getItem(\"token\");\r\n\r\n//   if (token) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//   }\r\n\r\n//   return config;\r\n// });\r\n\r\nexport default API;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;uCAae","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/app/%28dashboard%29/nurse-consultations/details/page.tsx"],"sourcesContent":["'use client';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSearchParams, useRouter } from 'next/navigation';\r\nimport { User, Calendar, VenetianMask, Heart, Plus, FileText, Clipboard, AlertCircle, Edit, FilePen, Printer } from 'lucide-react';\r\nimport API from '@/lib/axios';\r\n\r\ninterface PatientInfo {\r\n    name: string;\r\n    age: string;\r\n    gender: string;\r\n}\r\n\r\ninterface PatientData {\r\n    name: string;\r\n    age: string;\r\n    gender: string;\r\n    [key: string]: any;\r\n}\r\n\r\ninterface Nurse {\r\n    nurseName?: string;\r\n}\r\n\r\ninterface PatientAssignment {\r\n    assignmentId: string;\r\n    patientId: string;\r\n    date: string;\r\n    time: string;\r\n    NurseName: string;\r\n    description: string;\r\n    status?: string;\r\n    [key: string]: any;\r\n}\r\n\r\ninterface NurseNote {\r\n    id: number;\r\n    assignmentId: string;\r\n    symptoms: string;\r\n    diagnosis: string;\r\n    date: string;\r\n    NurseName?: string;\r\n}\r\n\r\ninterface Investigation {\r\n    investigationName: string;\r\n    findings: string;\r\n}\r\n\r\ninterface Medication {\r\n    medicine: string;\r\n    prescription: string;\r\n}\r\n\r\ninterface NurseReview {\r\n    id: number;\r\n    assignmentId: string;\r\n    investigations: Investigation[];\r\n    medications: Medication[];\r\n    date: string;\r\n}\r\n\r\ninterface AssignmentWithData {\r\n    assignment: PatientAssignment;\r\n    notes: NurseNote[];\r\n    reviews: NurseReview[];\r\n}\r\n\r\ninterface CreateAssignmentRequest {\r\n    patientId: string;\r\n    date: string;\r\n    time: string;\r\n    NurseName: string;\r\n    description: string;\r\n    status: string;\r\n}\r\n\r\ninterface CreateAssignmentResponse {\r\n    assignmentId: string;\r\n    [key: string]: any;\r\n}\r\n\r\nconst PatientVisitHistoryPage = () => {\r\n    const [activeTab, setActiveTab] = useState<'notes' | 'reviews'>('notes');\r\n    const [patientId, setPatientId] = useState<string>('');\r\n    const [patientInfo, setPatientInfo] = useState<PatientInfo>({\r\n        name: '',\r\n        age: '',\r\n        gender: '',\r\n    });\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string>('');\r\n    const [todayAssignmentId, setTodayAssignmentId] = useState<string | null>(null);\r\n    const [todayAssignment, setTodayAssignment] = useState<PatientAssignment | null>(null);\r\n    const [refreshKey, setRefreshKey] = useState(0);\r\n\r\n    const searchParams = useSearchParams();\r\n    const router = useRouter();\r\n\r\n    // Get patientId from URL\r\n    const [assignmentId, setAssignmentId] = useState<string | null>(null);\r\n    const [assignmentsWithData, setAssignmentsWithData] = useState<AssignmentWithData[]>([]);\r\n\r\n    useEffect(() => {\r\n        const patient = searchParams.get('patientId');\r\n        const assignment = searchParams.get('assignmentId');\r\n\r\n        if (!patient) {\r\n            setError('Patient ID is missing from the URL');\r\n            setLoading(false);\r\n            return;\r\n        }\r\n        setPatientId(patient);\r\n        setAssignmentId(assignment);\r\n    }, [searchParams]);\r\n\r\n    // New effect to watch for ?refresh=1 and trigger reload\r\n    useEffect(() => {\r\n        const refresh = searchParams.get('refresh');\r\n        if (refresh === '1') {\r\n            setRefreshKey(prev => prev + 1);\r\n\r\n            const newParams = new URLSearchParams(searchParams);\r\n            newParams.delete('refresh');\r\n\r\n            router.replace(`${window.location.pathname}${newParams.toString() ? '?' + newParams.toString() : ''}`);\r\n        }\r\n    }, [searchParams, router]);\r\n\r\n    const formatDateLocal = (dateStr: string) => {\r\n        const d = new Date(dateStr);\r\n        return d.getFullYear() + '-' + String(d.getMonth() + 1).padStart(2, '0') + '-' + String(d.getDate()).padStart(2, '0');\r\n    };\r\n\r\n    // Fetch patient data and all related consultation data\r\n    useEffect(() => {\r\n        if (!patientId) return;\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                setError('');\r\n\r\n                // 1) Fetch patient info\r\n                const patientRes = await API.get<PatientData>(`/api/Hpforms/patient/${patientId}`);\r\n                const patientData = patientRes.data || {};\r\n                setPatientInfo({\r\n                    name: patientData.name || '',\r\n                    age: patientData.age || '',\r\n                    gender: patientData.gender || ''\r\n                });\r\n\r\n                // 2) Fetch all assignments\r\n                const assignmentsRes = await API.get<any[]>(`/api/PatientAssignments/byPatientId/${patientId}`);\r\n                let patientAssignments: PatientAssignment[] = [];\r\n\r\n                if (Array.isArray(assignmentsRes.data)) {\r\n                    patientAssignments = assignmentsRes.data.map(a => ({\r\n                        ...a,\r\n                        nurseId: (a.NurseId ?? a.nurseId ?? '').toString(),\r\n                        assignmentId: a.AssignmentId ?? a.assignmentId,\r\n                    }))\r\n                        .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n                }\r\n\r\n                // 3) build assignmentsWithData: get Nurse name, notes, reviews\r\n                const assignmentsWithDataPromises = patientAssignments.map(async (assignment): Promise<AssignmentWithData> => {\r\n\r\n                    // Nurse name (graceful)\r\n                    let NurseName = '-';\r\n                    if (assignment.nurseId) {\r\n                        try {\r\n                            const docRes = await API.get<Nurse>(`/api/Nurses/by-nurse-id/${assignment.nurseId}`)\r\n                            NurseName = docRes?.data?.nurseName ?? '-';\r\n                        } catch (err) {\r\n                            console.warn(`[DEBUG] Nurse fetch failed for ${assignment.nurseId}`, err);\r\n                            NurseName = '-';\r\n                        }\r\n                    }\r\n\r\n                    // Always fetch notes\r\n                    let notes: NurseNote[] = [];\r\n                    try {\r\n                        const notesRes = await API.get<NurseNote[]>(`/api/NursesNotes/by-assignment/${assignment.assignmentId}`);\r\n                        notes = Array.isArray(notesRes.data) ? notesRes.data : [];\r\n                    } catch (err: any) {\r\n                        if (err?.response?.status !== 404) console.error(`[DEBUG] error fetching notes for ${assignment.assignmentId}`, err);\r\n                    }\r\n\r\n                    // Always fetch reviews\r\n                    let reviews: NurseReview[] = [];\r\n                    try {\r\n                        const reviewsRes = await API.get<NurseReview[]>(`/api/NursesReviews/by-assignment/${assignment.assignmentId}`);\r\n                        reviews = Array.isArray(reviewsRes.data) ? reviewsRes.data : [];\r\n                    } catch (err: any) {\r\n                        if (err?.response?.status !== 404) console.error(`[DEBUG] error fetching reviews for ${assignment.assignmentId}`, err);\r\n                    }\r\n\r\n                    return {\r\n                        assignment: {\r\n                            ...assignment,\r\n                            NurseName,\r\n                            hasNote: notes.length > 0,\r\n                            hasReview: reviews.length > 0\r\n                        },\r\n                        notes,\r\n                        reviews\r\n                    };\r\n                });\r\n\r\n                const assignmentsWithDataResult = await Promise.all(assignmentsWithDataPromises);\r\n                setAssignmentsWithData(assignmentsWithDataResult);\r\n\r\n                // 4) Detect separately when finding today's assignment:\r\n                const today = formatDateLocal(new Date().toISOString());\r\n                const todayAssignmentData = assignmentsWithDataResult.find(item =>\r\n                    formatDateLocal(item.assignment.date) === today\r\n                );\r\n                setTodayAssignmentId(todayAssignmentData?.assignment.assignmentId || null);\r\n                setTodayAssignment(todayAssignmentData?.assignment || null);\r\n\r\n            } catch (err) {\r\n                console.error('Error fetching data:', err);\r\n                setError('Failed to load patient data and consultation history');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [patientId, refreshKey]);\r\n\r\n    // Helper functions to check if new buttons should be enabled\r\n    const canAddNewNote = () => {\r\n        const today = formatDateLocal(new Date().toISOString());\r\n        const todayData = assignmentsWithData.find(item =>\r\n            formatDateLocal(item.assignment.date) === today\r\n        );\r\n        return !!todayData && todayData.notes.length === 0;\r\n    };\r\n\r\n    const canAddNewReview = () => {\r\n        const today = formatDateLocal(new Date().toISOString());\r\n        const todayData = assignmentsWithData.find(item =>\r\n            formatDateLocal(item.assignment.date) === today\r\n        );\r\n        return !!todayData && todayData.reviews.length === 0;\r\n    };\r\n\r\n    // Filter assignments to only show those with completed forms\r\n    const assignmentsWithNotes = assignmentsWithData.filter(item => item.assignment.hasNote);\r\n    const assignmentsWithReviews = assignmentsWithData.filter(item => item.assignment.hasReview);\r\n\r\n    const handleNewNote = () => {\r\n        if (canAddNewNote()) {\r\n            router.push(`/nursesnote?patientId=${patientId}&assignmentId=${todayAssignmentId}`);\r\n        } else if (!todayAssignmentId) {\r\n            setError('No assignment found for today. Please assign this patient first.');\r\n        } else if (todayAssignment?.hasNote) {\r\n            setError('Note has already been submitted for today\\'s assignment.');\r\n        }\r\n    };\r\n\r\n    const handleNewReview = () => {\r\n        if (canAddNewReview()) {\r\n            router.push(`/nursesreview?patientId=${patientId}&assignmentId=${todayAssignmentId}`);\r\n        } else if (!todayAssignmentId) {\r\n            setError('No assignment found for today. Please assign this patient first.');\r\n        } else if (todayAssignment?.hasReview) {\r\n            setError('Review has already been submitted for today\\'s assignment.');\r\n        }\r\n    };\r\n\r\n    const handleEditNote = (assignmentId: string) => {\r\n        router.push(`/nursesnote?patientId=${patientId}&assignmentId=${assignmentId}`);\r\n    };\r\n\r\n    const handleEditReview = (assignmentId: string) => {\r\n        router.push(`/nursesreview?patientId=${patientId}&assignmentId=${assignmentId}`);\r\n    };\r\n\r\n        const handlePrintNote = (assignmentId: string) => {\r\n        router.push(`/nursesnote/view?patientId=${patientId}&assignmentId=${assignmentId}`);\r\n    };\r\n\r\n    const handlePrintReview = (assignmentId: string) => {\r\n        router.push(`/nursesreview/view?patientId=${patientId}&assignmentId=${assignmentId}`);\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"min-h-screen w-full max-w-screen bg-gradient-to-br from-blue-50 to-blue-100 flex items-center justify-center\">\r\n                <div className=\"text-blue-600 text-lg\">Loading consultation data...</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"min-h-screen w-full max-w-screen bg-gradient-to-br from-blue-50 to-blue-100 flex items-center justify-center\">\r\n                <div className=\"bg-white p-6 rounded-lg shadow-lg border border-red-200\">\r\n                    <div className=\"flex items-center gap-3 text-red-600\">\r\n                        <AlertCircle className=\"w-6 h-6\" />\r\n                        <span className=\"text-lg font-medium\">{error}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen w-full max-w-screen bg-gradient-to-br from-blue-50 to-blue-100 px-0 sm:px-0 py-0\">\r\n            {/* Header */}\r\n            <div className=\"bg-gradient-to-r from-blue-900 to-blue-700 text-white p-4 text-center sm:p-6 shadow-lg\">\r\n                <div className=\"flex justify-center items-center gap-3 mb-3\">\r\n                    <h1 className=\"text-2xl sm:text-3xl font-light\">Nurse Consultations</h1>\r\n                    <Heart className=\"w-6 h-6 text-blue-200\" />\r\n                </div>\r\n                <p className=\"text-sm sm:text-lg text-blue-200\">\r\n                    Patient Consultation History & Medical Records\r\n                </p>\r\n            </div>\r\n\r\n            {/* Form */}\r\n            <div className=\"p-2 sm:p-4 lg:p-6\">\r\n                <div className=\"space-y-4 sm:space-y-6\">\r\n                    {/* Patient ID Display */}\r\n                    <div className=\"text-sm sm:text-base font-medium text-blue-900 mb-4 px-2 sm:px-4\">\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                            {/* Patient ID Display */}\r\n                            <div className=\"flex justify-start\">\r\n                                <div className=\"flex items-center gap-2 bg-blue-50 text-blue-900 px-3 py-1.5 rounded-lg shadow-sm border border-blue-200 w-fit max-w-xs\">\r\n                                    <span className=\"font-semibold\">Patient ID:</span>\r\n                                    <span className=\"text-sm\">{patientId}</span>\r\n                                </div>\r\n                            </div>\r\n                            {/* Total Visits */}\r\n                            <div className=\"flex justify-start\">\r\n                                <div className=\"flex items-center gap-2 bg-blue-50 text-blue-900 px-3 py-1.5 rounded-lg shadow-sm border border-blue-200 w-fit max-w-xs\">\r\n                                    <span className=\"font-semibold\">Total Visits:</span>\r\n                                    <span className=\"text-sm\">\r\n                                        {assignmentsWithData.filter(a => a.notes.length > 0 || a.reviews.length > 0).length}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Current Date Display */}\r\n                            <div className=\"flex justify-start\">\r\n                                <div className=\"flex items-center gap-2 bg-blue-50 text-blue-900 px-3 py-1.5 rounded-lg shadow-sm border border-blue-200 w-fit max-w-xs\">\r\n                                    <span className=\"font-semibold\">Date:</span>\r\n                                    <span className=\"text-sm\">{new Date().toLocaleDateString()}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* ðŸ‘¤ Patient Information Display */}\r\n                    <div className=\"bg-white p-4 rounded-lg shadow-sm border border-gray-200\">\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n\r\n                            {/* Name */}\r\n                            <div>\r\n                                <label className=\"block text-s font-semibold mb-1 uppercase tracking-wide\">\r\n                                    <span className=\"text-blue-900\">Name :</span>{\" \"}\r\n                                    <span className=\"text-blue-600\">\r\n                                        {patientInfo.name + \" / \" + patientInfo.age + \" / \" + patientInfo.gender}\r\n                                    </span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Tabs Navigation */}\r\n                    <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n                        <div className=\"flex border-b border-gray-200\">\r\n                            <button\r\n                                onClick={() => setActiveTab('reviews')}\r\n                                className={`flex-1 px-6 py-4 text-sm font-semibold transition-colors duration-200 flex items-center justify-center gap-2 ${activeTab === 'reviews'\r\n                                    ? 'bg-blue-600 text-white border-b-2 border-blue-600'\r\n                                    : 'bg-gray-50 text-blue-600 hover:bg-blue-50'\r\n                                    }`}\r\n                            >\r\n                                <Clipboard className=\"w-4 h-4\" />\r\n                                Reviews\r\n                            </button>\r\n                            <button\r\n                                onClick={() => setActiveTab('notes')}\r\n                                className={`flex-1 px-6 py-4 text-sm font-semibold transition-colors duration-200 flex items-center justify-center gap-2 ${activeTab === 'notes'\r\n                                    ? 'bg-blue-600 text-white border-b-2 border-blue-600'\r\n                                    : 'bg-gray-50 text-blue-600 hover:bg-blue-50'\r\n                                    }`}\r\n                            >\r\n                                <FileText className=\"w-4 h-4\" />\r\n                                Notes\r\n                            </button>\r\n                        </div>\r\n\r\n                        {/* Tab Content */}\r\n                        <div className=\"p-6\">\r\n                            {/* Reviews Tab */}\r\n                            {activeTab === 'reviews' && (\r\n                                <div>\r\n                                    <div className=\"flex justify-between items-center mb-4\">\r\n                                        <h3 className=\"text-lg font-bold text-blue-900 uppercase tracking-wide\">\r\n                                            Care Procedures taken by Visit\r\n                                        </h3>\r\n                                        <button\r\n                                            onClick={handleNewReview}\r\n                                            disabled={!canAddNewReview()}\r\n                                            className=\"flex items-center gap-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                                            title={\r\n                                                !todayAssignmentId\r\n                                                    ? \"No assignment for today. Please assign this patient first.\"\r\n                                                    : todayAssignment?.hasReview\r\n                                                        ? \"Review has already been submitted for today's assignment\"\r\n                                                        : \"Add new medical review\"\r\n                                            }\r\n                                        >\r\n                                            <Plus className=\"w-4 h-4\" />\r\n                                            New Review\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {assignmentsWithReviews.length > 0 ? (\r\n                                        <div className=\"overflow-x-auto\">\r\n                                            <table className=\"w-full border-collapse border border-gray-300\">\r\n                                                <thead>\r\n                                                    <tr className=\"bg-blue-50\">\r\n                                                        <th className=\"border border-gray-300 px-3 py-2 text-left font-semibold text-blue-900 w-[12%]\">\r\n                                                            Assignment ID\r\n                                                        </th>\r\n                                                        <th className=\"border border-gray-300 px-3 py-2 text-left font-semibold text-blue-900 w-[12%]\">\r\n                                                            Visit Date\r\n                                                        </th>\r\n                                                        <th className=\"border border-gray-300 px-3 py-2 text-left font-semibold text-blue-900 w-[15%]\">\r\n                                                            Nurse\r\n                                                        </th>\r\n                                                        <th className=\"border border-gray-300 px-3 py-2 text-center font-semibold text-blue-900 w-[18%]\">\r\n                                                            Actions\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {assignmentsWithReviews.map((item) => (\r\n                                                        <tr key={item.assignment.assignmentId} className=\"hover:bg-gray-50\">\r\n                                                            <td className=\"border border-gray-300 px-3 py-2 text-sm\">\r\n                                                                {item.assignment.assignmentId}\r\n                                                            </td>\r\n                                                            <td className=\"border border-gray-300 px-3 py-2 text-sm\">\r\n                                                                {new Date(item.assignment.date).toLocaleDateString()}\r\n                                                            </td>\r\n                                                            <td className=\"border border-gray-300 px-3 py-2 text-sm\">\r\n                                                                {item.assignment.NurseName || '-'}\r\n                                                            </td>\r\n                                                            <td className=\"border border-gray-300 px-3 py-2 text-center\">\r\n                                                                <button\r\n                                                                    onClick={() => handleEditReview(item.assignment.assignmentId)}\r\n                                                                    className=\"text-blue-600 hover:text-blue-800 p-1.5 rounded hover:bg-blue-100 transition-all\"\r\n                                                                    title=\"Edit Note\"\r\n                                                                >\r\n                                                                    <FilePen className=\"w-4 h-4\" />\r\n                                                                </button>\r\n                                                                {/* View/Print */}\r\n                                                                <button\r\n                                                                    onClick={() => handlePrintReview(item.assignment.assignmentId)}\r\n                                                                    className=\"text-green-600 hover:text-green-800 p-1.5 rounded hover:bg-green-100 transition-all ml-2\"\r\n                                                                    title=\"View / Print\"\r\n                                                                >\r\n                                                                    <Printer className=\"w-4 h-4\" />\r\n                                                                </button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    ))}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div className=\"text-center py-8 text-gray-500\">\r\n                                            <Clipboard className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" />\r\n                                            <p className=\"text-lg\">No visits found for this patient.</p>\r\n                                            <p className=\"text-sm\">This patient needs to be assigned first to create medical reviews.</p>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                            {/* Notes Tab */}\r\n                            {activeTab === 'notes' && (\r\n                                <div>\r\n                                    <div className=\"flex justify-between items-center mb-4\">\r\n                                        <h3 className=\"text-lg font-bold text-blue-900 uppercase tracking-wide\">\r\n                                            Medical Notes by Visit\r\n                                        </h3>\r\n                                        <button\r\n                                            onClick={handleNewNote}\r\n                                            disabled={!canAddNewNote()}\r\n                                            className=\"flex items-center gap-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                                            title={\r\n                                                !todayAssignmentId\r\n                                                    ? \"No assignment for today. Please assign this patient first.\"\r\n                                                    : todayAssignment?.hasNote\r\n                                                        ? \"Note has already been submitted for today's assignment\"\r\n                                                        : \"Add new consultation note\"\r\n                                            }\r\n                                        >\r\n                                            <Plus className=\"w-4 h-4\" />\r\n                                            New Note\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {assignmentsWithNotes.length > 0 ? (\r\n                                        <div className=\"overflow-x-auto\">\r\n                                            <table className=\"w-full border-collapse border border-gray-300\">\r\n                                                <thead>\r\n                                                    <tr className=\"bg-blue-50\">\r\n                                                        <th className=\"border border-gray-300 px-3 py-2 text-left font-semibold text-blue-900 w-[12%]\">\r\n                                                            Assignment ID\r\n                                                        </th>\r\n                                                        <th className=\"border border-gray-300 px-3 py-2 text-left font-semibold text-blue-900 w-[12%]\">\r\n                                                            Visit Date\r\n                                                        </th>\r\n                                                        <th className=\"border border-gray-300 px-3 py-2 text-left font-semibold text-blue-900 w-[20%]\">\r\n                                                            Diagnosis\r\n                                                        </th>\r\n                                                        <th className=\"border border-gray-300 px-3 py-2 text-left font-semibold text-blue-900 w-[15%]\">\r\n                                                            Nurse\r\n                                                        </th>\r\n                                                        <th className=\"border border-gray-300 px-3 py-2 text-center font-semibold text-blue-900 w-[18%]\">\r\n                                                            Actions\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {assignmentsWithNotes.map((item) => (\r\n                                                        <tr key={item.assignment.assignmentId} className=\"hover:bg-gray-50\">\r\n                                                            <td className=\"border border-gray-300 px-3 py-2 text-sm\">\r\n                                                                {item.assignment.assignmentId}\r\n                                                            </td>\r\n                                                            <td className=\"border border-gray-300 px-3 py-2 text-sm\">\r\n                                                                {new Date(item.assignment.date).toLocaleDateString()}\r\n                                                            </td>\r\n                                                            <td className=\"border border-gray-300 px-3 py-2 text-sm\">\r\n                                                                {item.notes.length > 0 ? (\r\n                                                                    <div className=\"space-y-1\">\r\n                                                                        {item.notes.map((note, index) => (\r\n                                                                            <div key={index} className=\"text-xs\">\r\n                                                                                {note.diagnosis}\r\n                                                                            </div>\r\n                                                                        ))}\r\n                                                                    </div>\r\n                                                                ) : (\r\n                                                                    <span className=\"text-gray-400\">No diagnosis</span>\r\n                                                                )}\r\n                                                            </td>\r\n                                                            <td className=\"border border-gray-300 px-3 py-2 text-sm\">\r\n                                                                {item.assignment.NurseName || '-'}\r\n                                                            </td>\r\n                                                            <td className=\"border border-gray-300 px-3 py-2 text-center\">\r\n                                                                <button\r\n                                                                    onClick={() => handleEditNote(item.assignment.assignmentId)}\r\n                                                                    className=\"text-blue-600 hover:text-blue-800 p-1.5 rounded hover:bg-blue-100 transition-all\"\r\n                                                                    title=\"Edit Note\"\r\n                                                                >\r\n                                                                    <FilePen className=\"w-4 h-4\" />\r\n                                                                </button>\r\n                                                                {/* View/Print */}\r\n                                                                <button\r\n                                                                    onClick={() => handlePrintNote(item.assignment.assignmentId)}\r\n                                                                    className=\"text-green-600 hover:text-green-800 p-1.5 rounded hover:bg-green-100 transition-all ml-2\"\r\n                                                                    title=\"View / Print\"\r\n                                                                >\r\n                                                                    <Printer className=\"w-4 h-4\" />\r\n                                                                </button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    ))}\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div className=\"text-center py-8 text-gray-500\">\r\n                                            <FileText className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" />\r\n                                            <p className=\"text-lg\">No visits found for this patient.</p>\r\n                                            <p className=\"text-sm\">This patient needs to be assigned first to create consultation notes.</p>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientVisitHistoryPage;"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAJA;;;;;AAiFA,MAAM,0BAA0B;;IAC5B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAuB;IAChE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;QACxD,MAAM;QACN,KAAK;QACL,QAAQ;IACZ;IAEA,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAC1E,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA4B;IACjF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,eAAe,CAAA,GAAA,qIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,yBAAyB;IACzB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAChE,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAwB,EAAE;IAEvF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6CAAE;YACN,MAAM,UAAU,aAAa,GAAG,CAAC;YACjC,MAAM,aAAa,aAAa,GAAG,CAAC;YAEpC,IAAI,CAAC,SAAS;gBACV,SAAS;gBACT,WAAW;gBACX;YACJ;YACA,aAAa;YACb,gBAAgB;QACpB;4CAAG;QAAC;KAAa;IAEjB,wDAAwD;IACxD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6CAAE;YACN,MAAM,UAAU,aAAa,GAAG,CAAC;YACjC,IAAI,YAAY,KAAK;gBACjB;yDAAc,CAAA,OAAQ,OAAO;;gBAE7B,MAAM,YAAY,IAAI,gBAAgB;gBACtC,UAAU,MAAM,CAAC;gBAEjB,OAAO,OAAO,CAAC,GAAG,OAAO,QAAQ,CAAC,QAAQ,GAAG,UAAU,QAAQ,KAAK,MAAM,UAAU,QAAQ,KAAK,IAAI;YACzG;QACJ;4CAAG;QAAC;QAAc;KAAO;IAEzB,MAAM,kBAAkB,CAAC;QACrB,MAAM,IAAI,IAAI,KAAK;QACnB,OAAO,EAAE,WAAW,KAAK,MAAM,OAAO,EAAE,QAAQ,KAAK,GAAG,QAAQ,CAAC,GAAG,OAAO,MAAM,OAAO,EAAE,OAAO,IAAI,QAAQ,CAAC,GAAG;IACrH;IAEA,uDAAuD;IACvD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6CAAE;YACN,IAAI,CAAC,WAAW;YAEhB,MAAM;+DAAY;oBACd,IAAI;wBACA,WAAW;wBACX,SAAS;wBAET,wBAAwB;wBACxB,MAAM,aAAa,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAc,CAAC,qBAAqB,EAAE,WAAW;wBACjF,MAAM,cAAc,WAAW,IAAI,IAAI,CAAC;wBACxC,eAAe;4BACX,MAAM,YAAY,IAAI,IAAI;4BAC1B,KAAK,YAAY,GAAG,IAAI;4BACxB,QAAQ,YAAY,MAAM,IAAI;wBAClC;wBAEA,2BAA2B;wBAC3B,MAAM,iBAAiB,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAQ,CAAC,oCAAoC,EAAE,WAAW;wBAC9F,IAAI,qBAA0C,EAAE;wBAEhD,IAAI,MAAM,OAAO,CAAC,eAAe,IAAI,GAAG;4BACpC,qBAAqB,eAAe,IAAI,CAAC,GAAG;+EAAC,CAAA,IAAK,CAAC;wCAC/C,GAAG,CAAC;wCACJ,SAAS,CAAC,EAAE,OAAO,IAAI,EAAE,OAAO,IAAI,EAAE,EAAE,QAAQ;wCAChD,cAAc,EAAE,YAAY,IAAI,EAAE,YAAY;oCAClD,CAAC;8EACI,IAAI;+EAAC,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,IAAI,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,IAAI,EAAE,OAAO;;wBAC7E;wBAEA,+DAA+D;wBAC/D,MAAM,8BAA8B,mBAAmB,GAAG;uGAAC,OAAO;gCAE9D,wBAAwB;gCACxB,IAAI,YAAY;gCAChB,IAAI,WAAW,OAAO,EAAE;oCACpB,IAAI;wCACA,MAAM,SAAS,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAQ,CAAC,wBAAwB,EAAE,WAAW,OAAO,EAAE;wCACnF,YAAY,QAAQ,MAAM,aAAa;oCAC3C,EAAE,OAAO,KAAK;wCACV,QAAQ,IAAI,CAAC,CAAC,+BAA+B,EAAE,WAAW,OAAO,EAAE,EAAE;wCACrE,YAAY;oCAChB;gCACJ;gCAEA,qBAAqB;gCACrB,IAAI,QAAqB,EAAE;gCAC3B,IAAI;oCACA,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAc,CAAC,+BAA+B,EAAE,WAAW,YAAY,EAAE;oCACvG,QAAQ,MAAM,OAAO,CAAC,SAAS,IAAI,IAAI,SAAS,IAAI,GAAG,EAAE;gCAC7D,EAAE,OAAO,KAAU;oCACf,IAAI,KAAK,UAAU,WAAW,KAAK,QAAQ,KAAK,CAAC,CAAC,iCAAiC,EAAE,WAAW,YAAY,EAAE,EAAE;gCACpH;gCAEA,uBAAuB;gCACvB,IAAI,UAAyB,EAAE;gCAC/B,IAAI;oCACA,MAAM,aAAa,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAgB,CAAC,iCAAiC,EAAE,WAAW,YAAY,EAAE;oCAC7G,UAAU,MAAM,OAAO,CAAC,WAAW,IAAI,IAAI,WAAW,IAAI,GAAG,EAAE;gCACnE,EAAE,OAAO,KAAU;oCACf,IAAI,KAAK,UAAU,WAAW,KAAK,QAAQ,KAAK,CAAC,CAAC,mCAAmC,EAAE,WAAW,YAAY,EAAE,EAAE;gCACtH;gCAEA,OAAO;oCACH,YAAY;wCACR,GAAG,UAAU;wCACb;wCACA,SAAS,MAAM,MAAM,GAAG;wCACxB,WAAW,QAAQ,MAAM,GAAG;oCAChC;oCACA;oCACA;gCACJ;4BACJ;;wBAEA,MAAM,4BAA4B,MAAM,QAAQ,GAAG,CAAC;wBACpD,uBAAuB;wBAEvB,wDAAwD;wBACxD,MAAM,QAAQ,gBAAgB,IAAI,OAAO,WAAW;wBACpD,MAAM,sBAAsB,0BAA0B,IAAI;+FAAC,CAAA,OACvD,gBAAgB,KAAK,UAAU,CAAC,IAAI,MAAM;;wBAE9C,qBAAqB,qBAAqB,WAAW,gBAAgB;wBACrE,mBAAmB,qBAAqB,cAAc;oBAE1D,EAAE,OAAO,KAAK;wBACV,QAAQ,KAAK,CAAC,wBAAwB;wBACtC,SAAS;oBACb,SAAU;wBACN,WAAW;oBACf;gBACJ;;YAEA;QACJ;4CAAG;QAAC;QAAW;KAAW;IAE1B,6DAA6D;IAC7D,MAAM,gBAAgB;QAClB,MAAM,QAAQ,gBAAgB,IAAI,OAAO,WAAW;QACpD,MAAM,YAAY,oBAAoB,IAAI,CAAC,CAAA,OACvC,gBAAgB,KAAK,UAAU,CAAC,IAAI,MAAM;QAE9C,OAAO,CAAC,CAAC,aAAa,UAAU,KAAK,CAAC,MAAM,KAAK;IACrD;IAEA,MAAM,kBAAkB;QACpB,MAAM,QAAQ,gBAAgB,IAAI,OAAO,WAAW;QACpD,MAAM,YAAY,oBAAoB,IAAI,CAAC,CAAA,OACvC,gBAAgB,KAAK,UAAU,CAAC,IAAI,MAAM;QAE9C,OAAO,CAAC,CAAC,aAAa,UAAU,OAAO,CAAC,MAAM,KAAK;IACvD;IAEA,6DAA6D;IAC7D,MAAM,uBAAuB,oBAAoB,MAAM,CAAC,CAAA,OAAQ,KAAK,UAAU,CAAC,OAAO;IACvF,MAAM,yBAAyB,oBAAoB,MAAM,CAAC,CAAA,OAAQ,KAAK,UAAU,CAAC,SAAS;IAE3F,MAAM,gBAAgB;QAClB,IAAI,iBAAiB;YACjB,OAAO,IAAI,CAAC,CAAC,sBAAsB,EAAE,UAAU,cAAc,EAAE,mBAAmB;QACtF,OAAO,IAAI,CAAC,mBAAmB;YAC3B,SAAS;QACb,OAAO,IAAI,iBAAiB,SAAS;YACjC,SAAS;QACb;IACJ;IAEA,MAAM,kBAAkB;QACpB,IAAI,mBAAmB;YACnB,OAAO,IAAI,CAAC,CAAC,wBAAwB,EAAE,UAAU,cAAc,EAAE,mBAAmB;QACxF,OAAO,IAAI,CAAC,mBAAmB;YAC3B,SAAS;QACb,OAAO,IAAI,iBAAiB,WAAW;YACnC,SAAS;QACb;IACJ;IAEA,MAAM,iBAAiB,CAAC;QACpB,OAAO,IAAI,CAAC,CAAC,sBAAsB,EAAE,UAAU,cAAc,EAAE,cAAc;IACjF;IAEA,MAAM,mBAAmB,CAAC;QACtB,OAAO,IAAI,CAAC,CAAC,wBAAwB,EAAE,UAAU,cAAc,EAAE,cAAc;IACnF;IAEI,MAAM,kBAAkB,CAAC;QACzB,OAAO,IAAI,CAAC,CAAC,2BAA2B,EAAE,UAAU,cAAc,EAAE,cAAc;IACtF;IAEA,MAAM,oBAAoB,CAAC;QACvB,OAAO,IAAI,CAAC,CAAC,6BAA6B,EAAE,UAAU,cAAc,EAAE,cAAc;IACxF;IAEA,IAAI,SAAS;QACT,qBACI,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;gBAAI,WAAU;0BAAwB;;;;;;;;;;;IAGnD;IAEA,IAAI,OAAO;QACP,qBACI,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAI,WAAU;;sCACX,6LAAC,uNAAA,CAAA,cAAW;4BAAC,WAAU;;;;;;sCACvB,6LAAC;4BAAK,WAAU;sCAAuB;;;;;;;;;;;;;;;;;;;;;;IAK3D;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BAEX,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAG,WAAU;0CAAkC;;;;;;0CAChD,6LAAC,uMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;;;;;;;kCAErB,6LAAC;wBAAE,WAAU;kCAAmC;;;;;;;;;;;;0BAMpD,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAI,WAAU;;sCAEX,6LAAC;4BAAI,WAAU;sCACX,cAAA,6LAAC;gCAAI,WAAU;;kDAEX,6LAAC;wCAAI,WAAU;kDACX,cAAA,6LAAC;4CAAI,WAAU;;8DACX,6LAAC;oDAAK,WAAU;8DAAgB;;;;;;8DAChC,6LAAC;oDAAK,WAAU;8DAAW;;;;;;;;;;;;;;;;;kDAInC,6LAAC;wCAAI,WAAU;kDACX,cAAA,6LAAC;4CAAI,WAAU;;8DACX,6LAAC;oDAAK,WAAU;8DAAgB;;;;;;8DAChC,6LAAC;oDAAK,WAAU;8DACX,oBAAoB,MAAM,CAAC,CAAA,IAAK,EAAE,KAAK,CAAC,MAAM,GAAG,KAAK,EAAE,OAAO,CAAC,MAAM,GAAG,GAAG,MAAM;;;;;;;;;;;;;;;;;kDAM/F,6LAAC;wCAAI,WAAU;kDACX,cAAA,6LAAC;4CAAI,WAAU;;8DACX,6LAAC;oDAAK,WAAU;8DAAgB;;;;;;8DAChC,6LAAC;oDAAK,WAAU;8DAAW,IAAI,OAAO,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAOxE,6LAAC;4BAAI,WAAU;sCACX,cAAA,6LAAC;gCAAI,WAAU;0CAGX,cAAA,6LAAC;8CACG,cAAA,6LAAC;wCAAM,WAAU;;0DACb,6LAAC;gDAAK,WAAU;0DAAgB;;;;;;4CAAc;0DAC9C,6LAAC;gDAAK,WAAU;0DACX,YAAY,IAAI,GAAG,QAAQ,YAAY,GAAG,GAAG,QAAQ,YAAY,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAQ5F,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCAAI,WAAU;;sDACX,6LAAC;4CACG,SAAS,IAAM,aAAa;4CAC5B,WAAW,CAAC,6GAA6G,EAAE,cAAc,YACnI,sDACA,6CACA;;8DAEN,6LAAC,+MAAA,CAAA,YAAS;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAGrC,6LAAC;4CACG,SAAS,IAAM,aAAa;4CAC5B,WAAW,CAAC,6GAA6G,EAAE,cAAc,UACnI,sDACA,6CACA;;8DAEN,6LAAC,iNAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;gDAAY;;;;;;;;;;;;;8CAMxC,6LAAC;oCAAI,WAAU;;wCAEV,cAAc,2BACX,6LAAC;;8DACG,6LAAC;oDAAI,WAAU;;sEACX,6LAAC;4DAAG,WAAU;sEAA0D;;;;;;sEAGxE,6LAAC;4DACG,SAAS;4DACT,UAAU,CAAC;4DACX,WAAU;4DACV,OACI,CAAC,oBACK,+DACA,iBAAiB,YACb,6DACA;;8EAGd,6LAAC,qMAAA,CAAA,OAAI;oEAAC,WAAU;;;;;;gEAAY;;;;;;;;;;;;;gDAKnC,uBAAuB,MAAM,GAAG,kBAC7B,6LAAC;oDAAI,WAAU;8DACX,cAAA,6LAAC;wDAAM,WAAU;;0EACb,6LAAC;0EACG,cAAA,6LAAC;oEAAG,WAAU;;sFACV,6LAAC;4EAAG,WAAU;sFAAiF;;;;;;sFAG/F,6LAAC;4EAAG,WAAU;sFAAiF;;;;;;sFAG/F,6LAAC;4EAAG,WAAU;sFAAiF;;;;;;sFAG/F,6LAAC;4EAAG,WAAU;sFAAmF;;;;;;;;;;;;;;;;;0EAKzG,6LAAC;0EACI,uBAAuB,GAAG,CAAC,CAAC,qBACzB,6LAAC;wEAAsC,WAAU;;0FAC7C,6LAAC;gFAAG,WAAU;0FACT,KAAK,UAAU,CAAC,YAAY;;;;;;0FAEjC,6LAAC;gFAAG,WAAU;0FACT,IAAI,KAAK,KAAK,UAAU,CAAC,IAAI,EAAE,kBAAkB;;;;;;0FAEtD,6LAAC;gFAAG,WAAU;0FACT,KAAK,UAAU,CAAC,SAAS,IAAI;;;;;;0FAElC,6LAAC;gFAAG,WAAU;;kGACV,6LAAC;wFACG,SAAS,IAAM,iBAAiB,KAAK,UAAU,CAAC,YAAY;wFAC5D,WAAU;wFACV,OAAM;kGAEN,cAAA,6LAAC,+MAAA,CAAA,UAAO;4FAAC,WAAU;;;;;;;;;;;kGAGvB,6LAAC;wFACG,SAAS,IAAM,kBAAkB,KAAK,UAAU,CAAC,YAAY;wFAC7D,WAAU;wFACV,OAAM;kGAEN,cAAA,6LAAC,2MAAA,CAAA,UAAO;4FAAC,WAAU;;;;;;;;;;;;;;;;;;uEAxBtB,KAAK,UAAU,CAAC,YAAY;;;;;;;;;;;;;;;;;;;;yEAiCrD,6LAAC;oDAAI,WAAU;;sEACX,6LAAC,+MAAA,CAAA,YAAS;4DAAC,WAAU;;;;;;sEACrB,6LAAC;4DAAE,WAAU;sEAAU;;;;;;sEACvB,6LAAC;4DAAE,WAAU;sEAAU;;;;;;;;;;;;;;;;;;wCAMtC,cAAc,yBACX,6LAAC;;8DACG,6LAAC;oDAAI,WAAU;;sEACX,6LAAC;4DAAG,WAAU;sEAA0D;;;;;;sEAGxE,6LAAC;4DACG,SAAS;4DACT,UAAU,CAAC;4DACX,WAAU;4DACV,OACI,CAAC,oBACK,+DACA,iBAAiB,UACb,2DACA;;8EAGd,6LAAC,qMAAA,CAAA,OAAI;oEAAC,WAAU;;;;;;gEAAY;;;;;;;;;;;;;gDAKnC,qBAAqB,MAAM,GAAG,kBAC3B,6LAAC;oDAAI,WAAU;8DACX,cAAA,6LAAC;wDAAM,WAAU;;0EACb,6LAAC;0EACG,cAAA,6LAAC;oEAAG,WAAU;;sFACV,6LAAC;4EAAG,WAAU;sFAAiF;;;;;;sFAG/F,6LAAC;4EAAG,WAAU;sFAAiF;;;;;;sFAG/F,6LAAC;4EAAG,WAAU;sFAAiF;;;;;;sFAG/F,6LAAC;4EAAG,WAAU;sFAAiF;;;;;;sFAG/F,6LAAC;4EAAG,WAAU;sFAAmF;;;;;;;;;;;;;;;;;0EAKzG,6LAAC;0EACI,qBAAqB,GAAG,CAAC,CAAC,qBACvB,6LAAC;wEAAsC,WAAU;;0FAC7C,6LAAC;gFAAG,WAAU;0FACT,KAAK,UAAU,CAAC,YAAY;;;;;;0FAEjC,6LAAC;gFAAG,WAAU;0FACT,IAAI,KAAK,KAAK,UAAU,CAAC,IAAI,EAAE,kBAAkB;;;;;;0FAEtD,6LAAC;gFAAG,WAAU;0FACT,KAAK,KAAK,CAAC,MAAM,GAAG,kBACjB,6LAAC;oFAAI,WAAU;8FACV,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,sBACnB,6LAAC;4FAAgB,WAAU;sGACtB,KAAK,SAAS;2FADT;;;;;;;;;yGAMlB,6LAAC;oFAAK,WAAU;8FAAgB;;;;;;;;;;;0FAGxC,6LAAC;gFAAG,WAAU;0FACT,KAAK,UAAU,CAAC,SAAS,IAAI;;;;;;0FAElC,6LAAC;gFAAG,WAAU;;kGACV,6LAAC;wFACG,SAAS,IAAM,eAAe,KAAK,UAAU,CAAC,YAAY;wFAC1D,WAAU;wFACV,OAAM;kGAEN,cAAA,6LAAC,+MAAA,CAAA,UAAO;4FAAC,WAAU;;;;;;;;;;;kGAGvB,6LAAC;wFACG,SAAS,IAAM,gBAAgB,KAAK,UAAU,CAAC,YAAY;wFAC3D,WAAU;wFACV,OAAM;kGAEN,cAAA,6LAAC,2MAAA,CAAA,UAAO;4FAAC,WAAU;;;;;;;;;;;;;;;;;;uEArCtB,KAAK,UAAU,CAAC,YAAY;;;;;;;;;;;;;;;;;;;;yEA+CrD,6LAAC;oDAAI,WAAU;;sEACX,6LAAC,iNAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;sEACpB,6LAAC;4DAAE,WAAU;sEAAU;;;;;;sEACvB,6LAAC;4DAAE,WAAU;sEAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWnE;GAjgBM;;QAemB,qIAAA,CAAA,kBAAe;QACrB,qIAAA,CAAA,YAAS;;;KAhBtB;uCAmgBS","debugId":null}}]
}