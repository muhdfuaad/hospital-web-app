{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/HOSPITALAPP/hospitalapp/src/app/%28dashboard%29/viewdoctor/doctor/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState, useCallback, useEffect } from 'react';\r\nimport { Camera, User, MapPin, Briefcase, Calendar, Phone, Mail, Stethoscope, GraduationCap, Shield, Lock, CheckCircle } from 'lucide-react';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\n\r\ninterface District {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\ninterface Panchayath {\r\n    panchayathId: number;\r\n    panchayathName: string;\r\n    dstId: number;\r\n    dstName: string;\r\n}\r\n\r\ninterface ApiResponse {\r\n    success: boolean;\r\n    message: string;\r\n    data?: any;\r\n}\r\n\r\ninterface DoctorData {\r\n    Doc_Id: string;\r\n    district: string;\r\n    panchayath: string;\r\n    ward_no: string;\r\n    DocName: string;\r\n    address: string;\r\n    gender: string;\r\n    dob: string;\r\n    age: string;\r\n    BloodGroup: string;\r\n    phone: string;\r\n    email: string;\r\n    specialization: string;\r\n    degree: string;\r\n    experience: string;\r\n    licenseNumber: string;\r\n    department: string;\r\n    Photo: File | null;\r\n    description: string;\r\n}\r\n\r\nconst DoctorRegistrationForm: React.FC = () => {\r\n    const router = useRouter();\r\n    const searchParams = useSearchParams();\r\n    const isEditMode = searchParams.get('edit') === 'true';\r\n    const doctorId = searchParams.get('id');\r\n\r\n    const [formData, setFormData] = useState<DoctorData>({\r\n        Doc_Id: '',\r\n        district: '',\r\n        panchayath: '',\r\n        ward_no: '',\r\n        DocName: '',\r\n        address: '',\r\n        gender: '',\r\n        dob: '',\r\n        age: '',\r\n        BloodGroup: '',\r\n        phone: '',\r\n        email: '',\r\n        specialization: '',\r\n        degree: '',\r\n        experience: '',\r\n        licenseNumber: '',\r\n        department: '',\r\n        Photo: null,\r\n        description: ''\r\n    });\r\n\r\n    const [errors, setErrors] = useState<Record<string, string>>({});\r\n    const [photoFileName, setPhotoFileName] = useState<string>('');\r\n    const [existingPhotoUrl, setExistingPhotoUrl] = useState<string>('');\r\n    const [districts, setDistricts] = useState<District[]>([]);\r\n    const [panchayaths, setPanchayaths] = useState<Panchayath[]>([]);\r\n    const [selectedDistrictId, setSelectedDistrictId] = useState<number | null>(null);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [submitMessage, setSubmitMessage] = useState<string>('');\r\n    const [submitStatus, setSubmitStatus] = useState<'success' | 'error' | ''>('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    // Fetch existing doctor data for edit mode\r\n    useEffect(() => {\r\n        if (isEditMode && doctorId) {\r\n            const fetchDoctorData = async () => {\r\n                setIsLoading(true);\r\n                try {\r\n                    const response = await fetch(`https://localhost:7112/api/Doctors/${doctorId}`);\r\n                    if (response.ok) {\r\n                        const doctorData = await response.json();\r\n\r\n                        // Format the date for the input field\r\n                        const formattedDob = doctorData.dob ? new Date(doctorData.dob).toISOString().split('T')[0] : '';\r\n\r\n                        setFormData({\r\n                            Doc_Id: doctorData.doc_Id || '',\r\n                            district: doctorData.district || '',\r\n                            panchayath: doctorData.panchayath || '',\r\n                            ward_no: doctorData.ward_no || '',\r\n                            DocName: doctorData.docName || '',\r\n                            address: doctorData.address || '',\r\n                            gender: doctorData.gender || '',\r\n                            dob: formattedDob,\r\n                            age: doctorData.age || '',\r\n                            BloodGroup: doctorData.bloodGroup || '',\r\n                            phone: doctorData.phone || '',\r\n                            email: doctorData.email || '',\r\n                            specialization: doctorData.specialization || '',\r\n                            degree: doctorData.degree || '',\r\n                            experience: doctorData.experience || '',\r\n                            licenseNumber: doctorData.licenseNumber || '',\r\n                            department: doctorData.department || '',\r\n                            Photo: null, // File will be handled separately\r\n                            description: doctorData.description || ''\r\n                        });\r\n\r\n                        // Set existing photo URL if available\r\n                        if (doctorData.photo) {\r\n                            setExistingPhotoUrl(`https://localhost:7112/uploads/${doctorData.photo}`);\r\n                            setPhotoFileName(doctorData.photo);\r\n                        }\r\n\r\n                        // Set selected district for panchayath filtering\r\n                        const selectedDistrict = districts.find(d => d.name === doctorData.district);\r\n                        if (selectedDistrict) {\r\n                            setSelectedDistrictId(selectedDistrict.id);\r\n                        }\r\n                    } else {\r\n                        console.error('Failed to fetch doctor data');\r\n                        setSubmitStatus('error');\r\n                        setSubmitMessage('Failed to load doctor data for editing');\r\n                    }\r\n                } catch (err) {\r\n                    console.error('Error fetching doctor data:', err);\r\n                    setSubmitStatus('error');\r\n                    setSubmitMessage('Error loading doctor data');\r\n                } finally {\r\n                    setIsLoading(false);\r\n                }\r\n            };\r\n\r\n            fetchDoctorData();\r\n        }\r\n    }, [isEditMode, doctorId, districts]);\r\n\r\n    // Fetch Doc_Id from API (only for new registrations)\r\n    useEffect(() => {\r\n        if (!isEditMode) {\r\n            const fetchDocId = async () => {\r\n                try {\r\n                    const response = await fetch('https://localhost:7112/api/Doctors/get-id');\r\n                    if (response.ok) {\r\n                        const docId = await response.text();\r\n                        setFormData(prev => ({ ...prev, Doc_Id: docId }));\r\n                    } else {\r\n                        console.error('Failed to fetch Doc_Id - API response not OK');\r\n                    }\r\n                } catch (err) {\r\n                    console.error('Failed to fetch Doc_Id', err);\r\n                }\r\n            };\r\n\r\n            fetchDocId();\r\n        }\r\n    }, [isEditMode]);\r\n\r\n    // Fetch districts and panchayaths from API\r\n    useEffect(() => {\r\n        const fetchLocations = async () => {\r\n            try {\r\n                const [dRes, pRes] = await Promise.all([\r\n                    fetch('https://localhost:7112/api/Districts'),\r\n                    fetch('https://localhost:7112/api/Panchayaths'),\r\n                ]);\r\n\r\n                if (dRes.ok && pRes.ok) {\r\n                    const dData = await dRes.json();\r\n                    const pData = await pRes.json();\r\n                    setDistricts(dData);\r\n                    setPanchayaths(pData);\r\n                } else {\r\n                    console.error('Failed to fetch districts/panchayaths - API response not OK');\r\n                }\r\n            } catch (err) {\r\n                console.error('Failed to fetch districts/panchayaths', err);\r\n            }\r\n        };\r\n\r\n        fetchLocations();\r\n    }, []);\r\n\r\n    // Update selected district when district data changes in edit mode\r\n    useEffect(() => {\r\n        if (isEditMode && formData.district && districts.length > 0) {\r\n            const selectedDistrict = districts.find(d => d.name === formData.district);\r\n            if (selectedDistrict) {\r\n                setSelectedDistrictId(selectedDistrict.id);\r\n            }\r\n        }\r\n    }, [formData.district, districts, isEditMode]);\r\n\r\n    const calculateAge = useCallback((dateOfBirth: string): string => {\r\n        if (!dateOfBirth) return '';\r\n\r\n        const dob = new Date(dateOfBirth);\r\n        const today = new Date();\r\n\r\n        let age = today.getFullYear() - dob.getFullYear();\r\n        const monthDiff = today.getMonth() - dob.getMonth();\r\n\r\n        if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < dob.getDate())) {\r\n            age--;\r\n        }\r\n\r\n        return age >= 0 ? `${age} years old` : 'Invalid date';\r\n    }, []);\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n        const { name, value } = e.target;\r\n\r\n        setFormData(prev => {\r\n            const updated = { ...prev, [name]: value };\r\n\r\n            // Auto-calculate age when DOB changes\r\n            if (name === 'dob') {\r\n                updated.age = calculateAge(value);\r\n            }\r\n\r\n            return updated;\r\n        });\r\n\r\n        // Clear error when user starts typing\r\n        if (errors[name]) {\r\n            setErrors(prev => ({ ...prev, [name]: '' }));\r\n        }\r\n    };\r\n\r\n    const handleDistrictChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const selectedName = e.target.value;\r\n        const selectedDistrict = districts.find(d => d.name === selectedName);\r\n        setSelectedDistrictId(selectedDistrict?.id || null);\r\n\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            district: selectedName,\r\n            panchayath: '', // Clear Panchayath when District changes\r\n        }));\r\n\r\n        // Clear district error if it exists\r\n        if (errors.district) {\r\n            setErrors(prev => ({ ...prev, district: '' }));\r\n        }\r\n    };\r\n\r\n    const handlePanchayathChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const selectedName = e.target.value;\r\n\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            panchayath: selectedName,\r\n        }));\r\n\r\n        // Clear panchayath error if it exists\r\n        if (errors.panchayath) {\r\n            setErrors(prev => ({ ...prev, panchayath: '' }));\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const file = e.target.files?.[0] || null;\r\n        setFormData(prev => ({ ...prev, Photo: file }));\r\n        setPhotoFileName(file ? file.name : '');\r\n\r\n        // Clear existing photo URL when new file is selected\r\n        if (file) {\r\n            setExistingPhotoUrl('');\r\n        }\r\n    };\r\n\r\n    const validateForm = (): boolean => {\r\n        const newErrors: Record<string, string> = {};\r\n        const requiredFields = ['Doc_Id', 'DocName', 'address', 'district', 'panchayath', 'ward_no', 'gender', 'dob', 'phone', 'email', 'specialization', 'degree', 'licenseNumber'];\r\n\r\n        requiredFields.forEach(field => {\r\n            if (!formData[field as keyof DoctorData]) {\r\n                newErrors[field] = 'This field is required';\r\n            }\r\n        });\r\n\r\n        // Email validation\r\n        if (formData.email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\r\n            newErrors.email = 'Please enter a valid email address';\r\n        }\r\n\r\n        // Phone validation\r\n        if (formData.phone && !/^\\d{10}$/.test(formData.phone.replace(/\\D/g, ''))) {\r\n            newErrors.phone = 'Please enter a valid 10-digit phone number';\r\n        }\r\n\r\n        // License number validation (basic format check)\r\n        if (formData.licenseNumber && formData.licenseNumber.length < 5) {\r\n            newErrors.licenseNumber = 'Please enter a valid license number';\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const handleSubmit = async (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n\r\n        setIsSubmitting(true);\r\n        setSubmitMessage('');\r\n        setSubmitStatus('');\r\n\r\n        try {\r\n            // Create FormData for file upload\r\n            const formDataToSend = new FormData();\r\n\r\n            // Append all form fields\r\n            formDataToSend.append('Doc_Id', formData.Doc_Id);\r\n            formDataToSend.append('district', formData.district);\r\n            formDataToSend.append('panchayath', formData.panchayath);\r\n            formDataToSend.append('ward_no', formData.ward_no);\r\n            formDataToSend.append('DocName', formData.DocName);\r\n            formDataToSend.append('address', formData.address);\r\n            formDataToSend.append('gender', formData.gender);\r\n\r\n            // Convert date string to proper format if needed\r\n            const dobDate = new Date(formData.dob);\r\n            formDataToSend.append('dob', dobDate.toISOString());\r\n\r\n            formDataToSend.append('age', formData.age.toString());\r\n            formDataToSend.append('bloodGroup', formData.BloodGroup);\r\n            formDataToSend.append('phone', formData.phone);\r\n            formDataToSend.append('email', formData.email);\r\n            formDataToSend.append('specialization', formData.specialization);\r\n            formDataToSend.append('degree', formData.degree);\r\n            formDataToSend.append('experience', formData.experience);\r\n            formDataToSend.append('licenseNumber', formData.licenseNumber);\r\n            formDataToSend.append('department', formData.department);\r\n            formDataToSend.append('description', formData.description);\r\n\r\n            // Append photo file if exists\r\n            if (formData.Photo) {\r\n                formDataToSend.append('Photo', formData.Photo);\r\n            }\r\n\r\n            // Determine API endpoint and method based on mode\r\n            const apiUrl = isEditMode\r\n                ? `https://localhost:7112/api/Doctors/${doctorId}`\r\n                : 'https://localhost:7112/api/Doctors';\r\n\r\n            const method = isEditMode ? 'PUT' : 'POST';\r\n\r\n            // API call\r\n            const response = await fetch(apiUrl, {\r\n                method: method,\r\n                body: formDataToSend,\r\n            });\r\n\r\n            if (response.ok) {\r\n                setSubmitStatus('success');\r\n                setSubmitMessage(isEditMode\r\n                    ? 'Doctor information updated successfully!'\r\n                    : 'Doctor registration submitted successfully!');\r\n\r\n                if (!isEditMode) {\r\n                    // Reset form after successful submission (only for new registrations)\r\n                    setFormData({\r\n                        Doc_Id: '',\r\n                        district: '',\r\n                        panchayath: '',\r\n                        ward_no: '',\r\n                        DocName: '',\r\n                        address: '',\r\n                        gender: '',\r\n                        dob: '',\r\n                        age: '',\r\n                        BloodGroup: '',\r\n                        phone: '',\r\n                        email: '',\r\n                        specialization: '',\r\n                        degree: '',\r\n                        experience: '',\r\n                        licenseNumber: '',\r\n                        department: '',\r\n                        Photo: null,\r\n                        description: ''\r\n                    });\r\n\r\n                    // Fetch new Doc_Id after successful submission\r\n                    try {\r\n                        const docIdResponse = await fetch('https://localhost:7112/api/Doctors/get-id');\r\n                        if (docIdResponse.ok) {\r\n                            const newDocId = await docIdResponse.text();\r\n                            setFormData(prev => ({ ...prev, Doc_Id: newDocId }));\r\n                        }\r\n                    } catch (err) {\r\n                        console.error('Failed to fetch new Doc_Id after reset', err);\r\n                    }\r\n                }\r\n\r\n                // Redirect to view page after successful update\r\n                if (isEditMode) {\r\n                    setTimeout(() => {\r\n                        router.push('/viewdoctor');\r\n                    }, 2000);\r\n                }\r\n\r\n            } else {\r\n                // Handle HTTP error responses\r\n                const errorResult = await response.text();\r\n                setSubmitStatus('error');\r\n                setSubmitMessage(`Failed to ${isEditMode ? 'update' : 'submit'} registration: ${response.status} ${response.statusText}`);\r\n                console.error('HTTP Error:', response.status, errorResult);\r\n            }\r\n\r\n        } catch (error) {\r\n            // Handle network or other errors\r\n            setSubmitStatus('error');\r\n            setSubmitMessage('Network error occurred. Please check your connection and try again.');\r\n            console.error('Network Error:', error);\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const inputClasses = (fieldName: string) => `\r\n    w-full px-4 py-3 border-2 rounded-xl text-base transition-all duration-300 bg-gray-50\r\n    focus:outline-none focus:border-blue-600 focus:bg-white focus:shadow-lg focus:-translate-y-0.5\r\n    ${errors[fieldName] ? 'border-red-500' : 'border-gray-200'}\r\n  `;\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"min-h-screen w-full bg-gradient-to-br from-blue-50 to-blue-100 flex items-center justify-center\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n                    <p className=\"text-blue-600 text-lg font-semibold\">Loading doctor data...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen w-full max-w-screen bg-gradient-to-br from-blue-50 to-blue-100 px-0 sm:px-0 py-0\">\r\n\r\n            {/* Header */}\r\n            <div className=\"bg-gradient-to-r from-blue-900 to-blue-700 text-white p-8 text-center\">\r\n                <div className=\"flex justify-center mb-4\">\r\n                    <Stethoscope className=\"w-16 h-16 text-blue-200\" />\r\n                </div>\r\n                <h1 className=\"text-4xl font-light mb-3\">\r\n                    {isEditMode ? 'Edit Doctor Information' : 'Doctor Registration'}\r\n                </h1>\r\n                <p className=\"text-xl text-blue-200\">\r\n                    {isEditMode ? 'Update doctor details' : 'Join our medical team of healthcare professionals'}\r\n                </p>\r\n            </div>\r\n            <div className=\"p-5\">\r\n                {/* Submit Status Message */}\r\n                {submitMessage && (\r\n                    <div className={`mb-6 p-4 rounded-xl text-center font-semibold ${submitStatus === 'success'\r\n                        ? 'bg-green-100 text-green-800 border border-green-300'\r\n                        : 'bg-red-100 text-red-800 border border-red-300'\r\n                        }`}>\r\n                        {submitMessage}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Form */}\r\n                <div className=\"bg-white rounded-b-2xl shadow-2xl\">\r\n                    <div className=\"space-y-8\">\r\n                        {/* Personal Information Section */}\r\n                        <div className=\"bg-gray-50 p-6 rounded-2xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-6\">\r\n                                <User className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-xl font-semibold text-blue-900\">Personal Information</h3>\r\n                            </div>\r\n\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Doctor ID <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"Doc_Id\"\r\n                                        value={formData.Doc_Id}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('Doc_Id')}\r\n                                        placeholder=\"Auto-generated ID\"\r\n                                        readOnly\r\n                                        style={{ backgroundColor: '#f0f4f8', cursor: 'not-allowed' }}\r\n                                    />\r\n                                    {errors.Doc_Id && <p className=\"text-red-500 text-sm mt-1\">{errors.Doc_Id}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Doctor Name <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"DocName\"\r\n                                        value={formData.DocName}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('DocName')}\r\n                                        placeholder=\"Enter full name\"\r\n                                    />\r\n                                    {errors.DocName && <p className=\"text-red-500 text-sm mt-1\">{errors.DocName}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Gender <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <select\r\n                                        name=\"gender\"\r\n                                        value={formData.gender}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('gender')}\r\n                                    >\r\n                                        <option value=\"\">Select Gender</option>\r\n                                        <option value=\"male\">Male</option>\r\n                                        <option value=\"female\">Female</option>\r\n                                        <option value=\"others\">Others</option>\r\n                                    </select>\r\n                                    {errors.gender && <p className=\"text-red-500 text-sm mt-1\">{errors.gender}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Date of Birth <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <div className=\"relative\">\r\n                                        <Calendar className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            name=\"dob\"\r\n                                            value={formData.dob}\r\n                                            onChange={handleInputChange}\r\n                                            className={`${inputClasses('dob')} pl-12`}\r\n                                        />\r\n                                    </div>\r\n                                    {errors.dob && <p className=\"text-red-500 text-sm mt-1\">{errors.dob}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Age\r\n                                    </label>\r\n                                    <div className={`\r\n                    bg-gradient-to-r from-blue-50 to-blue-100 text-blue-900 p-4 rounded-xl \r\n                    font-semibold text-center border-2 border-blue-300\r\n                    ${formData.age ? 'from-green-50 to-green-100 text-green-900 border-green-300' : ''}\r\n                    ${formData.age && formData.age.includes('Invalid') ? 'from-red-50 to-red-100 text-red-900 border-red-300' : ''}\r\n                  `}>\r\n                                        {formData.age || 'Age will be calculated automatically'}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Blood Group\r\n                                    </label>\r\n                                    <select\r\n                                        name=\"BloodGroup\"\r\n                                        value={formData.BloodGroup}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('BloodGroup')}\r\n                                    >\r\n                                        <option value=\"\">Select Blood Group</option>\r\n                                        <option value=\"A+\">A+</option>\r\n                                        <option value=\"A-\">A-</option>\r\n                                        <option value=\"B+\">B+</option>\r\n                                        <option value=\"B-\">B-</option>\r\n                                        <option value=\"AB+\">AB+</option>\r\n                                        <option value=\"AB-\">AB-</option>\r\n                                        <option value=\"O+\">O+</option>\r\n                                        <option value=\"O-\">O-</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Contact Information Section */}\r\n                        <div className=\"bg-gray-50 p-6 rounded-2xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-6\">\r\n                                <MapPin className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-xl font-semibold text-blue-900\">Contact Information</h3>\r\n                            </div>\r\n\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                <div className=\"md:col-span-2\">\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Address <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <textarea\r\n                                        name=\"address\"\r\n                                        value={formData.address}\r\n                                        onChange={handleInputChange}\r\n                                        rows={4}\r\n                                        className={inputClasses('address')}\r\n                                        placeholder=\"Enter your complete address\"\r\n                                    />\r\n                                    {errors.address && <p className=\"text-red-500 text-sm mt-1\">{errors.address}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        District <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <select\r\n                                        name=\"district\"\r\n                                        value={formData.district}\r\n                                        onChange={handleDistrictChange}\r\n                                        className={inputClasses('district')}\r\n                                    >\r\n                                        <option value=\"\">Select District</option>\r\n                                        {districts.map(d => (\r\n                                            <option key={d.id} value={d.name}>\r\n                                                {d.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.district && <p className=\"text-red-500 text-sm mt-1\">{errors.district}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Panchayath <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <select\r\n                                        name=\"panchayath\"\r\n                                        value={formData.panchayath}\r\n                                        onChange={handlePanchayathChange}\r\n                                        className={inputClasses('panchayath')}\r\n                                        disabled={!selectedDistrictId}\r\n                                    >\r\n                                        <option value=\"\">\r\n                                            {selectedDistrictId ? \"Select Panchayath\" : \"Select District First\"}\r\n                                        </option>\r\n                                        {panchayaths\r\n                                            .filter(p => p.dstId === selectedDistrictId)\r\n                                            .map(p => (\r\n                                                <option key={p.panchayathId} value={p.panchayathName}>\r\n                                                    {p.panchayathName}\r\n                                                </option>\r\n                                            ))}\r\n                                    </select>\r\n                                    {errors.panchayath && <p className=\"text-red-500 text-sm mt-1\">{errors.panchayath}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Ward Number <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"ward_no\"\r\n                                        value={formData.ward_no}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('ward_no')}\r\n                                        placeholder=\"Enter ward number\"\r\n                                    />\r\n                                    {errors.ward_no && <p className=\"text-red-500 text-sm mt-1\">{errors.ward_no}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Phone Number <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <div className=\"relative\">\r\n                                        <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                        <input\r\n                                            type=\"tel\"\r\n                                            name=\"phone\"\r\n                                            value={formData.phone}\r\n                                            onChange={handleInputChange}\r\n                                            className={`${inputClasses('phone')} pl-12`}\r\n                                            placeholder=\"Enter phone number\"\r\n                                            maxLength={10}\r\n                                            onInput={(e) => {\r\n                                                const input = e.target as HTMLInputElement;\r\n                                                input.value = input.value.replace(/\\D/g, '').slice(0, 10);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    {errors.phone && <p className=\"text-red-500 text-sm mt-1\">{errors.phone}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Email Address <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <div className=\"relative\">\r\n                                        <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            value={formData.email}\r\n                                            onChange={handleInputChange}\r\n                                            className={`${inputClasses('email')} pl-12`}\r\n                                            placeholder=\"Enter email address\"\r\n                                        />\r\n                                    </div>\r\n                                    {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Professional Information Section */}\r\n                        <div className=\"bg-gray-50 p-6 rounded-2xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-6\">\r\n                                <Briefcase className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-xl font-semibold text-blue-900\">Professional Information</h3>\r\n                            </div>\r\n\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Medical Degree <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <div className=\"relative\">\r\n                                        <GraduationCap className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"degree\"\r\n                                            value={formData.degree}\r\n                                            onChange={handleInputChange}\r\n                                            className={`${inputClasses('degree')} pl-12`}\r\n                                            placeholder=\"e.g., MBBS, MD, MS\"\r\n                                        />\r\n                                    </div>\r\n                                    {errors.degree && <p className=\"text-red-500 text-sm mt-1\">{errors.degree}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Specialization <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <select\r\n                                        name=\"specialization\"\r\n                                        value={formData.specialization}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('specialization')}\r\n                                    >\r\n                                        <option value=\"\">Select Specialization</option>\r\n                                        <option value=\"general_medicine\">General Medicine</option>\r\n                                        <option value=\"cardiology\">Cardiology</option>\r\n                                        <option value=\"neurology\">Neurology</option>\r\n                                        <option value=\"orthopedics\">Orthopedics</option>\r\n                                        <option value=\"pediatrics\">Pediatrics</option>\r\n                                        <option value=\"gynecology\">Gynecology</option>\r\n                                        <option value=\"dermatology\">Dermatology</option>\r\n                                        <option value=\"psychiatry\">Psychiatry</option>\r\n                                        <option value=\"radiology\">Radiology</option>\r\n                                        <option value=\"anesthesiology\">Anesthesiology</option>\r\n                                        <option value=\"emergency_medicine\">Emergency Medicine</option>\r\n                                        <option value=\"surgery\">Surgery</option>\r\n                                        <option value=\"oncology\">Oncology</option>\r\n                                        <option value=\"ophthalmology\">Ophthalmology</option>\r\n                                        <option value=\"ent\">ENT</option>\r\n                                        <option value=\"other\">Other</option>\r\n                                    </select>\r\n                                    {errors.specialization && <p className=\"text-red-500 text-sm mt-1\">{errors.specialization}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Medical License Number <span className=\"text-red-500\">*</span>\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"licenseNumber\"\r\n                                        value={formData.licenseNumber}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('licenseNumber')}\r\n                                        placeholder=\"Enter medical license number\"\r\n                                    />\r\n                                    {errors.licenseNumber && <p className=\"text-red-500 text-sm mt-1\">{errors.licenseNumber}</p>}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Years of Experience\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        name=\"experience\"\r\n                                        value={formData.experience}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('experience')}\r\n                                        placeholder=\"Enter years of experience\"\r\n                                        min=\"0\"\r\n                                        max=\"50\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Department\r\n                                    </label>\r\n                                    <select\r\n                                        name=\"department\"\r\n                                        value={formData.department}\r\n                                        onChange={handleInputChange}\r\n                                        className={inputClasses('department')}\r\n                                    >\r\n                                        <option value=\"\">Select Department</option>\r\n                                        <option value=\"outpatient\">Outpatient Department (OPD)</option>\r\n                                        <option value=\"inpatient\">Inpatient Department (IPD)</option>\r\n                                        <option value=\"emergency\">Emergency Department</option>\r\n                                        <option value=\"icu\">Intensive Care Unit (ICU)</option>\r\n                                        <option value=\"surgery\">Surgery Department</option>\r\n                                        <option value=\"laboratory\">Laboratory</option>\r\n                                        <option value=\"radiology\">Radiology Department</option>\r\n                                        <option value=\"pharmacy\">Pharmacy</option>\r\n                                        <option value=\"administration\">Administration</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"md:col-span-2\">\r\n                                    <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                        Professional Description\r\n                                    </label>\r\n                                    <textarea\r\n                                        name=\"description\"\r\n                                        value={formData.description}\r\n                                        onChange={handleInputChange}\r\n                                        rows={4}\r\n                                        className={inputClasses('description')}\r\n                                        placeholder=\"Brief description of your professional background, achievements, or areas of interest\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Photo Upload Section */}\r\n                        <div className=\"bg-gray-50 p-6 rounded-2xl border-l-4 border-blue-600\">\r\n                            <div className=\"flex items-center mb-6\">\r\n                                <Camera className=\"w-6 h-6 text-blue-600 mr-3\" />\r\n                                <h3 className=\"text-xl font-semibold text-blue-900\">Profile Photo</h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label className=\"block text-sm font-semibold text-blue-900 mb-2 uppercase tracking-wide\">\r\n                                    Upload Photo\r\n                                </label>\r\n                                <div className=\"border-2 border-dashed border-blue-300 rounded-xl p-8 text-center bg-blue-50 hover:bg-blue-100 transition-colors duration-300\">\r\n                                    <Camera className=\"w-12 h-12 text-blue-400 mx-auto mb-4\" />\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        name=\"Photo\"\r\n                                        onChange={handleFileChange}\r\n                                        accept=\"image/*\"\r\n                                        className=\"hidden\"\r\n                                        id=\"photo-upload\"\r\n                                    />\r\n                                    <label\r\n                                        htmlFor=\"photo-upload\"\r\n                                        className=\"cursor-pointer inline-block bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors duration-300 font-semibold\"\r\n                                    >\r\n                                        Choose Photo\r\n                                    </label>\r\n                                    {photoFileName && (\r\n                                        <p className=\"mt-3 text-blue-800 font-medium\">\r\n                                            Selected: {photoFileName}\r\n                                        </p>\r\n                                    )}\r\n                                    <p className=\"text-sm text-blue-600 mt-2\">\r\n                                        Supported formats: JPG, PNG, GIF (Max: 5MB)\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Submit Button */}\r\n                    <div className=\"mt-10 text-center \">\r\n                        <button\r\n                            onClick={handleSubmit}\r\n                            disabled={isSubmitting}\r\n                            className={`\r\n        px-12 py-4 rounded-xl font-bold text-lg text-white shadow-lg transform transition-all duration-300\r\n        ${isSubmitting\r\n                                    ? 'bg-gray-400 cursor-not-allowed'\r\n                                    : 'bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 hover:shadow-xl hover:-translate-y-1 active:translate-y-0'\r\n                                }\r\n    `}\r\n                        >\r\n                            {isSubmitting ? (\r\n                                <div className=\"flex items-center justify-center\">\r\n                                    <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-white mr-3\"></div>\r\n                                    {isEditMode ? 'Updating...' : 'Submitting...'}\r\n                                </div>\r\n                            ) : (\r\n                                isEditMode ? 'Update Doctor' : 'Register Doctor'\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"mt-6 text-center text-gray-600\">\r\n                        <p className=\"text-sm\">\r\n                            All required fields marked with <span className=\"text-red-500\">*</span> must be completed\r\n                        </p>\r\n                    </div>\r\n                    {/* Footer */}\r\n                    <div className=\"mt-8 text-center\">\r\n                        <div className=\"bg-white rounded-2xl shadow-lg p-6\">\r\n                            <div className=\"flex items-center justify-center mb-4\">\r\n                                <Shield className=\"w-8 h-8 text-blue-600 mr-3\" />\r\n                                <span className=\"text-lg font-semibold text-blue-900\">Secure Registration System</span>\r\n                            </div>\r\n                            <p className=\"text-gray-600\">\r\n                                Your information is securely processed and stored in compliance with healthcare data protection standards.\r\n                            </p>\r\n                            <div className=\"flex justify-center items-center mt-4 space-x-6 text-sm text-gray-500\">\r\n                                <div className=\"flex items-center\">\r\n                                    <Lock className=\"w-4 h-4 mr-1\" />\r\n                                    Encrypted\r\n                                </div>\r\n                                <div className=\"flex items-center\">\r\n                                    <Shield className=\"w-4 h-4 mr-1\" />\r\n                                    HIPAA Compliant\r\n                                </div>\r\n                                <div className=\"flex items-center\">\r\n                                    <CheckCircle className=\"w-4 h-4 mr-1\" />\r\n                                    Verified\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoctorRegistrationForm;"],"names":[],"mappings":"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","debugId":null}}]
}